{
    "0": "SELECT MAX(\"Free Meal Count (K-12)\" / \"Enrollment (K-12)\") as max_eligible_free_rate FROM frpm WHERE \"County Name\" = 'Alameda'\t----- bird -----\tcalifornia_schools",
    "1": "SELECT CAST(`Free Meal Count (Ages 5-17)` AS REAL) / CAST(`Enrollment (Ages 5-17)` AS REAL) AS free_rate FROM frpm WHERE `School Type` = 'Continuation Schools' ORDER BY free_rate ASC LIMIT 3\t----- bird -----\tcalifornia_schools",
    "2": "SELECT T2.\"MailZip\" FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.\"CDSCode\" = T2.\"CDSCode\" WHERE T1.\"Charter School (Y/N)\" = 1 AND T1.\"District Name\" = 'Fresno County Office of Education'\t----- bird -----\tcalifornia_schools",
    "3": "SELECT MailStreet FROM schools WHERE \"CDSCode\" = ( SELECT \"CDSCode\" FROM frpm ORDER BY \"FRPM Count (K-12)\" DESC LIMIT 1 )\t----- bird -----\tcalifornia_schools",
    "4": "SELECT T2.Ext FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.'Charter School (Y/N)' = 1 AND T1.'Charter Funding Type' = 'Directly funded' AND T2.OpenDate > '2000-01-01'\t----- bird -----\tcalifornia_schools",
    "5": "SELECT COUNT(T1.sname) FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T1.AvgScrMath < 400 AND T2.Virtual = 'F'\t----- bird -----\tcalifornia_schools",
    "6": "SELECT T2.School FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T1.NumTstTakr > 500 AND T2.Magnet = 'Y'\t----- bird -----\tcalifornia_schools",
    "7": "SELECT T2.Ext FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T1.NumGE1500 = (SELECT MAX(T1.NumGE1500) FROM satscores AS T1)\t----- bird -----\tcalifornia_schools",
    "8": "SELECT satscores.NumTstTakr FROM satscores WHERE satscores.cds = ( SELECT frpm.CDSCode FROM frpm ORDER BY frpm.\"FRPM Count (K-12)\" DESC LIMIT 1 )\t----- bird -----\tcalifornia_schools",
    "9": "SELECT COUNT(*) FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T1.AvgScrMath > 560 AND T2.FundingType = 'Directly funded'\t----- bird -----\tcalifornia_schools",
    "10": "SELECT \"FRPM Count (Ages 5-17)\" FROM frpm WHERE CDSCode = ( SELECT cds FROM satscores WHERE AvgScrRead = ( SELECT MAX(AvgScrRead) FROM satscores ) )\t----- bird -----\tcalifornia_schools",
    "11": "SELECT \"School Code\" FROM frpm WHERE \"Enrollment (K-12)\" + \"Enrollment (Ages 5-17)\" > 500\t----- bird -----\tcalifornia_schools",
    "12": "SELECT MAX(T1.\"Free Meal Count (Ages 5-17)\"/T1.\"Enrollment (Ages 5-17)\") as highest_eligible_free_rate FROM frpm AS T1 INNER JOIN (SELECT cds, NumGE1500/NumTstTakr as excellence_rate FROM satscores WHERE NumGE1500/NumTstTakr > 0.3) AS T2 ON T1.CDSCode = T2.cds\t----- bird -----\tcalifornia_schools",
    "13": "SELECT T1.Phone, T2.excellence_rate FROM schools as T1 INNER JOIN (SELECT cds, (NumGE1500 / NumTstTakr) as excellence_rate FROM satscores) as T2 ON T1.CDSCode = T2.cds ORDER BY T2.excellence_rate DESC LIMIT 3\t----- bird -----\tcalifornia_schools",
    "14": "SELECT T2.NCESSchool, T1.\"Enrollment (Ages 5-17)\" FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode ORDER BY T1.\"Enrollment (Ages 5-17)\" DESC LIMIT 5\t----- bird -----\tcalifornia_schools",
    "15": "SELECT T2.District FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T1.AvgScrRead = ( SELECT MAX(AvgScrRead) FROM satscores WHERE cds IN (SELECT CDSCode FROM schools WHERE StatusType = 'Active') ) AND T2.StatusType = 'Active'\t----- bird -----\tcalifornia_schools",
    "16": "SELECT COUNT(*) FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.\"CDSCode\" WHERE T1.cname = 'Alameda' AND T1.\"NumTstTakr\" < 100\t----- bird -----\tcalifornia_schools",
    "17": "SELECT T2.\"Charter School Number\" FROM satscores AS T1 INNER JOIN frpm AS T2 ON T1.cds = T2.CDSCode WHERE T1.AvgScrWrite = 499\t----- bird -----\tcalifornia_schools",
    "18": "SELECT COUNT(T1.\"School\") FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.\"CDSCode\" = T2.cds WHERE T2.cname = 'Contra Costa' AND T1.FundingType = 'Directly funded' AND T2.\"NumTstTakr\" <= 250The only change is in the value for the FundingType which should be 'Directly funded' instead of 'directly funded'.\t----- bird -----\tcalifornia_schools",
    "19": "SELECT T2.Ext FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T1.AvgScrMath = ( SELECT MAX(AvgScrMath) FROM satscores )\t----- bird -----\tcalifornia_schools",
    "20": "SELECT * FROM table\t----- bird -----\tcalifornia_schools",
    "21": "SELECT COUNT(*) FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.\"District Name\" = 'Los Angeles' AND T1.\"Free Meal Count (K-12)\" > 500 AND T1.\"FRPM Count (K-12)\" < 700\t----- bird -----\tcalifornia_schools",
    "22": "SELECT sname, NumTstTakr FROM satscores WHERE cname = 'Contra Costa' ORDER BY NumTstTakr DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "23": "SELECT T1.\"School\", T1.\"StreetAbr\" FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.\"CDSCode\" = T2.\"CDSCode\" WHERE ABS(T2.\"Enrollment (K-12)\" - T2.\"Enrollment (Ages 5-17)\") > 30\t----- bird -----\tcalifornia_schools",
    "24": "SELECT T1.\"School Name\" FROM frpm AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T1.\"Percent (%) Eligible Free (K-12)\" > 0.1 AND T2.NumGE1500 >= 1500\t----- bird -----\tcalifornia_schools",
    "25": "SELECT T2.School, T1.NumGE1500 FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T1.NumGE1500 = ( SELECT MAX(NumGE1500) FROM satscores WHERE cname = 'Sacramento' )\t----- bird -----\tcalifornia_schools",
    "26": "SELECT T1.School, T1.StreetAbr, T1.MailCity, T1.MailZip FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.\"School Type\" = 'High Schools (Public)' AND T1.\"District Name\" = 'Monterey' AND T2.\"FRPM Count (Ages 5-17)\" > 800\t----- bird -----\tcalifornia_schools",
    "27": "SELECT T1.\"School\", T1.\"Ext\", AVG(T2.\"AvgScrWrite\") FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.\"CDSCode\" = T2.cds WHERE T1.\"OpenDate\" > '1991' OR T1.\"ClosedDate\" < '2000' GROUP BY T1.\"School\", T1.\"Ext\"\t----- bird -----\tcalifornia_schools",
    "28": "SELECT T1.\"School Name\", T2.DOC FROM frpm as T1 INNER JOIN schools as T2 ON T1.CDSCode = T2.CDSCode WHERE (\"Enrollment (K-12)\" - \"Enrollment (Ages 5-17)\") > ( SELECT AVG((\"Enrollment (K-12)\" - \"Enrollment (Ages 5-17)\")) FROM frpm as T3 INNER JOIN schools as T4 ON T3.CDSCode = T4.CDSCode WHERE T4.FundingType = 'Locally funded' ) AND T2.FundingType = 'Locally funded'\t----- bird -----\tcalifornia_schools",
    "29": "SELECT \"OpenDate\" FROM schools WHERE \"CDSCode\" = ( SELECT \"CDSCode\" FROM frpm WHERE \"Enrollment (K-12)\" = (SELECT MAX(\"Enrollment (K-12)\") FROM frpm WHERE \"CDSCode\" IN (SELECT \"CDSCode\" FROM schools WHERE \"EILName\" = 'K-12')) )\t----- bird -----\tcalifornia_schools",
    "30": "Unfortunately, this question can't be answered as the city information is not presented in the given schema.\t----- bird -----\tcalifornia_schools",
    "31": "SELECT \"School Name\", \"Free Meal Count (K-12)\" / \"Enrollment (K-12)\" AS \"Eligible Free Rate (K-12)\" FROM frpm ORDER BY \"Enrollment (K-12)\" DESC LIMIT 10, 2\t----- bird -----\tcalifornia_schools",
    "32": "SELECT frpm.\"School Name\", (frpm.\"FRPM Count (K-12)\" / frpm.\"Enrollment (K-12)\") as FRPM_Rate FROM frpm INNER JOIN schools ON frpm.\"CDSCode\" = schools.\"CDSCode\" WHERE schools.\"SOC\" = '66' ORDER BY frpm.\"FRPM Count (K-12)\" DESC LIMIT 5\t----- bird -----\tcalifornia_schools",
    "33": "SELECT T2.Website, T2.School FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.\"Free Meal Count (Ages 5-17)\" BETWEEN 1900 AND 2000.\t----- bird -----\tcalifornia_schools",
    "34": "SELECT frpm.\"Free Meal Count (Ages 5-17)\" / frpm.\"Enrollment (Ages 5-17)\" FROM frpm INNER JOIN schools ON frpm.\"CDSCode\" = schools.\"CDSCode\" WHERE schools.AdmFName1 = 'Kacey Gibson'\t----- bird -----\tcalifornia_schools",
    "35": "SELECT T2.AdmEmail1 FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.`Charter School (Y/N)` = 1 ORDER BY T1.`Enrollment (K-12)` ASC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "36": "SELECT T1.AdmFName1 || ' ' || T1.AdmLName1 AS AdminFullName FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.\"CDSCode\" = T2.cds ORDER BY T2.NumGE1500 DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "37": "SELECT T2.Street, T2.MailCity, T2.MailZip FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T1.cds = ( SELECT cds FROM satscores ORDER BY NumGE1500 / NumTstTakr ASC LIMIT 1 )\t----- bird -----\tcalifornia_schools",
    "38": "SELECT T2.Website FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T1.cname = 'Los Angeles' AND T1.NumTstTakr BETWEEN 2000 AND 3000\t----- bird -----\tcalifornia_schools",
    "39": "SELECT AVG(T1.NumTstTakr) FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T1.cname = 'Fresno' AND T2.OpenDate BETWEEN '1980-01-01' AND '1980-12-31'\t----- bird -----\tcalifornia_schools",
    "40": "SELECT T2.Ext FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T1.cds = ( SELECT cds FROM satscores WHERE dname = 'Fresno Unified' ORDER BY AvgScrRead ASC LIMIT 1 )\t----- bird -----\tcalifornia_schools",
    "41": "SELECT T1.School, T2.AvgScrRead FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T1.Virtual = 'F' ORDER BY T2.AvgScrRead DESC LIMIT 5\t----- bird -----\tcalifornia_schools",
    "42": "SELECT T2.EdOpsCode FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T1.AvgScrMath = ( SELECT MAX(AvgScrMath) FROM satscores )\t----- bird -----\tcalifornia_schools",
    "43": "SELECT T1.AvgScrMath, T2.County FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T1.cds = ( SELECT cds FROM satscores ORDER BY ((AvgScrMath + AvgScrRead + AvgScrWrite)/3) ASC LIMIT 1 )\t----- bird -----\tcalifornia_schools",
    "44": "SELECT T1.\"AvgScrWrite\", T2.\"MailCity\" FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.\"CDSCode\" WHERE T1.cds = ( SELECT cds FROM satscores WHERE \"NumGE1500\" = (SELECT MAX(\"NumGE1500\") FROM satscores) )\t----- bird -----\tcalifornia_schools",
    "45": "SELECT T1.\"School\", AVG(T2.\"AvgScrWrite\") FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.\"CDSCode\" = T2.cds WHERE T1.\"AdmFName1\" = 'Ricci' AND T1.\"AdmLName1\" = 'Ulrich' GROUP BY T1.\"School\"\t----- bird -----\tcalifornia_schools",
    "46": "SELECT T1.\"School\", MAX(T2.\"Enrollment (K-12)\") FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.\"CDSCode\" = T2.\"CDSCode\" WHERE T1.\"DOC\" = '31' AND T1.\"GSserved\" = 'K-12'\t----- bird -----\tcalifornia_schools",
    "47": "SELECT COUNT(*)/12 as monthly_avg FROM schools WHERE DOC = '52' AND strftime('%Y', OpenDate) = '1980'\t----- bird -----\tcalifornia_schools",
    "48": "SELECT (CAST(SUM(CASE WHEN DOC = '54' THEN 1 ELSE 0 END) AS REAL) / CAST(SUM(CASE WHEN DOC = '52' THEN 1 ELSE 0 END) AS REAL)) AS ratio FROM schools WHERE (DOC = '52' OR DOC = '54') AND StatusType = 'Merged'\t----- bird -----\tcalifornia_schools",
    "49": "SELECT School, ClosedDate FROM schools WHERE StatusType = 'Closed' AND DOC = ( SELECT DOC FROM ( SELECT DOC, COUNT(*) as num_closed_schools FROM schools WHERE StatusType = 'Closed' GROUP BY DOC ORDER BY num_closed_schools DESC LIMIT 1 ) )\t----- bird -----\tcalifornia_schools",
    "50": "SELECT T1.sname, T2.MailStreet FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T1.cds = ( SELECT cds FROM satscores ORDER BY AvgScrMath DESC LIMIT 5, 1 )\t----- bird -----\tcalifornia_schools",
    "51": "SELECT T2.MailStreet, T1.sname FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T1.AvgScrRead = (SELECT MIN(AvgScrRead) FROM satscores)\t----- bird -----\tcalifornia_schools",
    "52": "SELECT COUNT(DISTINCT s.sname) FROM satscores s JOIN schools sc ON s.cds = sc.\"CDSCode\" WHERE (s.\"AvgScrRead\" + s.\"AvgScrMath\" + s.\"AvgScrWrite\") >= 1500 AND sc.\"MailCity\" = 'Lakeport'\t----- bird -----\tcalifornia_schools",
    "53": "SELECT SUM(T1.NumTstTakr) FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T2.MailCity = 'Fresno'\t----- bird -----\tcalifornia_schools",
    "54": "SELECT School, MailZip FROM schools WHERE AdmLName1 = 'Avetik Atoian'\t----- bird -----\tcalifornia_schools",
    "55": "SELECT     (SUM(CASE WHEN MailCity = 'Colusa' THEN 1 ELSE 0 END) * 1.0 /     SUM(CASE WHEN MailCity = 'Humboldt' THEN 1 ELSE 0 END)) AS RatioFROM schools WHERE MailState = 'CA';\t----- bird -----\tcalifornia_schools",
    "56": "SELECT * FROM table\t----- bird -----\tcalifornia_schools",
    "57": "SELECT T2.StreetAbr, T2.Ext FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T1.cds = ( SELECT cds FROM satscores ORDER BY AvgScrWrite DESC LIMIT 332, 1 )\t----- bird -----\tcalifornia_schools",
    "58": "SELECT School, Ext FROM schools WHERE MailZip = '95203-3704'\t----- bird -----\tcalifornia_schools",
    "59": "SELECT School, Website FROM schools WHERE (AdmFName1 || ' ' || AdmLName1) IN ('Mike Larson', 'Dante Alvarez')\t----- bird -----\tcalifornia_schools",
    "60": "SELECT Website FROM schools WHERE Virtual = 'P' AND Charter = 1 AND MailCity = 'San Joaquin'\t----- bird -----\tcalifornia_schools",
    "61": "SELECT COUNT(*) FROM schools WHERE District = 'Hickman' AND DOC = '52' AND Charter = '1'\t----- bird -----\tcalifornia_schools",
    "62": "SELECT COUNT(*) FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.Charter = 0 AND T1.'Percent (%) Eligible Free (K-12)' < 0.18 AND T2.DOC = '19'\t----- bird -----\tcalifornia_schools",
    "63": "SELECT AdmFName1, AdmLName1, School FROM schools WHERE Charter = 1 AND CharterNum = '00D2'\t----- bird -----\tcalifornia_schools",
    "64": "SELECT COUNT(*) FROM schools WHERE MailCity = 'Hickman' AND CharterNum = '00D4'\t----- bird -----\tcalifornia_schools",
    "65": "SELECT (CAST(COUNT(*) AS FLOAT) * 100 / (SELECT COUNT(*) FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.\"County Name\" = 'Santa Clara')) FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.\"County Name\" = 'Santa Clara' AND T2.FundingType = 'Locally funded'\t----- bird -----\tcalifornia_schools",
    "66": "SELECT COUNT(*) FROM schools WHERE OpenDate BETWEEN '2000-01-01' AND '2005-12-31' AND FundingType = 'Directly funded' AND DOC = '00'\t----- bird -----\tcalifornia_schools",
    "67": "SELECT COUNT(*) FROM schools WHERE ClosedDate LIKE '1989%' AND StatusType = 'Closed' AND District = 'Community College District' AND MailCity = 'San Francisco'\t----- bird -----\tcalifornia_schools",
    "68": "SELECT DOC, COUNT(*) as num_closures FROM schools WHERE SOC = '11' AND ClosedDate >= '1980-01-01' AND ClosedDate <= '1989-12-31' GROUP BY DOC ORDER BY num_closures DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "69": "SELECT NCESDist FROM schools WHERE SOC = '31'\t----- bird -----\tcalifornia_schools",
    "70": "SELECT COUNT(*) FROM schools WHERE (StatusType = 'Active' OR StatusType = 'Closed') AND District LIKE '%Alpine% District Community Day School%' However, without more information or sample data, it's hard to say for sure if this query would accurately answer the question.\t----- bird -----\tcalifornia_schools",
    "71": "SELECT NCESDist, School FROM schools WHERE Magnet = 0 AND MailCity = 'Fresno'\t----- bird -----\tcalifornia_schools",
    "72": "SELECT SUM(T1.\"Enrollment (Ages 5-17)\") FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.\"CDSCode\" = T2.\"CDSCode\" WHERE T2.EdOpsCode = 'SSS' AND T2.School = 'Fremont' AND T1.\"2013-14 CALPADS Fall 1 Certification Status\" = 1\t----- bird -----\tcalifornia_schools",
    "73": "SELECT \"FRPM Count (Ages 5-17)\" FROM frpm INNER JOIN schools ON frpm.\"CDSCode\" = schools.\"CDSCode\" WHERE schools.SOC = '11' AND schools.MailStreet = 'PO Box 1040'\t----- bird -----\tcalifornia_schools",
    "74": "SELECT GSoffered FROM schools WHERE NCESDist = '613360' AND EdOpsCode = 'SPECON'\t----- bird -----\tcalifornia_schools",
    "75": "SELECT T1.School, T1.EILName FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.\"County Code\" = '37'\t----- bird -----\tcalifornia_schools",
    "76": "SELECT T2.MailCity FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.EILCode = 'HS' AND T2.GSoffered = '9-12' AND T2.GSserved = '9-12' AND T1.\"County Name\" = 'Merced'\t----- bird -----\tcalifornia_schools",
    "77": "SELECT T1.School, T2.\"Percent (%) Eligible FRPM (Ages 5-17)\" FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.GSserved = 'Kindergarten to 9th grade' AND T1.\"District Name\" = 'Los Angeles'\t----- bird -----\tcalifornia_schools",
    "78": "SELECT GSserved, COUNT(*) as count FROM schools WHERE City = 'Adelanto' GROUP BY GSserved ORDER BY count DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "79": "SELECT MailCity, COUNT(*) as num_schools FROM schools WHERE (MailCity = 'San Diego' OR MailCity = 'Santa Barbara') AND Virtual = 'F' GROUP BY MailCity ORDER BY num_schools DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "80": "SELECT School, Latitude, EILName FROM schools ORDER BY Latitude DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "81": "SELECT School, MailCity, GSoffered FROM schools ORDER BY Latitude LIMIT 1\t----- bird -----\tcalifornia_schools",
    "82": "SELECT GSoffered FROM schools ORDER BY Longitude DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "83": "SELECT MailCity, COUNT(*) as num_schools FROM schools WHERE Magnet = 1 AND GSserved = 'K-8' GROUP BY MailCity\t----- bird -----\tcalifornia_schools",
    "84": "SELECT AdmFName1, NCESDist, COUNT(*) as count FROM schools GROUP BY AdmFName1 ORDER BY count DESC LIMIT 2\t----- bird -----\tcalifornia_schools",
    "85": "SELECT T1.\"Percent (%) Eligible Free (K-12)\", T1.\"District Code\" FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.\"CDSCode\" = T2.\"CDSCode\" WHERE T2.AdmFName1 = 'Alusine'\t----- bird -----\tcalifornia_schools",
    "86": "SELECT T1.\"AdmLName1\", T2.\"District Name\", T2.\"County Name\", T2.\"School Name\" FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.\"CDSCode\" = T2.\"CDSCode\" WHERE T1.\"CharterNum\" = '0040'\t----- bird -----\tcalifornia_schools",
    "87": "SELECT AdmEmail1 FROM schools WHERE OpenDate BETWEEN '2009-01-01' AND '2010-12-31' AND SOC = '62' AND DOC = '54'\t----- bird -----\tcalifornia_schools",
    "88": "SELECT T1.AdmEmail1, T2.sname FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T2.NumGE1500 = ( SELECT MAX(NumGE1500) FROM satscores )\t----- bird -----\tcalifornia_schools",
    "89": "SELECT COUNT(T1.account_id) FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.A3 = 'east Bohemia' AND T1.frequency = 'POPLATEK PO OBRATU'\t----- bird -----\tfinancial",
    "90": "SELECT COUNT(*) FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id INNER JOIN loan AS T3 ON T1.account_id = T3.account_id WHERE T2.A3 = 'Prague'\t----- bird -----\tfinancial",
    "91": "SELECT AVG(A12) AS 'Average Unemployment Rate 1995', AVG(A13) AS 'Average Unemployment Rate 1996' FROM district;\t----- bird -----\tfinancial",
    "92": "SELECT COUNT(DISTINCT district_id) FROM district WHERE A11 > 6000 AND A11 < 10000 AND district_id IN (SELECT district_id FROM client WHERE gender = 'F')\t----- bird -----\tfinancial",
    "93": "SELECT COUNT(*) FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.gender = 'M' AND T2.A3 = 'North Bohemia' AND T2.A11 > 8000\t----- bird -----\tfinancial",
    "94": "SELECT disp.account_id, (SELECT MAX(A11) FROM district) - district.A11 AS gap FROM disp INNER JOIN client ON disp.client_id = client.client_id INNER JOIN district ON client.district_id = district.district_id WHERE client.client_id = (SELECT client_id FROM client WHERE gender = 'F' ORDER BY birth_date ASC LIMIT 1)\t----- bird -----\tfinancial",
    "95": "SELECT T1.account_id FROM disp AS T1 INNER JOIN client AS T2 ON T1.client_id = T2.client_id INNER JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T2.client_id = ( SELECT client_id FROM client ORDER BY birth_date DESC LIMIT 1 ) AND T3.A11 = ( SELECT MAX(A11) FROM district )\t----- bird -----\tfinancial",
    "96": "SELECT COUNT(T1.client_id) FROM disp AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T2.frequency = 'POPLATEK TYDNE' AND T1.type = 'OWNER'\t----- bird -----\tfinancial",
    "97": "SELECT T1.client_id FROM disp AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T1.type = 'DISPONENT' AND T2.frequency = 'POPLATEK PO OBRATU'\t----- bird -----\tfinancial",
    "98": "SELECT loan.account_id FROM loan INNER JOIN account ON loan.account_id = account.account_id WHERE loan.date LIKE '1997-%' AND account.frequency = 'POPLATEK TYDNE' AND loan.amount = (SELECT MIN(amount) FROM loan)\t----- bird -----\tfinancial",
    "99": "SELECT T1.account_id FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T1.duration > 12 AND T2.date LIKE '1993%' ORDER BY T1.amount DESC LIMIT 1\t----- bird -----\tfinancial",
    "100": "SELECT COUNT(DISTINCT T1.account_id) FROM disp AS T1 INNER JOIN client AS T2 ON T1.client_id = T2.client_id INNER JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T2.gender = 'F' AND T2.birth_date < '1950-01-01' AND T3.A2 = 'Sokolov'\t----- bird -----\tfinancial",
    "101": "SELECT T1.account_id, MIN(T2.date) FROM account AS T1 INNER JOIN trans AS T2 ON T1.account_id = T2.account_id WHERE T2.date LIKE '1995%' GROUP BY T1.account_id\t----- bird -----\tfinancial",
    "102": "SELECT DISTINCT T1.account_id FROM account AS T1 INNER JOIN trans AS T2 ON T1.account_id = T2.account_id WHERE T1.date < '1997-01-01' AND T2.amount > 3000\t----- bird -----\tfinancial",
    "103": "SELECT T2.client_id FROM card AS T1 INNER JOIN disp AS T2 ON T1.disp_id = T2.disp_id WHERE T1.issued = '1994-03-03'\t----- bird -----\tfinancial",
    "104": "SELECT account.date FROM account INNER JOIN trans ON account.account_id = trans.account_id WHERE trans.amount = 840 AND trans.date = '1998/10/14'\t----- bird -----\tfinancial",
    "105": "SELECT account.district_id FROM loan INNER JOIN account ON loan.account_id = account.account_id WHERE loan.date = '1994-08-25'\t----- bird -----\tfinancial",
    "106": "SELECT MAX(T1.amount) FROM trans AS T1 INNER JOIN disp AS T2 ON T1.account_id = T2.account_id WHERE T2.client_id = ( SELECT client_id FROM disp WHERE disp_id = (SELECT disp_id FROM card WHERE issued = '1996-10-21') )\t----- bird -----\tfinancial",
    "107": "SELECT gender FROM client WHERE client_id = ( SELECT client_id FROM disp WHERE account_id = ( SELECT account_id FROM account WHERE district_id = ( SELECT district_id FROM district WHERE A11 = ( SELECT MAX(A11) FROM district ) ) ) ORDER BY birth_date ASC LIMIT 1 )\t----- bird -----\tfinancial",
    "108": "SELECT T2.amount FROM disp AS T1 INNER JOIN trans AS T2 ON T1.account_id = T2.account_id WHERE T1.client_id = ( SELECT client_id FROM disp WHERE account_id = ( SELECT account_id FROM loan WHERE amount = ( SELECT MAX(amount) FROM loan ) ) ) ORDER BY T2.date ASC LIMIT 1\t----- bird -----\tfinancial",
    "109": "SELECT COUNT(T1.client_id) FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN account AS T3 ON T2.account_id = T3.account_id INNER JOIN district AS T4 ON T3.district_id = T4.district_id WHERE T1.gender = 'F' AND T4.A2 = 'Jesenik'\t----- bird -----\tfinancial",
    "110": "SELECT T1.disp_id FROM disp as T1 INNER JOIN trans as T2 ON T1.account_id = T2.account_id WHERE T2.amount = 5100 AND T2.date = '1998/9/2'\t----- bird -----\tfinancial",
    "111": "SELECT COUNT(T1.account_id) FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.A2 = 'Litomerice' AND T1.date LIKE '1996%'\t----- bird -----\tfinancial",
    "112": "SELECT T3.district_id FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN account AS T3 ON T2.account_id = T3.account_id WHERE T1.gender = 'F' AND T1.birth_date = '1976-01-29'\t----- bird -----\tfinancial",
    "113": "SELECT T3.birth_date FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN client AS T3 ON T2.district_id = T3.district_id WHERE T1.amount = 98832 AND T1.date = '1996-01-03'\t----- bird -----\tfinancial",
    "114": "SELECT account_id FROM disp WHERE client_id = ( SELECT client_id FROM disp INNER JOIN account ON disp.account_id = account.account_id INNER JOIN district ON account.district_id = district.district_id WHERE district.A3 = 'Prague' ORDER BY account.date ASC LIMIT 1 )\t----- bird -----\tfinancial",
    "115": "SELECT (COUNT(CASE WHEN gender = 'M' THEN 1 END) * 100.0 / COUNT(*)) AS male_percentage FROM client INNER JOIN district ON client.district_id = district.district_id WHERE district.district_id = ( SELECT district_id FROM district WHERE A3 = 'south Bohemia' ORDER BY A4 DESC LIMIT 1 )\t----- bird -----\tfinancial",
    "116": "SELECT ((T2.balance - T1.balance) / T1.balance) * 100 AS increase_rate FROM (SELECT balance FROM trans WHERE account_id = (SELECT account_id FROM loan WHERE date = '1993/7/5' LIMIT 1) AND date = '1993/3/22') AS T1, (SELECT balance FROM trans WHERE account_id = (SELECT account_id FROM loan WHERE date = '1993/7/5' LIMIT 1) AND date = '1998/12/27') AS T2\t----- bird -----\tfinancial",
    "117": "SELECT (SUM(CASE WHEN status = 'A' THEN amount ELSE 0 END) * 1.0 / SUM(amount)) * 100 as percentage FROM loan\t----- bird -----\tfinancial",
    "118": "SELECT CAST((SELECT COUNT(*) FROM loan WHERE amount < 100000 AND status = 'C') AS REAL) / CAST((SELECT COUNT(*) FROM loan WHERE amount < 100000) AS REAL) * 100 AS percentageFROM loanLIMIT 1\t----- bird -----\tfinancial",
    "119": "SELECT T1.account_id, T2.A2, T2.A3 FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.date LIKE '1993%' AND T1.frequency = 'POPLATEK PO OBRATU'\t----- bird -----\tfinancial",
    "120": "SELECT A.account_id, A.frequency FROM account AS A INNER JOIN disp AS D ON A.account_id = D.account_id INNER JOIN district AS DI ON A.district_id = DI.district_id WHERE A.date BETWEEN '1995-12-31' AND '2000-01-01' AND DI.A2 = 'east Bohemia'\t----- bird -----\tfinancial",
    "121": "SELECT T1.account_id, T1.date FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.A2 = 'Prachatice'\t----- bird -----\tfinancial",
    "122": "SELECT T3.A2, T3.A3 FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T1.loan_id = 4990\t----- bird -----\tfinancial",
    "123": "SELECT T1.account_id, T3.A2 as district, T3.A3 as region FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T1.amount > 300000\t----- bird -----\tfinancial",
    "124": "SELECT L.loan_id, D.A3, D.A11 FROM loan AS L JOIN account AS A ON L.account_id = A.account_id JOIN district AS D ON A.district_id = D.district_id WHERE L.duration = 60\t----- bird -----\tfinancial",
    "125": "SELECT T3.A2, ((T3.A13 - T3.A12) / T3.A12) * 100 as increment_rate FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T1.status = 'D'\t----- bird -----\tfinancial",
    "126": "SELECT (CAST((SELECT COUNT(*) FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.A2 = 'Decin' AND T1.date LIKE '1993%') AS REAL) / (SELECT COUNT(*) FROM account WHERE date LIKE '1993%')) * 100\t----- bird -----\tfinancial",
    "127": "SELECT account_id FROM account WHERE frequency = 'POPLATEK MESICNE'\t----- bird -----\tfinancial",
    "128": "SELECT account.district_id, COUNT(*) as Female_Account_Holders FROM account JOIN disp ON account.account_id = disp.account_id JOIN client ON disp.client_id = client.client_id WHERE client.gender = 'F' GROUP BY account.district_id ORDER BY Female_Account_Holders DESC LIMIT 10\t----- bird -----\tfinancial",
    "129": "SELECT A2, amount FROM district JOIN (account JOIN trans ON account.account_id = trans.account_id) ON district.district_id = account.district_id WHERE trans.type = 'VYDAJ' AND date LIKE '1996-01%' ORDER BY amount DESC LIMIT 10\t----- bird -----\tfinancial",
    "130": "SELECT (SELECT COUNT(account_id) FROM account WHERE district_id IN (SELECT district_id FROM district WHERE A3 = 'South Bohemia')) - (SELECT COUNT(disp_id) FROM disp WHERE account_id IN (SELECT account_id FROM account WHERE district_id IN (SELECT district_id FROM district WHERE A3 = 'South Bohemia')) AND disp_id IN (SELECT disp_id FROM card))\t----- bird -----\tfinancial",
    "131": "SELECT T1.district_id, COUNT(*) as active_loans FROM account AS T1 INNER JOIN loan AS T2 ON T1.account_id = T2.account_id WHERE T2.status IN ('C', 'D') GROUP BY T1.district_id ORDER BY active_loans DESC LIMIT 1\t----- bird -----\tfinancial",
    "132": "SELECT AVG(T3.amount) FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN loan AS T3 ON T2.account_id = T3.account_id WHERE T1.gender = 'M'\t----- bird -----\tfinancial",
    "133": "SELECT district_id, A2 FROM district ORDER BY A13 DESC\t----- bird -----\tfinancial",
    "134": "SELECT COUNT(account_id) FROM account WHERE district_id = ( SELECT district_id FROM district ORDER BY A16 DESC LIMIT 1 )\t----- bird -----\tfinancial",
    "135": "SELECT COUNT(DISTINCT T1.account_id) FROM trans AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T1.operation = 'VYBER KARTOU' AND T1.balance < 0 AND T2.frequency = 'POPLATEK MESICNE'\t----- bird -----\tfinancial",
    "136": "SELECT COUNT(T1.loan_id) FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T1.amount >= 250000 AND T2.frequency = 'POPLATEK MESICNE' AND T1.date BETWEEN '1995-01-01' AND '1997-12-31'\t----- bird -----\tfinancial",
    "137": "SELECT COUNT(T1.account_id) FROM account AS T1 INNER JOIN loan AS T2 ON T1.account_id = T2.account_id WHERE (T2.status = 'C' OR T2.status = 'D') AND T1.district_id = 1\t----- bird -----\tfinancial",
    "138": "SELECT COUNT(DISTINCT T3.client_id) FROM district AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id INNER JOIN disp AS T3 ON T2.account_id = T3.account_id INNER JOIN client AS T4 ON T3.client_id = T4.client_id WHERE T1.district_id = ( SELECT district_id FROM district ORDER BY A15 DESC LIMIT 1 OFFSET 1 ) AND T4.gender = 'M'\t----- bird -----\tfinancial",
    "139": "SELECT COUNT(T1.card_id) FROM card AS T1 INNER JOIN disp AS T2 ON T1.disp_id = T2.disp_id WHERE T1.type = 'gold' AND T2.type = 'DISPONENT'\t----- bird -----\tfinancial",
    "140": "SELECT COUNT(T1.account_id) FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.A2 = 'Pisek'\t----- bird -----\tfinancial",
    "141": "SELECT A2 FROM district WHERE district_id IN (SELECT district_id FROM account WHERE account_id IN (SELECT account_id FROM trans WHERE amount>10000 AND date LIKE '1997%'))\t----- bird -----\tfinancial",
    "142": "SELECT T1.account_id FROM account T1 INNER JOIN \"order\" T2 ON T1.account_id = T2.account_id INNER JOIN district T3 ON T1.district_id = T3.district_id WHERE T2.k_symbol = 'SIPO' AND T3.A2 = 'Pisek'\t----- bird -----\tfinancial",
    "143": "SELECT account_id FROM disp WHERE disp_id IN (SELECT disp_id FROM card WHERE type = 'gold') INTERSECT SELECT account_id FROM disp WHERE disp_id IN (SELECT disp_id FROM card WHERE type = 'junior')\t----- bird -----\tfinancial",
    "144": "SELECT AVG(amount) FROM trans WHERE operation = 'VYBER KARTOU' AND strftime('%Y', date) = '2021'\t----- bird -----\tfinancial",
    "145": "SELECT account_id FROM (SELECT account_id, SUM(amount) as total_spent FROM trans WHERE operation = 'VYBER KARTOU' AND date LIKE '1998%' GROUP BY account_id) WHERE total_spent < (SELECT AVG(total_spent) FROM (SELECT account_id, SUM(amount) as total_spent FROM trans WHERE operation = 'VYBER KARTOU' AND date LIKE '1998%' GROUP BY account_id))\t----- bird -----\tfinancial",
    "146": "SELECT T1.account_id FROM disp AS T1 JOIN client AS T2 ON T1.client_id = T2.client_id JOIN card AS T3 ON T1.disp_id = T3.disp_id JOIN loan AS T4 ON T1.account_id = T4.account_id WHERE T2.gender = 'F'\t----- bird -----\tfinancial",
    "147": "SELECT COUNT(DISTINCT T2.account_id) FROM client AS T1 JOIN disp AS T2 ON T1.client_id = T2.client_id JOIN district AS T3 ON T1.district_id = T3.district_id WHERE T1.gender = 'F' AND T3.A3 = 'south Bohemia'\t----- bird -----\tfinancial",
    "148": "SELECT T1.account_id FROM account AS T1 INNER JOIN disp AS T2 ON T1.account_id = T2.account_id INNER JOIN district AS T3 ON T1.district_id = T3.district_id WHERE T2.type = 'OWNER' AND T3.A2 = 'Tabor'\t----- bird -----\tfinancial",
    "149": "SELECT DISTINCT type FROM disp INNER JOIN account ON disp.account_id = account.account_id INNER JOIN district ON account.district_id = district.district_id WHERE disp.account_id NOT IN (SELECT account_id FROM loan) AND disp.type != 'OWNER' AND district.A11 > 8000 AND district.A11 <= 9000\t----- bird -----\tfinancial",
    "150": "SELECT COUNT(T1.account_id) FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id INNER JOIN \"order\" AS T3 ON T1.account_id = T3.account_id WHERE T3.bank_to = 'AB' AND T2.A3 = 'North Bohemia'\t----- bird -----\tfinancial",
    "151": "SELECT DISTINCT T1.A2 FROM district AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id INNER JOIN trans AS T3 ON T2.account_id = T3.account_id WHERE T3.type = 'VYDAJ'\t----- bird -----\tfinancial",
    "152": "SELECT AVG(A15) FROM district WHERE A15 > 4000 AND A3 IN (SELECT A3 FROM district WHERE district_id IN (SELECT district_id FROM account WHERE date >= '1997-01-01'))\t----- bird -----\tfinancial",
    "153": "SELECT COUNT(*) FROM card AS T1 INNER JOIN disp AS T2 ON T1.disp_id = T2.disp_id WHERE T1.type = 'classic' AND T2.type = 'OWNER'\t----- bird -----\tfinancial",
    "154": "SELECT COUNT(T1.client_id) FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.gender = 'M' AND T2.A2 = 'Hl.m. Praha'\t----- bird -----\tfinancial",
    "155": "SELECT (SELECT COUNT(*) FROM card WHERE type = 'gold' AND CAST(strftime('%Y', issued) AS INTEGER) < 1998) / (SELECT COUNT(*) FROM card) * 100 as PercentageGoldCardsBefore1998\t----- bird -----\tfinancial",
    "156": "SELECT T1.client_id FROM disp AS T1 INNER JOIN loan AS T2 ON T1.account_id = T2.account_id WHERE T1.type = 'OWNER' ORDER BY T2.amount DESC LIMIT 1\t----- bird -----\tfinancial",
    "157": "SELECT T2.A15 FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.account_id = 532\t----- bird -----\tfinancial",
    "158": "SELECT T2.district_id FROM \"order\" AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T1.order_id = 33333\t----- bird -----\tfinancial",
    "159": "SELECT T1.* FROM trans AS T1 INNER JOIN disp AS T2 ON T1.account_id = T2.account_id WHERE T2.client_id = 3356 AND T1.operation = 'VYBER'\t----- bird -----\tfinancial",
    "160": "SELECT COUNT(*) FROM account AS T1 INNER JOIN loan AS T2 ON T1.account_id = T2.account_id WHERE T1.frequency = 'POPLATEK TYDNE' AND T2.amount < 200000\t----- bird -----\tfinancial",
    "161": "SELECT T2.type FROM disp AS T1 INNER JOIN card AS T2 ON T1.disp_id = T2.disp_id WHERE T1.client_id = 13539\t----- bird -----\tfinancial",
    "162": "SELECT district.A3 FROM client INNER JOIN district ON client.district_id = district.district_id WHERE client.client_id = 3541\t----- bird -----\tfinancial",
    "163": "SELECT T1.A2, COUNT(*) as count FROM district AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id INNER JOIN loan AS T3 ON T2.account_id = T3.account_id WHERE T3.status = 'A' GROUP BY T1.A2 ORDER BY count DESC LIMIT 1\t----- bird -----\tfinancial",
    "164": "SELECT T2.client_id FROM \"order\" AS T1 INNER JOIN disp AS T2 ON T1.account_id = T2.account_id WHERE T1.order_id = 32423\t----- bird -----\tfinancial",
    "165": "SELECT * FROM trans AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T2.district_id = 5\t----- bird -----\tfinancial",
    "166": "SELECT COUNT(T1.account_id) FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.A2 = 'Jesenik'\t----- bird -----\tfinancial",
    "167": "SELECT T2.client_id FROM card AS T1 INNER JOIN disp AS T2 ON T1.disp_id = T2.disp_id WHERE T1.type = 'junior' AND T1.issued >= '1997-01-01'\t----- bird -----\tfinancial",
    "168": "SELECT ROUND(((SELECT COUNT(*) FROM disp AS T1 INNER JOIN client AS T2 ON T1.client_id = T2.client_id WHERE T2.gender = 'F' AND T1.account_id IN (SELECT account_id FROM account AS T3 INNER JOIN district AS T4 ON T3.district_id = T4.district_id WHERE T4.A11 > 10000)) / CAST((SELECT COUNT(*) FROM disp AS T5 INNER JOIN account AS T6 ON T5.account_id = T6.account_id INNER JOIN district AS T7 ON T6.district_id = T7.district_id WHERE T7.A11 > 10000) AS FLOAT)) * 100, 2)\t----- bird -----\tfinancial",
    "169": "SELECT ((SELECT SUM(amount) FROM loan WHERE date BETWEEN '1997-01-01' AND '1997-12-31' AND account_id IN (SELECT account_id FROM disp WHERE client_id IN (SELECT client_id FROM client WHERE gender = 'M'))) - (SELECT SUM(amount) FROM loan WHERE date BETWEEN '1996-01-01' AND '1996-12-31' AND account_id IN (SELECT account_id FROM disp WHERE client_id IN (SELECT client_id FROM client WHERE gender = 'M')))) / (SELECT SUM(amount) FROM loan WHERE date BETWEEN '1996-01-01' AND '1996-12-31' AND account_id IN (SELECT account_id FROM disp WHERE client_id IN (SELECT client_id FROM client WHERE gender = 'M'))) * 100 AS growth_rate\t----- bird -----\tfinancial",
    "170": "SELECT COUNT(*) FROM trans WHERE operation = 'VYBER KARTOU' AND date > '1995-12-31'\t----- bird -----\tfinancial",
    "171": "SELECT (SELECT SUM(A16) FROM district WHERE A3 = 'North Bohemia') - (SELECT SUM(A16) FROM district WHERE A3 = 'East Bohemia') AS crime_difference_in_1996\t----- bird -----\tfinancial",
    "172": "SELECT COUNT(disp_id) FROM disp WHERE account_id BETWEEN 1 AND 10 AND (type = 'OWNER' OR type = 'DISPONENT')\t----- bird -----\tfinancial",
    "173": "SELECT T1.frequency, T2.k_symbol FROM account AS T1 INNER JOIN \"order\" AS T2 ON T1.account_id = T2.account_id WHERE T1.account_id = 3 GROUP BY T2.k_symbol HAVING SUM(T2.amount) = 3539\t----- bird -----\tfinancial",
    "174": "SELECT strftime('%Y', T1.birth_date) AS birth_year FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id WHERE T2.account_id = 130 AND T2.type = 'OWNER'\t----- bird -----\tfinancial",
    "175": "SELECT COUNT(*) FROM account AS T1 INNER JOIN disp AS T2 ON T1.account_id = T2.account_id WHERE T2.type = 'OWNER' AND T1.frequency = 'POPLATEK PO OBRATU'\t----- bird -----\tfinancial",
    "176": "SELECT T2.amount, T2.status FROM disp AS T1 INNER JOIN loan AS T2 ON T1.account_id = T2.account_id WHERE T1.client_id = 992\t----- bird -----\tfinancial",
    "177": "SELECT T1.balance, T3.gender FROM trans AS T1 INNER JOIN disp AS T2 ON T1.account_id = T2.account_id INNER JOIN client AS T3 ON T2.client_id = T3.client_id WHERE T1.trans_id = 851\t----- bird -----\tfinancial",
    "178": "SELECT T2.type FROM disp AS T1 INNER JOIN card AS T2 ON T1.disp_id = T2.disp_id WHERE T1.client_id = 9\t----- bird -----\tfinancial",
    "179": "SELECT SUM(T2.amount) FROM disp AS T1 INNER JOIN trans AS T2 ON T1.account_id = T2.account_id WHERE T1.client_id = 617 AND T2.date LIKE '1998%'\t----- bird -----\tfinancial",
    "180": "SELECT C.client_id FROM client C JOIN disp D ON C.client_id = D.client_id JOIN account A ON D.account_id = A.account_id JOIN district DT ON A.district_id = DT.district_id WHERE C.birth_date BETWEEN '1983-01-01' AND '1987-12-31' AND DT.A2 = 'East Bohemia'\t----- bird -----\tfinancial",
    "181": "SELECT client_id, amount FROM loan INNER JOIN disp ON loan.account_id = disp.account_id INNER JOIN client ON disp.client_id = client.client_id WHERE gender = 'F' ORDER BY amount DESC LIMIT 3\t----- bird -----\tfinancial",
    "182": "SELECT COUNT(*) FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN \"order\" AS T3 ON T2.account_id = T3.account_id WHERE T1.gender = 'M' AND T1.birth_date BETWEEN '1974-01-01' AND '1976-12-31' AND T3.k_symbol = 'SIPO' AND T3.amount > 4000\t----- bird -----\tfinancial",
    "183": "SELECT COUNT(T1.account_id) FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.A2 = 'Beroun' AND T1.date > '1996-12-31'\t----- bird -----\tfinancial",
    "184": "SELECT COUNT(*) FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN card AS T3 ON T2.disp_id = T3.disp_id WHERE T1.gender = 'F' AND T3.type = 'junior'\t----- bird -----\tfinancial",
    "185": "SELECT (SELECT COUNT(*) FROM client INNER JOIN disp ON client.client_id = disp.client_id INNER JOIN account ON disp.account_id = account.account_id INNER JOIN district ON account.district_id = district.district_id WHERE district.A2 = 'Hl.m. Praha' AND client.gender = 'F') * 100.0 / (SELECT COUNT(*) FROM client INNER JOIN disp ON client.client_id = disp.client_id INNER JOIN account ON disp.account_id = account.account_id INNER JOIN district ON account.district_id = district.district_id WHERE district.A2 = 'Hl.m. Praha') AS proportion\t----- bird -----\tfinancial",
    "186": "SELECT (SELECT COUNT(*) FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN account AS T3 ON T2.account_id = T3.account_id WHERE T1.gender = 'M' AND T3.frequency = 'POPLATEK TYDNE') * 100.0 / (SELECT COUNT(*) FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN account AS T3 ON T2.account_id = T3.account_id WHERE T3.frequency = 'POPLATEK TYDNE')\t----- bird -----\tfinancial",
    "187": "SELECT COUNT(DISTINCT T1.client_id) FROM disp AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T2.frequency = 'POPLATEK TYDNE' AND T1.type = 'USER'\t----- bird -----\tfinancial",
    "188": "SELECT T1.account_id, MIN(T2.amount) FROM account AS T1 INNER JOIN loan AS T2 ON T1.account_id = T2.account_id WHERE T2.duration > 24 AND T1.date < '1997' GROUP BY T1.account_id\t----- bird -----\tfinancial",
    "189": "SELECT T1.account_id FROM disp AS T1 INNER JOIN client AS T2 ON T1.client_id = T2.client_id INNER JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T2.gender = 'F' AND T2.birth_date = ( SELECT MIN(birth_date) FROM client WHERE gender = 'F' ) AND T3.A11 = ( SELECT MIN(A11) FROM district )\t----- bird -----\tfinancial",
    "190": "SELECT COUNT(T1.client_id) FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.birth_date LIKE '1920%' AND T2.A3 = 'east Bohemia'\t----- bird -----\tfinancial",
    "191": "SELECT COUNT(T1.account_id) FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T1.duration = 24 AND T2.frequency = 'POPLATEK TYDNE'\t----- bird -----\tfinancial",
    "192": "SELECT AVG(T1.amount) FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE (T1.status = 'C' OR T1.status = 'D') AND T2.frequency = 'POPLATEK PO OBRATU'\t----- bird -----\tfinancial",
    "193": "SELECT T1.client_id, T1.district_id FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id WHERE T2.type = 'OWNER'\t----- bird -----\tfinancial",
    "194": "SELECT C.client_id, (strftime('%Y', 'now') - strftime('%Y', C.birth_date)) AS age FROM client C JOIN disp D ON C.client_id = D.client_id JOIN card CR ON D.disp_id = CR.disp_id JOIN loan L ON D.account_id = L.account_id WHERE CR.type = 'gold'\t----- bird -----\tfinancial",
    "195": "SELECT bond_type FROM bond GROUP BY bond_type ORDER BY COUNT(*) DESC LIMIT 1\t----- bird -----\ttoxicology",
    "196": "SELECT COUNT(*) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '-' AND T1.element = 'cl'\t----- bird -----\ttoxicology",
    "197": "SELECT AVG(oxygen_count) FROM (SELECT COUNT(*) as oxygen_count FROM atom as T1 INNER JOIN connected as T2 ON T1.atom_id = T2.atom_id INNER JOIN bond as T3 ON T2.bond_id = T3.bond_id WHERE T1.element = 'o' AND T3.bond_type = '-' GROUP BY T1.molecule_id)\t----- bird -----\ttoxicology",
    "198": "SELECT AVG(single_bonds) FROM (SELECT COUNT(b.bond_id) AS single_bonds FROM atom AS a INNER JOIN molecule AS m ON a.molecule_id = m.molecule_id INNER JOIN bond AS b ON a.molecule_id = b.molecule_id WHERE b.bond_type = '-' AND m.label = '+' GROUP BY a.atom_id)\t----- bird -----\ttoxicology",
    "199": "SELECT COUNT(*) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'na' AND T2.label = '-'\t----- bird -----\ttoxicology",
    "200": "SELECT T1.molecule_id FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '#' AND T2.label = '+'\t----- bird -----\ttoxicology",
    "201": "SELECT (COUNT(case when T1.element = 'c' then 1 end) * 100.0) / COUNT(T1.atom_id) FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.bond_type = '='\t----- bird -----\ttoxicology",
    "202": "SELECT COUNT(*) FROM bond WHERE bond_type = '#'\t----- bird -----\ttoxicology",
    "203": "SELECT COUNT(atom_id) FROM atom WHERE element != 'br'\t----- bird -----\ttoxicology",
    "204": "SELECT COUNT(*) FROM molecule WHERE molecule_id BETWEEN 'TR000' AND 'TR099' AND label = '+'\t----- bird -----\ttoxicology",
    "205": "SELECT molecule_id FROM atom WHERE element = 'si'\t----- bird -----\ttoxicology",
    "206": "SELECT element FROM atom WHERE atom_id IN (SELECT atom_id FROM connected WHERE bond_id = 'TR004_8_9' UNION SELECT atom_id2 FROM connected WHERE bond_id = 'TR004_8_9')\t----- bird -----\ttoxicology",
    "207": "SELECT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_type = '='\t----- bird -----\ttoxicology",
    "208": "SELECT T2.label, COUNT(*) AS count FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'h' GROUP BY T2.label ORDER BY count DESC LIMIT 1\t----- bird -----\ttoxicology",
    "209": "SELECT T3.bond_type FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T1.element = 'te'\t----- bird -----\ttoxicology",
    "210": "SELECT T1.atom_id, T1.atom_id2 FROM connected AS T1 INNER JOIN bond AS T2 ON T1.bond_id = T2.bond_id WHERE T2.bond_type = '-'\t----- bird -----\ttoxicology",
    "211": "SELECT T1.atom_id, T1.atom_id2 FROM connected AS T1 INNER JOIN atom AS T2 ON T1.atom_id = T2.atom_id INNER JOIN molecule AS T3 ON T2.molecule_id = T3.molecule_id WHERE T3.label = '-'\t----- bird -----\ttoxicology",
    "212": "SELECT element, COUNT(*) as count FROM atom JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.label = '-' GROUP BY element ORDER BY count ASC LIMIT 1\t----- bird -----\ttoxicology",
    "213": "SELECT T2.bond_type FROM connected AS T1 INNER JOIN bond AS T2 ON T1.bond_id = T2.bond_id WHERE (T1.atom_id = 'TR004_8' AND T1.atom_id2 = 'TR004_20') OR (T1.atom_id = 'TR004_20' AND T1.atom_id2 = 'TR004_8')\t----- bird -----\ttoxicology",
    "214": "SELECT DISTINCT T2.label FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'sn'\t----- bird -----\ttoxicology",
    "215": "SELECT COUNT(DISTINCT T1.atom_id) FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE (T1.element = 'i' OR T1.element = 's') AND T3.bond_type = '-'\t----- bird -----\ttoxicology",
    "216": "SELECT T1.atom_id, T1.atom_id2 FROM connected AS T1 INNER JOIN bond AS T2 ON T1.bond_id = T2.bond_id WHERE T2.bond_type = '#'\t----- bird -----\ttoxicology",
    "217": "SELECT T2.atom_id2 FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T1.molecule_id = 'TR181' UNION SELECT T3.atom_id FROM atom AS T1 INNER JOIN connected AS T3 ON T1.atom_id = T3.atom_id2 WHERE T1.molecule_id = 'TR181'\t----- bird -----\ttoxicology",
    "218": "SELECT ((SELECT COUNT(DISTINCT T1.molecule_id) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+' AND T1.element != 'f') * 100 / (SELECT COUNT(*) FROM molecule WHERE label = '+')) AS percent\t----- bird -----\ttoxicology",
    "219": "SELECT (CAST(SUM(CASE WHEN T1.bond_type = '#' THEN 1 ELSE 0 END) AS REAL) / COUNT(T1.bond_id)) * 100 AS percent FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+'\t----- bird -----\ttoxicology",
    "220": "SELECT atom.element FROM atom INNER JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.molecule_id = 'TR000' ORDER BY atom.element ASC LIMIT 3\t----- bird -----\ttoxicology",
    "221": "SELECT T1.atom_id, T1.atom_id2 FROM connected AS T1 INNER JOIN bond AS T2 ON T1.bond_id = T2.bond_id WHERE T2.molecule_id = 'TR001' AND T1.bond_id = 'TR001_2_6'\t----- bird -----\ttoxicology",
    "222": "SELECT (SELECT COUNT(*) FROM molecule WHERE label = '+') - (SELECT COUNT(*) FROM molecule WHERE label = '-') AS difference\t----- bird -----\ttoxicology",
    "223": "SELECT T1.atom_id, T1.atom_id2 FROM connected AS T1 INNER JOIN bond AS T2 ON T1.bond_id = T2.bond_id WHERE T2.bond_id = 'TR_000_2_5'\t----- bird -----\ttoxicology",
    "224": "SELECT bond_id FROM connected WHERE atom_id2 = 'TR000_2'\t----- bird -----\ttoxicology",
    "225": "SELECT molecule.molecule_id FROM molecule INNER JOIN bond ON molecule.molecule_id = bond.molecule_id WHERE bond.bond_type = '=' ORDER BY molecule.molecule_id ASC LIMIT 5\t----- bird -----\ttoxicology",
    "226": "SELECT (SUM(CASE WHEN bond_type = '=' THEN 1 ELSE 0 END) / COUNT(*)) * 100 as percent FROM bond WHERE molecule_id = 'TR008'\t----- bird -----\ttoxicology",
    "227": "SELECT CAST(SUM(CASE WHEN label = '+' THEN 1 ELSE 0 END) AS FLOAT) / COUNT(molecule_id) * 100 as percent FROM molecule\t----- bird -----\ttoxicology",
    "228": "SELECT (SUM(CASE WHEN element = 'h' THEN 1 ELSE 0 END) / CAST(COUNT(atom_id) AS FLOAT)) * 100 as percent FROM atom WHERE molecule_id = 'TR206'\t----- bird -----\ttoxicology",
    "229": "SELECT bond_type FROM bond JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE molecule.molecule_id = 'TR000'\t----- bird -----\ttoxicology",
    "230": "SELECT T1.element, T2.label FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.molecule_id = 'TR060'\t----- bird -----\ttoxicology",
    "231": "SELECT T1.bond_type, T2.label FROM (SELECT bond_type, molecule_id, COUNT(bond_type) as cnt FROM bond WHERE molecule_id = 'TR018' GROUP BY bond_type ORDER BY cnt DESC LIMIT 1) AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id\t----- bird -----\ttoxicology",
    "232": "SELECT T2.molecule_id FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '-' AND T2.label = '-' ORDER BY T2.molecule_id ASC LIMIT 3\t----- bird -----\ttoxicology",
    "233": "SELECT bond_id FROM bond WHERE molecule_id = 'TR006' ORDER BY bond_id ASC LIMIT 2\t----- bird -----\ttoxicology",
    "234": "SELECT COUNT(bond_id) FROM connected WHERE (atom_id = 'TR009_12' OR atom_id2 = 'TR009_12') AND bond_id LIKE 'TR009_%'\t----- bird -----\ttoxicology",
    "235": "SELECT COUNT(DISTINCT T1.molecule_id) FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '+' AND T2.element = 'br'\t----- bird -----\ttoxicology",
    "236": "SELECT T1.bond_type, T2.atom_id, T2.atom_id2 FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id WHERE T1.bond_id = 'TR001_6_9'\t----- bird -----\ttoxicology",
    "237": "SELECT T2.molecule_id, T2.label FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.atom_id = 'TR001_10'\t----- bird -----\ttoxicology",
    "238": "SELECT COUNT(DISTINCT molecule_id) FROM bond WHERE bond_type = '#'\t----- bird -----\ttoxicology",
    "239": "SELECT COUNT(bond_id) FROM connected WHERE atom_id LIKE 'TR%_19' OR atom_id2 LIKE 'TR%_19'\t----- bird -----\ttoxicology",
    "240": "SELECT T1.element FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.molecule_id = 'TR004'\t----- bird -----\ttoxicology",
    "241": "SELECT COUNT(*) FROM molecule WHERE label = '-'\t----- bird -----\ttoxicology",
    "242": "SELECT DISTINCT T2.molecule_id FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE CAST(SUBSTR(T1.atom_id, 7, 2) AS INTEGER) BETWEEN 21 AND 25 AND T2.label = '+'\t----- bird -----\ttoxicology",
    "243": "SELECT A1.bond_id FROM connected AS A1 INNER JOIN atom AS B1 ON A1.atom_id = B1.atom_id INNER JOIN atom AS C1 ON A1.atom_id2 = C1.atom_id WHERE (B1.element = 'p' AND C1.element = 'n') OR (B1.element = 'n' AND C1.element = 'p')\t----- bird -----\ttoxicology",
    "244": "SELECT T2.label FROM molecule AS T2 WHERE T2.molecule_id = ( SELECT molecule_id FROM bond WHERE bond_type = '=' GROUP BY molecule_id ORDER BY COUNT(bond_id) DESC LIMIT 1 )\t----- bird -----\ttoxicology",
    "245": "SELECT COUNT(T2.bond_id) / COUNT(T1.atom_id) FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T1.element = 'i'\t----- bird -----\ttoxicology",
    "246": "SELECT bond.bond_type, connected.bond_id FROM connected INNER JOIN bond ON connected.bond_id = bond.bond_id WHERE CAST(SUBSTR(connected.atom_id, 7, 2) AS INTEGER) = 45\t----- bird -----\ttoxicology",
    "247": "SELECT element FROM atom WHERE atom_id NOT IN (SELECT atom_id FROM connected)\t----- bird -----\ttoxicology",
    "248": "SELECT atom.atom_id FROM atom INNER JOIN connected ON atom.atom_id = connected.atom_id INNER JOIN bond ON bond.bond_id = connected.bond_id WHERE bond.bond_type = '#' AND bond.molecule_id = 'TR447'\t----- bird -----\ttoxicology",
    "249": "SELECT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T2.bond_id = 'TR144_8_19' UNION SELECT T3.element FROM atom AS T3 INNER JOIN connected AS T4 ON T3.atom_id = T4.atom_id2 WHERE T4.bond_id = 'TR144_8_19'\t----- bird -----\ttoxicology",
    "250": "SELECT T1.molecule_id, COUNT(T2.bond_id) as count FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '+' AND T2.bond_type = '=' GROUP BY T1.molecule_id ORDER BY count DESC LIMIT 1\t----- bird -----\ttoxicology",
    "251": "SELECT T1.element, COUNT(*) as count FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+' GROUP BY T1.element ORDER BY count ASC LIMIT 1\t----- bird -----\ttoxicology",
    "252": "SELECT T2.atom_id2 FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T1.element = 'pb' UNION SELECT T3.atom_id FROM atom AS T1 INNER JOIN connected AS T3 ON T1.atom_id = T3.atom_id2 WHERE T1.element = 'pb'\t----- bird -----\ttoxicology",
    "253": "SELECT atom.element FROM atom INNER JOIN connected ON atom.atom_id = connected.atom_id INNER JOIN bond ON connected.bond_id = bond.bond_id WHERE bond.bond_type = '#'\t----- bird -----\ttoxicology",
    "254": "SELECT MAX(atom_combo_count) * 100.0 / COUNT(DISTINCT bond_id) as percent_most_commonFROM (\tSELECT COUNT(DISTINCT bond_id) as atom_combo_count\tFROM (\t\tSELECT bond_id, GROUP_CONCAT(element ORDER BY atom_id) as atom_combo\t\tFROM connected \t\tJOIN atom ON connected.atom_id = atom.atom_id\t\tGROUP BY bond_id\t)\tGROUP BY atom_combo)\t----- bird -----\ttoxicology",
    "255": "SELECT (CAST(SUM(CASE WHEN T2.label = '+' THEN 1 ELSE 0 END) AS FLOAT) / COUNT(*)) FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '-'\t----- bird -----\ttoxicology",
    "256": "SELECT COUNT(atom_id) FROM atom WHERE element IN ('c', 'h')\t----- bird -----\ttoxicology",
    "257": "SELECT atom_id FROM atom WHERE element = 's'\t----- bird -----\ttoxicology",
    "258": "SELECT T2.bond_type FROM atom AS T1 INNER JOIN connected AS T3 ON T1.atom_id = T3.atom_id INNER JOIN bond AS T2 ON T3.bond_id = T2.bond_id WHERE T1.element = 'sn'\t----- bird -----\ttoxicology",
    "259": "SELECT COUNT(DISTINCT T1.element) FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_type = '-'\t----- bird -----\ttoxicology",
    "260": "SELECT COUNT(DISTINCT atom.atom_id) FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE (atom.element = 'p' OR atom.element = 'br') AND bond.bond_type = '#'\t----- bird -----\ttoxicology",
    "261": "SELECT T1.bond_id FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+'\t----- bird -----\ttoxicology",
    "262": "SELECT T1.molecule_id FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '-' AND T2.label = '-'\t----- bird -----\ttoxicology",
    "263": "SELECT (CAST(SUM(CASE WHEN T1.element = 'cl' THEN 1 ELSE 0 END) AS REAL) / COUNT(T1.atom_id)) * 100 AS percent FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_type = '-'\t----- bird -----\ttoxicology",
    "264": "SELECT molecule_id, label FROM molecule WHERE molecule_id IN ('TR000', 'TR001', 'TR002')\t----- bird -----\ttoxicology",
    "265": "SELECT molecule_id FROM molecule WHERE label = '-'\t----- bird -----\ttoxicology",
    "266": "SELECT COUNT(*) FROM molecule WHERE molecule_id BETWEEN 'TR000' AND 'TR030' AND label = '+'\t----- bird -----\ttoxicology",
    "267": "SELECT bond_type FROM bond INNER JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE bond.molecule_id BETWEEN 'TR000' AND 'TR050'\t----- bird -----\ttoxicology",
    "268": "SELECT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T2.bond_id = 'TR001_10_11' UNION SELECT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id2 WHERE T2.bond_id = 'TR001_10_11'\t----- bird -----\ttoxicology",
    "269": "SELECT COUNT(DISTINCT T1.bond_id) FROM connected AS T1 INNER JOIN atom AS T2 ON T1.atom_id = T2.atom_id WHERE T2.element = 'i'\t----- bird -----\ttoxicology",
    "270": "SELECT T2.label FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.molecule_id IN ( SELECT molecule_id FROM atom WHERE element = 'ca' ) GROUP BY T2.label ORDER BY COUNT(*) DESC LIMIT 1\t----- bird -----\ttoxicology",
    "271": "SELECT CASE WHEN (SELECT COUNT(DISTINCT element) FROM atom WHERE atom_id IN (SELECT atom_id FROM connected WHERE bond_id = 'TR001_1_8' UNION SELECT atom_id2 FROM connected WHERE bond_id = 'TR001_1_8') AND element IN ('cl', 'c')) = 2 THEN 'Yes' ELSE 'No' END\t----- bird -----\ttoxicology",
    "272": "SELECT DISTINCT T1.molecule_id FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN molecule AS T3 ON T2.molecule_id = T3.molecule_id INNER JOIN connected AS T4 ON T1.atom_id = T4.atom_id AND T2.bond_id = T4.bond_id WHERE T1.element = 'c' AND T2.bond_type = '#' AND T3.label = '-' LIMIT 2\t----- bird -----\ttoxicology",
    "273": "SELECT (SUM(CASE WHEN T1.element = 'cl' THEN 1 ELSE 0 END) * 100.0 / COUNT(*)) AS percentage FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+'\t----- bird -----\ttoxicology",
    "274": "SELECT element FROM atom JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.molecule_id = 'TR001'\t----- bird -----\ttoxicology",
    "275": "SELECT molecule_id FROM bond WHERE bond_type = ' = '\t----- bird -----\ttoxicology",
    "276": "SELECT T1.atom_id, T1.atom_id2 FROM connected AS T1 INNER JOIN bond AS T2 ON T1.bond_id = T2.bond_id WHERE T2.bond_type = '#'\t----- bird -----\ttoxicology",
    "277": "SELECT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id OR T1.atom_id = T2.atom_id2 WHERE T2.bond_id = 'TR005_16_26'\t----- bird -----\ttoxicology",
    "278": "SELECT COUNT(DISTINCT T1.molecule_id) FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '-' AND T2.label = '-'\t----- bird -----\ttoxicology",
    "279": "SELECT T2.label FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_id = 'TR001_10_11'\t----- bird -----\ttoxicology",
    "280": "SELECT T1.bond_id, T2.label FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '#'\t----- bird -----\ttoxicology",
    "281": "SELECT element, COUNT(*) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+' AND substr(T1.atom_id, 7, 1) = '4' GROUP BY T1.element\t----- bird -----\ttoxicology",
    "282": "SELECT (SELECT COUNT(*) FROM atom WHERE element = 'h' AND molecule_id = 'TR006') * 1.0 / COUNT(*), T2.label FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.molecule_id = 'TR006'\t----- bird -----\ttoxicology",
    "283": "SELECT T2.label FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'ca'\t----- bird -----\ttoxicology",
    "284": "SELECT B.bond_type FROM atom A, bond B, connected C WHERE A.atom_id = C.atom_id AND B.bond_id = C.bond_id AND A.element = 'te'\t----- bird -----\ttoxicology",
    "285": "SELECT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T2.bond_id = 'TR001_10_11'\t----- bird -----\ttoxicology",
    "286": "SELECT COUNT(DISTINCT molecule_id) * 100.0 / (SELECT COUNT(DISTINCT molecule_id) FROM molecule) FROM bond WHERE bond_type = '#'\t----- bird -----\ttoxicology",
    "287": "SELECT (CAST(SUM(CASE WHEN bond_type = '=' THEN 1 ELSE 0 END) AS FLOAT) / COUNT(bond_id)) * 100 as percent FROM bond INNER JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE molecule.molecule_id = 'TR047'\t----- bird -----\ttoxicology",
    "288": "SELECT T2.label FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.atom_id = 'TR001_1'\t----- bird -----\ttoxicology",
    "289": "SELECT label FROM molecule WHERE molecule_id = 'TR151'\t----- bird -----\ttoxicology",
    "290": "SELECT element FROM atom JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.molecule_id = 'TR151'\t----- bird -----\ttoxicology",
    "291": "SELECT COUNT(*) FROM molecule WHERE label = '+'\t----- bird -----\ttoxicology",
    "292": "SELECT atom_id, element FROM atom JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE element = 'c' AND substr(molecule.molecule_id, 3, 3) BETWEEN 10 AND 50\t----- bird -----\ttoxicology",
    "293": "SELECT COUNT(T1.atom_id) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+'\t----- bird -----\ttoxicology",
    "294": "SELECT bond.bond_id FROM bond INNER JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE bond.bond_type = '=' AND molecule.label = '+'\t----- bird -----\ttoxicology",
    "295": "SELECT COUNT(T1.atom_id) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'h' AND T2.label = '+'\t----- bird -----\ttoxicology",
    "296": "SELECT T1.molecule_id FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id WHERE T1.bond_id = 'TR000_1_2' AND T2.atom_id = 'TR000_1'\t----- bird -----\ttoxicology",
    "297": "SELECT T1.atom_id FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'c' AND T2.label = '-'\t----- bird -----\ttoxicology",
    "298": "SELECT (SUM(CASE WHEN T1.element = 'h' AND T2.label = '+' THEN 1 ELSE 0 END) * 100.0) / COUNT(DISTINCT T1.molecule_id) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id\t----- bird -----\ttoxicology",
    "299": "SELECT label FROM molecule WHERE molecule_id = 'TR124'\t----- bird -----\ttoxicology",
    "300": "SELECT atom_id, element FROM atom JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.molecule_id = 'TR186'\t----- bird -----\ttoxicology",
    "301": "SELECT bond_type FROM bond WHERE bond_id = 'TR007_4_19'\t----- bird -----\ttoxicology",
    "302": "SELECT atom.element FROM atom INNER JOIN connected ON atom.atom_id IN (connected.atom_id, connected.atom_id2) WHERE connected.bond_id = 'TR001_2_4'\t----- bird -----\ttoxicology",
    "303": "SELECT COUNT(*), T2.label FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '=' AND T1.molecule_id = 'TR006'\t----- bird -----\ttoxicology",
    "304": "SELECT T1.molecule_id, T2.element FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '+'\t----- bird -----\ttoxicology",
    "305": "SELECT T1.bond_id, T2.atom_id, T2.atom_id2 FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id WHERE T1.bond_type = '-'\t----- bird -----\ttoxicology",
    "306": "SELECT T1.molecule_id, T2.element FROM bond AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '#'\t----- bird -----\ttoxicology",
    "307": "SELECT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id OR T1.atom_id = T2.atom_id2 WHERE T2.bond_id = 'TR000_2_3'\t----- bird -----\ttoxicology",
    "308": "SELECT COUNT(T1.bond_id) FROM connected AS T1 INNER JOIN atom AS T2 ON T1.atom_id = T2.atom_id WHERE T2.element = 'cl'\t----- bird -----\ttoxicology",
    "309": "SELECT atom.atom_id, COUNT(DISTINCT connected.bond_id) FROM atom INNER JOIN connected ON atom.atom_id = connected.atom_id WHERE atom.molecule_id = 'TR346' GROUP BY atom.atom_id\t----- bird -----\ttoxicology",
    "310": "SELECT COUNT(DISTINCT T1.molecule_id), COUNT(DISTINCT CASE WHEN T2.label = '+' THEN T1.molecule_id END) FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '='\t----- bird -----\ttoxicology",
    "311": "SELECT COUNT(*) FROM molecule WHERE molecule_id NOT IN (SELECT DISTINCT molecule_id FROM atom WHERE element = 's') AND molecule_id NOT IN (SELECT DISTINCT molecule_id FROM bond WHERE bond_type = '=')\t----- bird -----\ttoxicology",
    "312": "SELECT T2.label FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_id = 'TR001_2_4'\t----- bird -----\ttoxicology",
    "313": "SELECT COUNT(*) FROM atom WHERE molecule_id = 'TR005'\t----- bird -----\ttoxicology",
    "314": "SELECT COUNT(*) FROM bond WHERE bond_type = '-';\t----- bird -----\ttoxicology",
    "315": "SELECT T1.molecule_id FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'cl' AND T2.label = '+'\t----- bird -----\ttoxicology",
    "316": "SELECT T1.molecule_id FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'c' AND T2.label = '-'\t----- bird -----\ttoxicology",
    "317": "SELECT (CAST(SUM(CASE WHEN T1.label = '+' AND T2.element = 'cl' THEN 1 ELSE 0 END) AS FLOAT) / COUNT(DISTINCT T1.molecule_id)) * 100 AS percentage FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id\t----- bird -----\ttoxicology",
    "318": "SELECT molecule_id FROM bond WHERE bond_id = 'TR001_1_7'\t----- bird -----\ttoxicology",
    "319": "SELECT COUNT(*) FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id OR T1.atom_id = T2.atom_id2 WHERE T2.bond_id = 'TR001_3_4'\t----- bird -----\ttoxicology",
    "320": "SELECT T2.bond_type FROM connected AS T1 INNER JOIN bond AS T2 ON T1.bond_id = T2.bond_id WHERE T1.atom_id = 'TR000_1' AND T1.atom_id2 = 'TR000_2'\t----- bird -----\ttoxicology",
    "321": "SELECT bond.molecule_id FROM connected INNER JOIN bond ON connected.bond_id = bond.bond_id WHERE connected.atom_id = 'TR000_2' AND connected.atom_id2 = 'TR000_4'\t----- bird -----\ttoxicology",
    "322": "SELECT element FROM atom WHERE atom_id = 'TR000_1'\t----- bird -----\ttoxicology",
    "323": "SELECT label FROM molecule WHERE molecule_id = 'TR000'\t----- bird -----\ttoxicology",
    "324": "SELECT (COUNT(bond_type = '-') / COUNT(bond_id)) * 100 as percentage FROM bond WHERE bond_type = '-'\t----- bird -----\ttoxicology",
    "325": "SELECT COUNT(DISTINCT T1.molecule_id) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+' AND T1.element = 'n'\t----- bird -----\ttoxicology",
    "326": "SELECT T1.molecule_id FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T1.element = 's' AND T3.bond_type = '='\t----- bird -----\ttoxicology",
    "327": "SELECT T1.molecule_id FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '-' GROUP BY T1.molecule_id HAVING COUNT(T2.atom_id) > 5\t----- bird -----\ttoxicology",
    "328": "SELECT atom.element FROM atom INNER JOIN connected ON atom.atom_id = connected.atom_id INNER JOIN bond ON bond.bond_id = connected.bond_id WHERE bond.bond_type = '=' AND atom.molecule_id = 'TR024'\t----- bird -----\ttoxicology",
    "329": "SELECT T1.molecule_id, COUNT(*) as atom_count FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+' GROUP BY T1.molecule_id ORDER BY atom_count DESC LIMIT 1\t----- bird -----\ttoxicology",
    "330": "SELECT (SELECT COUNT(*) FROM molecule WHERE label = '+' AND molecule_id IN (SELECT DISTINCT molecule_id FROM atom INNER JOIN connected ON atom.atom_id = connected.atom_id INNER JOIN bond ON connected.bond_id = bond.bond_id WHERE atom.element = 'h' AND bond.bond_type = '#')) * 100.0 / COUNT(DISTINCT molecule_id) FROM atom INNER JOIN connected ON atom.atom_id = connected.atom_id INNER JOIN bond ON connected.bond_id = bond.bond_id WHERE atom.element = 'h' AND bond.bond_type = '#'\t----- bird -----\ttoxicology",
    "331": "SELECT COUNT(*) FROM molecule WHERE label = '+'\t----- bird -----\ttoxicology",
    "332": "SELECT COUNT(DISTINCT T1.molecule_id) FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.bond_type = '-' AND T1.molecule_id BETWEEN 'TR004' AND 'TR010'\t----- bird -----\ttoxicology",
    "333": "SELECT COUNT(element) FROM atom WHERE molecule_id = 'TR008' AND element = 'c'\t----- bird -----\ttoxicology",
    "334": "SELECT T1.element FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.atom_id = 'TR004_7' AND T2.label = '-'\t----- bird -----\ttoxicology",
    "335": "SELECT COUNT(DISTINCT molecule_id) FROM molecule INNER JOIN bond ON molecule.molecule_id = bond.molecule_id WHERE bond_id IN (SELECT bond_id FROM atom INNER JOIN connected ON atom.atom_id = connected.atom_id WHERE element = 'o' AND bond_id IN (SELECT bond_id FROM bond WHERE bond_type = '='))\t----- bird -----\ttoxicology",
    "336": "SELECT COUNT(DISTINCT T1.molecule_id) FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '#' AND T2.label = '-'\t----- bird -----\ttoxicology",
    "337": "SELECT atom.element, bond.bond_type FROM connected JOIN atom ON connected.atom_id = atom.atom_id JOIN bond ON connected.bond_id = bond.bond_id JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.molecule_id = 'TR016'\t----- bird -----\ttoxicology",
    "338": "SELECT T1.atom_id FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T1.element = 'c' AND T3.bond_type = '=' AND T1.molecule_id = 'TR012'\t----- bird -----\ttoxicology",
    "339": "SELECT T1.atom_id FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+' AND T1.element = 'o'\t----- bird -----\ttoxicology",
    "340": "SELECT id, availability, cardKingdomFoilId, cardKingdomId FROM cards WHERE cardKingdomFoilId = cardKingdomId AND cardKingdomId IS NOT NULL\t----- bird -----\tcard_games",
    "341": "SELECT * FROM cards WHERE borderColor = 'borderless' AND cardKingdomFoilId IS NULL\t----- bird -----\tcard_games",
    "342": "SELECT name, MAX(faceConvertedManaCost) FROM cards\t----- bird -----\tcard_games",
    "343": "SELECT id FROM cards WHERE edhrecRank < 100 AND frameVersion = '2015'\t----- bird -----\tcard_games",
    "344": "SELECT T1.artist, T1.type FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.rarity = 'mythic' AND T2.status = 'Banned' AND T2.format = 'gladiator'\t----- bird -----\tcard_games",
    "345": "SELECT T2.status FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.types = 'Artifact' AND T1.side IS NULL AND T2.format = 'vintage'\t----- bird -----\tcard_games",
    "346": "SELECT T1.id, T1.artist FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE (T1.power = '*' OR T1.power IS NULL) AND T2.format = 'commander' AND T2.status = 'Legal'\t----- bird -----\tcard_games",
    "347": "SELECT T2.text FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.uuid = T2.uuid WHERE T1.artist = 'Stephen Daniele' AND T1.hasContentWarning = 1\t----- bird -----\tcard_games",
    "348": "SELECT T2.text FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.uuid = T2.uuid WHERE T1.name = 'Sublime Epiphany' AND T1.number = '74s'\t----- bird -----\tcard_games",
    "349": "SELECT artist, isPromo FROM cards WHERE uuid = ( SELECT uuid FROM rulings GROUP BY uuid ORDER BY COUNT(uuid) DESC LIMIT 1 )\t----- bird -----\tcard_games",
    "350": "SELECT T2.language FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.name = 'Annul' AND T1.number = '29'\t----- bird -----\tcard_games",
    "351": "SELECT name FROM foreign_data WHERE language = 'Japanese'\t----- bird -----\tcard_games",
    "352": "SELECT * FROM table\t----- bird -----\tcard_games",
    "353": "SELECT T1.setCode, T2.totalSetSize FROM set_translations AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T1.language = 'Italian'\t----- bird -----\tcard_games",
    "354": "SELECT COUNT(DISTINCT types) FROM cards WHERE artist = 'Aaron Boyd'\t----- bird -----\tcard_games",
    "355": "SELECT keywords FROM cards WHERE name = 'Angel of Mercy'\t----- bird -----\tcard_games",
    "356": "SELECT COUNT(*) FROM cards WHERE power = '*'\t----- bird -----\tcard_games",
    "357": "SELECT promoTypes FROM cards WHERE name = 'Duress'\t----- bird -----\tcard_games",
    "358": "SELECT borderColor FROM cards WHERE name = \"Ancestor's Chosen\"\t----- bird -----\tcard_games",
    "359": "SELECT originalType FROM cards WHERE faceName = 'Ancestor's Chosen'\t----- bird -----\tcard_games",
    "360": "SELECT T2.language FROM cards AS T1 INNER JOIN set_translations AS T2 ON T1.setCode = T2.setCode WHERE T1.name = 'Angel of Mercy'\t----- bird -----\tcard_games",
    "361": "SELECT COUNT(T1.id) FROM legalities AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T1.status = 'restricted' AND T2.isTextless = 0\t----- bird -----\tcard_games",
    "362": "SELECT T2.text FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.uuid = T2.uuid WHERE T1.name = 'Condemn'\t----- bird -----\tcard_games",
    "363": "SELECT COUNT(T1.id) FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T2.status = 'restricted' AND T1.isStarter = 1\t----- bird -----\tcard_games",
    "364": "SELECT T2.status FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.name = 'Cloudchaser Eagle'\t----- bird -----\tcard_games",
    "365": "SELECT type FROM cards WHERE name = 'Benalish Knight'\t----- bird -----\tcard_games",
    "366": "SELECT legalities.format FROM cards INNER JOIN legalities ON cards.uuid = legalities.uuid WHERE cards.name = 'Benalish Knight'\t----- bird -----\tcard_games",
    "367": "SELECT T1.artist FROM cards AS T1 INNER JOIN set_translations AS T2 ON T1.id = T2.id WHERE T2.language = 'Phyrexian'\t----- bird -----\tcard_games",
    "368": "SELECT CAST((SELECT COUNT(id) FROM cards WHERE borderColor = 'borderless') as float) / CAST((SELECT COUNT(id) FROM cards) as float) * 100 as percentage_of_borderless FROM cards LIMIT 1;\t----- bird -----\tcard_games",
    "369": "SELECT COUNT(T1.id) FROM cards AS T1 INNER JOIN set_translations AS T2 ON T1.printings = T2.setCode WHERE T2.language = 'German' AND T1.isReprint = 1\t----- bird -----\tcard_games",
    "370": "SELECT COUNT(*) FROM cards JOIN set_translations ON cards.id = set_translations.id WHERE borderColor = 'borderless' AND language = 'Russian'\t----- bird -----\tcard_games",
    "371": "SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM cards WHERE isStorySpotlight = 1)) FROM cards INNER JOIN set_translations ON cards.setCode = set_translations.setCode WHERE set_translations.language = 'French' AND cards.isStorySpotlight = 1But again, the `setCode` field is not provided in the `cards` schema. The issue can't be fixed without more information about the schema.\t----- bird -----\tcard_games",
    "372": "SELECT COUNT(id) FROM cards WHERE toughness = '99'\t----- bird -----\tcard_games",
    "373": "SELECT id FROM cards WHERE artist = 'Aaron Boyd'\t----- bird -----\tcard_games",
    "374": "SELECT COUNT(*) FROM cards WHERE borderColor = 'black' AND availability = 'mtgo'\t----- bird -----\tcard_games",
    "375": "SELECT id FROM cards WHERE convertedManaCost = 0\t----- bird -----\tcard_games",
    "376": "SELECT layout FROM cards WHERE keywords = 'Flying'\t----- bird -----\tcard_games",
    "377": "SELECT COUNT(*) FROM cards WHERE originalType = 'Summon - Angel' AND subtypes != 'Angel'\t----- bird -----\tcard_games",
    "378": "SELECT cardKingdomFoilId, cardKingdomId FROM cards WHERE cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL\t----- bird -----\tcard_games",
    "379": "SELECT id FROM cards WHERE duelDeck = 'a'\t----- bird -----\tcard_games",
    "380": "SELECT edhrecRank FROM cards WHERE frameVersion = '2015'\t----- bird -----\tcard_games",
    "381": "SELECT T1.artist FROM cards AS T1 INNER JOIN set_translations AS T2 ON T1.printings = T2.setCode WHERE T2.language = 'Chinese Simplified'\t----- bird -----\tcard_games",
    "382": "SELECT T1.asciiName FROM cards AS T1 INNER JOIN set_translations AS T2 ON T1.id = T2.id WHERE T1.availability = 'paper' AND T2.language = 'Japanese'\t----- bird -----\tcard_games",
    "383": "SELECT COUNT(*) FROM legalities AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T1.status = 'Banned' AND T2.borderColor = 'white'\t----- bird -----\tcard_games",
    "384": "SELECT T1.uuid, T2.language FROM legalities AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.format = 'legacy'\t----- bird -----\tcard_games",
    "385": "SELECT rulings.text FROM cards INNER JOIN rulings ON cards.uuid = rulings.uuid WHERE cards.name = 'Beacon of Immortality'\t----- bird -----\tcard_games",
    "386": "SELECT COUNT(T1.id), T2.status FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.frameVersion = 'future' GROUP BY T2.status\t----- bird -----\tcard_games",
    "387": "SELECT cards.id, cards.colors FROM cards INNER JOIN sets ON cards.setCode = sets.code WHERE sets.code = 'OGW'\t----- bird -----\tcard_games",
    "388": "SELECT T1.id, T3.translation, T3.language FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code INNER JOIN set_translations AS T3 ON T2.code = T3.setCode WHERE T1.setCode = '10E' AND T1.convertedManaCost = 5\t----- bird -----\tcard_games",
    "389": "SELECT T1.artist, T2.date FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.uuid = T2.uuid WHERE T1.originalType = 'Creature - Elf'\t----- bird -----\tcard_games",
    "390": "SELECT T1.colors, T2.format FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.id BETWEEN 1 AND 20\t----- bird -----\tcard_games",
    "391": "SELECT T2.name FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.colors = 'B' AND T1.type = 'Artifact' AND T2.language IS NOT NULL\t----- bird -----\tcard_games",
    "392": "SELECT T1.name, T2.date FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.uuid = T2.uuid WHERE T1.rarity = 'uncommon' ORDER BY T2.date ASC LIMIT 3\t----- bird -----\tcard_games",
    "393": "SELECT COUNT(*) FROM cards WHERE artist = 'John Avon' AND hasFoil = 0\t----- bird -----\tcard_games",
    "394": "SELECT COUNT(*) FROM cards WHERE borderColor = 'white' AND cardKingdomFoilId = cardKingdomId AND cardKingdomId IS NOT NULL\t----- bird -----\tcard_games",
    "395": "SELECT COUNT(*) FROM cards WHERE artist = 'UDON' AND availability LIKE '%mtgo%' AND hand = '-1'\t----- bird -----\tcard_games",
    "396": "SELECT COUNT(*) FROM cards WHERE frameVersion = '1993' and availability LIKE '%paper%' and hasContentWarning = 1\t----- bird -----\tcard_games",
    "397": "SELECT manaCost FROM cards WHERE frameVersion = '2003' AND borderColor = 'black' AND (availability LIKE '%paper%' AND availability LIKE '%mtgo%')\t----- bird -----\tcard_games",
    "398": "SELECT SUM(convertedManaCost) FROM cards WHERE artist = 'Rob Alexander'\t----- bird -----\tcard_games",
    "399": "SELECT subtypes, supertypes FROM cards WHERE availability = 'arena'\t----- bird -----\tcard_games",
    "400": "SELECT setCode FROM set_translations WHERE language = 'Spanish'\t----- bird -----\tcard_games",
    "401": "SELECT (CAST(COUNT(hand = '+3') AS FLOAT) / COUNT(id)) * 100 AS percentage FROM cards WHERE frameEffects = 'legendary'\t----- bird -----\tcard_games",
    "402": "SELECT id, (SELECT COUNT(*) FROM cards WHERE isStorySpotlight = 1 AND isTextless = 0) * 100.0 / (SELECT COUNT(*) FROM cards WHERE isStorySpotlight = 1) as percentage FROM cards WHERE isStorySpotlight = 1 AND isTextless = 0\t----- bird -----\tcard_games",
    "403": "SELECT name, (SELECT COUNT(*) FROM set_translations WHERE language = 'Spanish') * 100.0 / COUNT(*) as percentage FROM cards\t----- bird -----\tcard_games",
    "404": "SELECT T2.language FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.baseSetSize = 309\t----- bird -----\tcard_games",
    "405": "SELECT COUNT(T2.setCode) FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.block = 'Commander' AND T2.language = 'Portuguese (Brasil)'\t----- bird -----\tcard_games",
    "406": "SELECT T1.id FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.types = 'Creature' AND T2.status = 'Legal'\t----- bird -----\tcard_games",
    "407": "SELECT DISTINCT types FROM cards WHERE printings IN ( SELECT setCode FROM set_translations WHERE language = 'German' ) AND types IS NOT NULL\t----- bird -----\tcard_games",
    "408": "SELECT * FROM table\t----- bird -----\tcard_games",
    "409": "SELECT COUNT(T1.id) FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid INNER JOIN rulings AS T3 ON T1.uuid = T3.uuid WHERE T2.format = 'pre-modern' AND T3.text = 'This is a triggered mana ability' AND T1.side IS NULL\t----- bird -----\tcard_games",
    "410": "SELECT T1.id FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.artist = 'Erica Yang' AND T2.format = 'pauper' AND T1.availability LIKE '%paper%'\t----- bird -----\tcard_games",
    "411": "SELECT T1.artist FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.text = 'Das perfekte Gegenmittel zu einer dichten Formation'\t----- bird -----\tcard_games",
    "412": "SELECT T2.name FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.language = 'French' AND T1.borderColor = 'black' AND T1.type = 'Creature' AND T1.artist = 'Matthew D. Wilson'\t----- bird -----\tcard_games",
    "413": "SELECT COUNT(T1.id) FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.uuid=T2.uuid WHERE T1.rarity='rare' AND T2.date='2009-01-10'\t----- bird -----\tcard_games",
    "414": "SELECT T2.language FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.baseSetSize = 180 AND T1.block = 'Ravnica'\t----- bird -----\tcard_games",
    "415": "SELECT (COUNT(CASE WHEN T1.hasContentWarning = 0 THEN 1 ELSE NULL END) * 1.0 / COUNT(*)) * 100 FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T2.format = 'commander' AND T2.status = 'legal'\t----- bird -----\tcard_games",
    "416": "SELECT (CAST(COUNT(*) AS REAL) / (SELECT COUNT(*) FROM cards WHERE power IS NULL OR power = '*')) * 100 FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.language = 'French' AND (T1.power IS NULL OR T1.power = '*')\t----- bird -----\tcard_games",
    "417": "SELECT 100.0 * COUNT(*) / (SELECT COUNT(*) FROM sets AS S1 INNER JOIN set_translations AS ST1 ON S1.code = ST1.setCode WHERE ST1.language = 'Japanese') FROM sets AS S2 INNER JOIN set_translations AS ST2 ON S2.code = ST2.setCode WHERE ST2.language = 'Japanese' AND S2.type = 'expansion'\t----- bird -----\tcard_games",
    "418": "SELECT availability FROM cards WHERE artist = 'Daren Bader'\t----- bird -----\tcard_games",
    "419": "SELECT COUNT(*) FROM cards WHERE borderColor = 'borderless' AND edhrecRank > 12000\t----- bird -----\tcard_games",
    "420": "SELECT COUNT(*) FROM cards WHERE isOversized = 1 AND isReprint = 1 AND isPromo = 1\t----- bird -----\tcard_games",
    "421": "SELECT flavorName FROM cards WHERE (power IS NULL OR power = '*') AND promoTypes = 'arenaleague' ORDER BY flavorName ASC LIMIT 3\t----- bird -----\tcard_games",
    "422": "SELECT language FROM foreign_data WHERE multiverseid = 149934\t----- bird -----\tcard_games",
    "423": "SELECT id, cardKingdomFoilId, cardKingdomId FROM cards WHERE cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL ORDER BY cardKingdomFoilId LIMIT 3\t----- bird -----\tcard_games",
    "424": "SELECT CAST(SUM(CASE WHEN isTextless = 1 AND layout = 'normal' THEN 1 ELSE 0 END) AS float) / COUNT(*) * 100 AS proportion FROM cards\t----- bird -----\tcard_games",
    "425": "SELECT number FROM cards WHERE side IS NULL AND (subtypes LIKE '%Angel%' AND subtypes LIKE '%Wizard%')\t----- bird -----\tcard_games",
    "426": "SELECT name FROM sets WHERE mtgoCode IS NULL or mtgoCode = '' ORDER BY name ASC LIMIT 3\t----- bird -----\tcard_games",
    "427": "SELECT T1.language FROM set_translations AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.mcmName = 'Archenemy' AND T1.setCode = 'ARC'\t----- bird -----\tcard_games",
    "428": "SELECT T1.name, T2.translation FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.id = 5\t----- bird -----\tcard_games",
    "429": "SELECT T1.language, T2.type FROM set_translations AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.id = 206\t----- bird -----\tcard_games",
    "430": "SELECT T1.id, T1.name FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.language = 'Italian' AND T1.block = 'Shadowmoor' ORDER BY T1.name ASC LIMIT 2\t----- bird -----\tcard_games",
    "431": "SELECT sets.id FROM sets INNER JOIN set_translations ON sets.code = set_translations.setCode WHERE sets.isForeignOnly = 0 AND sets.isFoilOnly = 1 AND set_translations.language = 'Japanese'\t----- bird -----\tcard_games",
    "432": "SELECT T1.setCode, MAX(T2.baseSetSize) FROM set_translations AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T1.language = 'Russian'\t----- bird -----\tcard_games",
    "433": "SELECT (COUNT(T1.id) * 100.0 / (SELECT COUNT(*) FROM sets WHERE isOnlineOnly = 1)) FROM set_translations AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T1.language = 'Chinese Simplified' AND T2.isOnlineOnly = 1\t----- bird -----\tcard_games",
    "434": "SELECT COUNT(DISTINCT T1.code) FROM set_translations AS T2 INNER JOIN sets AS T1 ON T1.code = T2.setCode WHERE T2.language = 'Japanese' AND (T1.mtgoCode IS NULL OR T1.mtgoCode = '')\t----- bird -----\tcard_games",
    "435": "SELECT id FROM cards WHERE borderColor = 'black'\t----- bird -----\tcard_games",
    "436": "SELECT id FROM cards WHERE frameEffects = 'extendedart'\t----- bird -----\tcard_games",
    "437": "SELECT name FROM cards WHERE borderColor = 'black' AND isFullArt = 1\t----- bird -----\tcard_games",
    "438": "SELECT language FROM set_translations WHERE id = 174\t----- bird -----\tcard_games",
    "439": "SELECT name FROM sets WHERE code = 'ALL'\t----- bird -----\tcard_games",
    "440": "SELECT language FROM foreign_data WHERE name = 'A Pedra Fellwar'\t----- bird -----\tcard_games",
    "441": "SELECT code FROM sets WHERE releaseDate = '2007-07-13'\t----- bird -----\tcard_games",
    "442": "SELECT baseSetSize, code FROM sets WHERE block IN (\"Masques\", \"Mirage\")\t----- bird -----\tcard_games",
    "443": "SELECT code FROM sets WHERE type = 'expansion'\t----- bird -----\tcard_games",
    "444": "SELECT foreign_data.name, foreign_data.type FROM cards INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE cards.watermark = 'boros'\t----- bird -----\tcard_games",
    "445": "SELECT T2.language, T2.flavorText, T2.type FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.watermark = 'colorpie'\t----- bird -----\tcard_games",
    "446": "SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM cards)) FROM cards AS T1 INNER JOIN sets AS T2 ON T1.id = T2.id WHERE T1.convertedManaCost = 10 AND T2.name = 'Abyssal Horror'\t----- bird -----\tcard_games",
    "447": "SELECT code FROM sets WHERE type = 'commander'\t----- bird -----\tcard_games",
    "448": "SELECT T2.name, T2.type FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.watermark = 'abzan'\t----- bird -----\tcard_games",
    "449": "SELECT T2.language, T1.type FROM cards AS T1 INNER JOIN set_translations AS T2 ON T1.printings = T2.setCode WHERE T1.watermark = 'azorius'\t----- bird -----\tcard_games",
    "450": "SELECT * FROM table\t----- bird -----\tcard_games",
    "451": "SELECT COUNT(*) FROM cards WHERE availability LIKE '%paper%' AND hand LIKE '+%'\t----- bird -----\tcard_games",
    "452": "SELECT asciiName FROM cards WHERE isTextless = 0\t----- bird -----\tcard_games",
    "453": "SELECT * FROM table\t----- bird -----\tcard_games",
    "454": "SELECT COUNT(*) FROM cards WHERE borderColor = 'white' AND (power = '*' OR power IS NULL)\t----- bird -----\tcard_games",
    "455": "SELECT name FROM cards WHERE isPromo = 1 AND side IS NOT NULL\t----- bird -----\tcard_games",
    "456": "SELECT types FROM cards WHERE name = 'Molimo, Maro-Sorcerer'\t----- bird -----\tcard_games",
    "457": "SELECT purchaseUrls FROM cards WHERE promoTypes = 'bundle'\t----- bird -----\tcard_games",
    "458": "SELECT COUNT(DISTINCT artist) FROM cards WHERE borderColor = 'black' AND availability LIKE '%arena%' AND availability LIKE '%mtgo%'\t----- bird -----\tcard_games",
    "459": "SELECT text, convertedManaCost FROM cards WHERE text = 'Serra Angel' OR text = 'Shrine Keeper'\t----- bird -----\tcard_games",
    "460": "SELECT artist FROM cards WHERE flavorName = 'Battra, Dark Destroyer'\t----- bird -----\tcard_games",
    "461": "SELECT name, convertedManaCost FROM cards WHERE frameVersion = '2003' ORDER BY convertedManaCost DESC LIMIT 3\t----- bird -----\tcard_games",
    "462": "SELECT T2.translation FROM cards AS T1 INNER JOIN set_translations AS T2 ON T1.setCode = T2.setCode WHERE T2.language = 'Italian' AND T1.name = 'Ancestor''s Chosen'\t----- bird -----\tcard_games",
    "463": "SELECT COUNT(translation) FROM set_translations WHERE setCode = ( SELECT setCode FROM cards WHERE name = 'Angel of Mercy' )\t----- bird -----\tcard_games",
    "464": "SELECT T1.name FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code INNER JOIN set_translations AS T3 ON T2.code = T3.setCode WHERE T3.translation = 'Hauptset Zehnte Edition'\t----- bird -----\tcard_games",
    "465": "SELECT EXISTS ( SELECT 1 FROM cards AS T1 INNER JOIN set_translations AS T2 ON T1.id = T2.id WHERE T1.name = 'Ancestor's Chosen' AND T2.language = 'Korean')\t----- bird -----\tcard_games",
    "466": "SELECT COUNT(T1.id) FROM cards AS T1 INNER JOIN set_translations AS T2 ON T1.setCode = T2.setCode WHERE T1.artist = 'Adam Rex' AND T2.translation = 'Hauptset Zehnte Edition'\t----- bird -----\tcard_games",
    "467": "SELECT T1.baseSetSize FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.translation = 'Hauptset Zehnte Edition'\t----- bird -----\tcard_games",
    "468": "SELECT T2.translation FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.name = 'Eighth Edition' AND T2.language = 'Simplified Chinese'\t----- bird -----\tcard_games",
    "469": "SELECT CASE WHEN T2.mtgoCode IS NOT NULL THEN 'Yes' ELSE 'No' END AS \"Did_It_Appear\" FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T1.name = 'Angel of Mercy'\t----- bird -----\tcard_games",
    "470": "SELECT sets.releaseDate FROM cards INNER JOIN sets ON cards.setCode = sets.id WHERE cards.name = 'Ancestor''s Chosen'\t----- bird -----\tcard_games",
    "471": "SELECT T1.type FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.translation = 'Hauptset Zehnte Edition'\t----- bird -----\tcard_games",
    "472": "SELECT COUNT(T1.id) FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.block = 'Ice Age' AND T2.language = 'Italian'\t----- bird -----\tcard_games",
    "473": "SELECT sets.isForeignOnly FROM cards INNER JOIN sets ON cards.id = sets.id WHERE cards.name = 'Adarkar Valkyrie' AND sets.isForeignOnly = 1\t----- bird -----\tcard_games",
    "474": "SELECT COUNT(T1.id) FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.language = 'Italian' AND T1.baseSetSize < 10\t----- bird -----\tcard_games",
    "475": "SELECT COUNT(T1.id) FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.mtgoCode WHERE T2.name = 'Coldsnap' AND T1.borderColor = 'black'\t----- bird -----\tcard_games",
    "476": "SELECT T1.name FROM cards AS T1 INNER JOIN sets AS T2 ON T1.id = T2.id WHERE T2.name = 'Coldsnap' AND T1.convertedManaCost = (SELECT MAX(convertedManaCost) FROM cards)\t----- bird -----\tcard_games",
    "477": "SELECT T1.artist FROM cards AS T1 INNER JOIN sets AS T2 ON T1.id = T2.id WHERE T2.name = 'Coldsnap' AND T1.artist IN ('Jeremy Jarvis', 'Aaron Miller','Chippy')\t----- bird -----\tcard_games",
    "478": "SELECT T1.name FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.name WHERE T2.name = 'Coldsnap' AND T1.number = '4'\t----- bird -----\tcard_games",
    "479": "SELECT COUNT(*) FROM cards AS T1 INNER JOIN sets AS T2 ON T1.id = T2.id WHERE T2.name = 'Coldsnap' AND T1.convertedManaCost > 5 AND (T1.power = '*' OR T1.power IS NULL)\t----- bird -----\tcard_games",
    "480": "SELECT foreign_data.flavorText FROM cards INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE foreign_data.language = 'Italian' AND foreign_data.name = 'Ancestor''s Chosen'\t----- bird -----\tcard_games",
    "481": "SELECT T2.language FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.name = T2.name WHERE T1.name = 'Ancestor''s Chosen' AND T2.flavorText IS NOT NULL\t----- bird -----\tcard_games",
    "482": "SELECT T2.type FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.asciiName = 'Ancestor''s Chosen' AND T2.language = 'German'\t----- bird -----\tcard_games",
    "483": "SELECT cards.text FROM cards INNER JOIN sets ON cards.printings = sets.code INNER JOIN set_translations ON sets.code = set_translations.setCode WHERE sets.name = 'Coldsnap' AND set_translations.language = 'Italian'\t----- bird -----\tcard_games",
    "484": "SELECT translation FROM set_translations JOIN cards ON set_translations.setId = cards.setId WHERE set_translations.language = 'Italian' AND cards.asciiName = (SELECT code FROM sets WHERE name = 'Coldsnap') AND cards.convertedManaCost = (SELECT MAX(convertedManaCost) FROM cards WHERE asciiName = (SELECT code FROM sets WHERE name = 'Coldsnap'))\t----- bird -----\tcard_games",
    "485": "SELECT T2.date FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.uuid = T2.uuid WHERE T1.name = 'Reminisce'\t----- bird -----\tcard_games",
    "486": "SELECT (SELECT COUNT(*) FROM cards WHERE convertedManaCost = 7 AND id IN (SELECT id FROM sets WHERE name = 'Coldsnap')) * 1.0 / (SELECT COUNT(*) FROM cards WHERE id IN (SELECT id FROM sets WHERE name = 'Coldsnap')) * 100\t----- bird -----\tcard_games",
    "487": "SELECT (SELECT COUNT(*) FROM cards WHERE cardKingdomFoilId = cardKingdomId AND cardKingdomId IS NOT NULL AND id IN (SELECT id FROM sets WHERE name = 'Coldsnap')) * 100.0 / (SELECT COUNT(*) FROM cards WHERE id IN (SELECT id FROM sets WHERE name = 'Coldsnap')) AS percentage\t----- bird -----\tcard_games",
    "488": "SELECT code FROM sets WHERE releaseDate = '2017-07-14'\t----- bird -----\tcard_games",
    "489": "SELECT keyruneCode FROM sets WHERE code = 'PKHC'\t----- bird -----\tcard_games",
    "490": "SELECT mcmId FROM sets WHERE code = 'SS2'\t----- bird -----\tcard_games",
    "491": "SELECT mcmName FROM sets WHERE \"releaseDate\" = '2017-06-09'\t----- bird -----\tcard_games",
    "492": "SELECT type FROM sets WHERE name = 'From the Vault: Lore'\t----- bird -----\tcard_games",
    "493": "SELECT parentCode FROM sets WHERE name = 'Commander 2014 Oversized'\t----- bird -----\tcard_games",
    "494": "SELECT T1.text, T2.hasContentWarning FROM rulings AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T2.artist = 'Jim Pavelec'\t----- bird -----\tcard_games",
    "495": "SELECT sets.releaseDate FROM cards INNER JOIN sets ON cards.setCode = sets.code WHERE cards.name = 'Evacuation'\t----- bird -----\tcard_games",
    "496": "SELECT T1.baseSetSize FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.translation = 'Rinascita di Alara'\t----- bird -----\tcard_games",
    "497": "SELECT T2.type FROM set_translations AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T1.translation = 'Huiti\u00e8me \u00e9dition'\t----- bird -----\tcard_games",
    "498": "SELECT translation FROM set_translations WHERE setCode = ( SELECT setCode FROM cards WHERE name = 'Tendo Ice Bridge' ) AND language = 'French'\t----- bird -----\tcard_games",
    "499": "SELECT COUNT(T2.translation) FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.name = 'Salvat 2011' AND T2.translation IS NOT NULL\t----- bird -----\tcard_games",
    "500": "SELECT T3.translation FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code INNER JOIN set_translations AS T3 ON T2.code = T3.setCode WHERE T1.name = 'Fellwar Stone' AND T3.language = 'Japanese'\t----- bird -----\tcard_games",
    "501": "SELECT name, MAX(convertedManaCost) FROM cards WHERE id IN (SELECT id FROM sets WHERE name = 'Journey into Nyx Hero''s Path')\t----- bird -----\tcard_games",
    "502": "SELECT T1.releaseDate FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.translation = 'Ola de fr\u00edo'\t----- bird -----\tcard_games",
    "503": "SELECT sets.type FROM cards INNER JOIN sets ON cards.id = sets.id WHERE cards.name = 'Samite Pilgrim'\t----- bird -----\tcard_games",
    "504": "SELECT COUNT(T1.id) FROM cards AS T1 INNER JOIN sets AS T2 ON T1.id = T2.id WHERE T2.name = 'World Championship Decks 2004' AND T1.convertedManaCost = 3\t----- bird -----\tcard_games",
    "505": "SELECT T1.translation FROM set_translations AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T1.language = 'Chinese Simplified' AND T2.name = 'Mirrodin'\t----- bird -----\tcard_games",
    "506": "SELECT (SUM(CASE WHEN T1.hasNonFoil = 1 AND T1.hasFoil = 0 THEN 1 ELSE 0 END) * 100.0 / COUNT(T2.id)) FROM cards AS T1 INNER JOIN set_translations AS T2 ON T1.id = T2.id WHERE T2.language = 'Japanese'\t----- bird -----\tcard_games",
    "507": "SELECT (CAST(SUM(CASE WHEN T1.isOnlineOnly = 1 THEN 1 ELSE 0 END) AS REAL) / CAST(SUM(CASE WHEN T2.language = 'Portuguese (Brazil)' THEN 1 ELSE 0 END) AS REAL)) * 100 FROM cards AS T1 INNER JOIN set_translations AS T2 ON T1.id = T2.id WHERE T2.language = 'Portuguese (Brazil)'.\t----- bird -----\tcard_games",
    "508": "SELECT availability FROM cards WHERE artist = 'Aleksi Briclot' AND isTextless = 1\t----- bird -----\tcard_games",
    "509": "SELECT id FROM sets WHERE baseSetSize = (SELECT MAX(baseSetSize) FROM sets)\t----- bird -----\tcard_games",
    "510": "SELECT artist FROM cards WHERE side IS NULL ORDER BY convertedManaCost DESC LIMIT 1\t----- bird -----\tcard_games",
    "511": "SELECT frameEffects FROM cards WHERE cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL GROUP BY frameEffects ORDER BY COUNT(*) DESC LIMIT 1\t----- bird -----\tcard_games",
    "512": "SELECT COUNT(*) FROM cards WHERE (power IS NULL OR power = '*') AND hasFoil = 0 AND duelDeck = 'A'\t----- bird -----\tcard_games",
    "513": "SELECT id FROM sets WHERE type = 'commander' ORDER BY totalSetSize DESC LIMIT 1\t----- bird -----\tcard_games",
    "514": "SELECT T1.name, T1.convertedManaCost FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T2.format = 'duel' ORDER BY T1.convertedManaCost DESC LIMIT 10\t----- bird -----\tcard_games",
    "515": "SELECT T1.originalReleaseDate, T2.format FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.rarity = 'mythic' AND T2.status = 'legal' ORDER BY T1.originalReleaseDate ASC LIMIT 1\t----- bird -----\tcard_games",
    "516": "SELECT COUNT(*) FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.artist = 'Volkan Baga' AND T2.language = 'French'\t----- bird -----\tcard_games",
    "517": "SELECT COUNT(*) FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.rarity = 'rare' AND T1.type = 'Enchantment' AND T1.text = 'Abundance' AND T2.status = 'Legal'\t----- bird -----\tcard_games",
    "518": "SELECT T2.name, T1.format FROM legalities AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T1.status = 'banned' AND T1.format = ( SELECT format FROM legalities WHERE status = 'banned' GROUP BY format ORDER BY COUNT(status) DESC LIMIT 1 )\t----- bird -----\tcard_games",
    "519": "SELECT T1.language FROM set_translations AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.name = 'Battlebond'\t----- bird -----\tcard_games",
    "520": "SELECT T1.artist, T2.format FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.artist = ( SELECT artist FROM cards GROUP BY artist ORDER BY COUNT(*) ASC LIMIT 1 )\t----- bird -----\tcard_games",
    "521": "SELECT T2.status FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.frameVersion = '1997' AND T1.artist = 'D. Alexander Gregory' AND T1.hasContentWarning = 1 AND T2.format = 'legacy'\t----- bird -----\tcard_games",
    "522": "SELECT T1.name, T2.format FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.edhrecRank = 1 AND T2.status = 'banned'\t----- bird -----\tcard_games",
    "523": "SELECT (SELECT COUNT(T1.id) FROM sets AS T1 WHERE T1.releaseDate BETWEEN '2012-01-01' AND '2015-12-31') / 4 AS avg_sets, T2.language FROM set_translations AS T2 INNER JOIN sets AS T1 ON T2.setCode = T1.code GROUP BY T2.language ORDER BY COUNT(T2.language) DESC LIMIT 1\t----- bird -----\tcard_games",
    "524": "SELECT artist FROM cards WHERE borderColor = 'black' AND availability = 'arena'\t----- bird -----\tcard_games",
    "525": "SELECT uuid FROM legalities WHERE format = 'oldschool' AND (status = 'banned' OR status = 'restricted')\t----- bird -----\tcard_games",
    "526": "SELECT COUNT(*) FROM cards WHERE artist = 'Matthew D. Wilson' AND availability = 'paper'\t----- bird -----\tcard_games",
    "527": "SELECT T2.text FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.uuid = T2.uuid WHERE T1.artist = 'Kev Walker' ORDER BY T2.date DESC\t----- bird -----\tcard_games",
    "528": "SELECT T1.name, T3.format FROM cards AS T1 INNER JOIN sets AS T2 ON T1.id = T2.id INNER JOIN legalities AS T3 ON T1.uuid = T3.uuid WHERE T2.name = 'Hour of Devastation' AND T3.status = 'Legal'\t----- bird -----\tcard_games",
    "529": "SELECT name FROM sets WHERE code IN ( SELECT setCode FROM set_translations WHERE language = 'Korean' ) AND code NOT IN ( SELECT setCode FROM set_translations WHERE language = 'Japanese' )\t----- bird -----\tcard_games",
    "530": "SELECT T1.frameVersion, T1.name, T2.status FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.artist = 'Allen Williams' AND T2.status = 'banned'\t----- bird -----\tcard_games",
    "531": "SELECT DisplayName, Reputation FROM users WHERE DisplayName IN ('Harlan', 'Jarrod Dixon')\t----- bird -----\tcodebase_community",
    "532": "SELECT DisplayName FROM users WHERE strftime('%Y', CreationDate) = '2014'\t----- bird -----\tcodebase_community",
    "533": "SELECT COUNT(Id) FROM users WHERE LastAccessDate > '2014-09-01 00:00:00'\t----- bird -----\tcodebase_community",
    "534": "SELECT DisplayName FROM users ORDER BY Views DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "535": "SELECT COUNT(*) FROM users WHERE UpVotes > 100 AND DownVotes > 1\t----- bird -----\tcodebase_community",
    "536": "SELECT COUNT(Id) FROM users WHERE Views > 10 AND strftime('%Y', CreationDate) > '2013'\t----- bird -----\tcodebase_community",
    "537": "SELECT COUNT(T1.Id) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'csgillespie'\t----- bird -----\tcodebase_community",
    "538": "SELECT T1.Title FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'csgillespie'\t----- bird -----\tcodebase_community",
    "539": "SELECT T2.DisplayName FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T1.Title = 'Eliciting priors from experts'\t----- bird -----\tcodebase_community",
    "540": "SELECT T1.Title FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'csgillespie' ORDER BY T1.ViewCount DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "541": "SELECT T1.DisplayName FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T2.FavoriteCount = ( SELECT MAX(FavoriteCount) FROM posts )\t----- bird -----\tcodebase_community",
    "542": "SELECT SUM(T1.CommentCount) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'csgillespie'\t----- bird -----\tcodebase_community",
    "543": "SELECT MAX(T1.AnswerCount) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'csgillespie'\t----- bird -----\tcodebase_community",
    "544": "SELECT T1.DisplayName FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.LastEditorUserId WHERE T2.Title = 'Examples for teaching: Correlation does not mean causation'\t----- bird -----\tcodebase_community",
    "545": "SELECT COUNT(*) FROM posts AS P INNER JOIN users AS U ON P.OwnerUserId = U.Id WHERE U.DisplayName = 'csgillespie' AND P.ParentId IS NULL\t----- bird -----\tcodebase_community",
    "546": "SELECT DISTINCT T1.DisplayName FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T2.ClosedDate IS NOT NULL\t----- bird -----\tcodebase_community",
    "547": "SELECT COUNT(*) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.Age > 65 AND T1.Score >= 20\t----- bird -----\tcodebase_community",
    "548": "SELECT U.Location FROM posts AS P INNER JOIN users AS U ON P.OwnerUserId = U.Id WHERE P.Title = 'Eliciting priors from experts'\t----- bird -----\tcodebase_community",
    "549": "SELECT posts.Body FROM posts INNER JOIN tags ON posts.Id = tags.ExcerptPostId WHERE tags.TagName = 'bayesian'\t----- bird -----\tcodebase_community",
    "550": "SELECT T2.Body FROM tags AS T1 INNER JOIN posts AS T2 ON T1.ExcerptPostId = T2.Id WHERE T1.ExcerptPostId = ( SELECT ExcerptPostId FROM tags WHERE Count = ( SELECT MAX(Count) FROM tags ) )\t----- bird -----\tcodebase_community",
    "551": "SELECT COUNT(badges.Id) FROM badges INNER JOIN users ON badges.UserId = users.Id WHERE users.DisplayName = 'csgillespie'\t----- bird -----\tcodebase_community",
    "552": "SELECT T1.Name FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.DisplayName = 'csgillespie'\t----- bird -----\tcodebase_community",
    "553": "SELECT COUNT(T1.Id) FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.DisplayName = 'csgillespie' AND strftime('%Y', T1.Date) = '2011'\t----- bird -----\tcodebase_community",
    "554": "SELECT DisplayName FROM users WHERE Id = (SELECT UserId FROM badges GROUP BY UserId ORDER BY COUNT(Id) DESC LIMIT 1)\t----- bird -----\tcodebase_community",
    "555": "SELECT AVG(T2.Score) FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T1.DisplayName = 'csgillespie'\t----- bird -----\tcodebase_community",
    "556": "SELECT COUNT(T2.Id) / COUNT(T1.DisplayName) FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T1.Views > 200\t----- bird -----\tcodebase_community",
    "557": "SELECT (COUNT(DISTINCT CASE WHEN U1.Age > 65 THEN P1.Id END) * 100.0 / COUNT(DISTINCT P1.Id)) FROM posts AS P1 INNER JOIN users AS U1 ON P1.OwnerUserId = U1.Id WHERE P1.Score > 20\t----- bird -----\tcodebase_community",
    "558": "SELECT COUNT(*) FROM votes WHERE UserId = 58 AND CreationDate = '2010-07-19'\t----- bird -----\tcodebase_community",
    "559": "SELECT CreationDate, COUNT(Id) as number_of_votes FROM votes GROUP BY CreationDate ORDER BY number_of_votes DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "560": "SELECT COUNT(Id) FROM badges WHERE Name = 'Revival'\t----- bird -----\tcodebase_community",
    "561": "SELECT T2.Title FROM comments AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T1.Score = ( SELECT MAX(Score) FROM comments )\t----- bird -----\tcodebase_community",
    "562": "SELECT COUNT(T2.Id) FROM posts AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.PostId WHERE T1.ViewCount = 1910\t----- bird -----\tcodebase_community",
    "563": "SELECT T2.FavoriteCount FROM comments AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T1.UserId = 3025 AND T1.CreationDate = '2014/4/23 20:29:39.0'\t----- bird -----\tcodebase_community",
    "564": "SELECT T1.Text FROM comments AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T2.ParentId = 107829 LIMIT 1\t----- bird -----\tcodebase_community",
    "565": "SELECT CASE WHEN T2.ClosedDate IS NULL THEN 'No' ELSE 'Yes' END as IsPostFinished FROM comments AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T1.UserId = 23853 AND T1.CreationDate = '2013-07-12 09:08:18.0'\t----- bird -----\tcodebase_community",
    "566": "SELECT users.Reputation FROM posts INNER JOIN users ON posts.OwnerUserId = users.Id WHERE posts.Id = '65041'\t----- bird -----\tcodebase_community",
    "567": "SELECT COUNT(T1.Id) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'Tiago Pasqualini'\t----- bird -----\tcodebase_community",
    "568": "SELECT T2.DisplayName FROM votes AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Id = '6347'\t----- bird -----\tcodebase_community",
    "569": "SELECT COUNT(votes.Id) FROM votes INNER JOIN posts ON votes.PostId = posts.Id WHERE posts.Title LIKE '%data visualization%'\t----- bird -----\tcodebase_community",
    "570": "SELECT T2.Name FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T1.DisplayName = 'DatEpicCoderGuyWhoPrograms'\t----- bird -----\tcodebase_community",
    "571": "SELECT CASE WHEN COUNT(votes.Id) = 0 THEN 0 ELSE COUNT(posts.Id) / COUNT(votes.Id) END FROM posts LEFT JOIN votes ON posts.OwnerUserId = votes.UserId WHERE posts.OwnerUserId = '24'\t----- bird -----\tcodebase_community",
    "572": "SELECT ViewCount FROM posts WHERE Title = 'Integration of Weka and/or RapidMiner into Informatica PowerCenter/Developer'\t----- bird -----\tcodebase_community",
    "573": "SELECT Text FROM comments WHERE Score = 17\t----- bird -----\tcodebase_community",
    "574": "SELECT DisplayName FROM users WHERE WebsiteUrl = 'http://stackoverflow.com'\t----- bird -----\tcodebase_community",
    "575": "SELECT T2.Name FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T1.DisplayName = 'SilentGhost'\t----- bird -----\tcodebase_community",
    "576": "SELECT T2.DisplayName FROM comments AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Text = 'thank you user93!'\t----- bird -----\tcodebase_community",
    "577": "SELECT comments.Text FROM users INNER JOIN comments ON users.Id = comments.UserId WHERE users.DisplayName = 'A Lion'\t----- bird -----\tcodebase_community",
    "578": "SELECT T2.DisplayName, T2.Reputation FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T1.Title = 'Understanding what Dassault iSight is doing?'\t----- bird -----\tcodebase_community",
    "579": "SELECT comments.Text FROM comments INNER JOIN posts ON comments.PostId = posts.Id WHERE posts.Title = 'How does gentle boosting differ from AdaBoost?'\t----- bird -----\tcodebase_community",
    "580": "SELECT u.DisplayName FROM users u INNER JOIN badges b ON u.Id = b.UserId WHERE b.Name = 'Necromancer' LIMIT 10\t----- bird -----\tcodebase_community",
    "581": "SELECT users.DisplayName FROM posts INNER JOIN users ON posts.LastEditorUserId = users.Id WHERE posts.Title = 'Open source tools for visualizing multi-dimensional data'\t----- bird -----\tcodebase_community",
    "582": "SELECT posts.Title FROM posts INNER JOIN users ON posts.LastEditorUserId = users.Id WHERE users.DisplayName = 'Vebjorn Ljosa'\t----- bird -----\tcodebase_community",
    "583": "SELECT SUM(T1.Score), T2.WebsiteUrl FROM posts AS T1 INNER JOIN users AS T2 ON T1.LastEditorUserId = T2.Id WHERE T2.DisplayName = 'Yevgeny'\t----- bird -----\tcodebase_community",
    "584": "SELECT Text FROM comments WHERE UserId IN (SELECT UserId FROM postHistory WHERE PostId = (SELECT Id FROM posts WHERE Title = 'Why square the difference instead of taking the absolute value in standard deviation?'))\t----- bird -----\tcodebase_community",
    "585": "SELECT SUM(T1.BountyAmount) FROM votes AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T2.Title LIKE '%data%'\t----- bird -----\tcodebase_community",
    "586": "SELECT users.DisplayName FROM votes INNER JOIN users ON votes.UserId = users.Id INNER JOIN posts ON votes.PostId = posts.Id WHERE votes.BountyAmount = 50 AND posts.Title LIKE '%variance%'\t----- bird -----\tcodebase_community",
    "587": "SELECT AVG(T1.ViewCount), T1.Title, T2.Text, T2.Score FROM posts AS T1 LEFT JOIN comments AS T2 ON T1.Id = T2.PostId WHERE T1.Tags LIKE '%humor%'\t----- bird -----\tcodebase_community",
    "588": "SELECT COUNT(*) FROM comments WHERE UserId = 13\t----- bird -----\tcodebase_community",
    "589": "SELECT Id, MAX(Reputation) FROM users\t----- bird -----\tcodebase_community",
    "590": "SELECT Id FROM users ORDER BY Views ASC LIMIT 1\t----- bird -----\tcodebase_community",
    "591": "SELECT COUNT(UserId) FROM badges WHERE Name = 'Supporter' AND strftime('%Y', Date) = '2011'\t----- bird -----\tcodebase_community",
    "592": "SELECT UserId FROM badges GROUP BY UserId HAVING COUNT(Name) > 5\t----- bird -----\tcodebase_community",
    "593": "SELECT COUNT(*) FROM (SELECT UserId FROM badges WHERE Name = 'Teacher' AND UserId IN (SELECT Id FROM users WHERE Location = 'New York') INTERSECT SELECT UserId FROM badges WHERE Name = 'Supporter' AND UserId IN (SELECT Id FROM users WHERE Location = 'New York'))\t----- bird -----\tcodebase_community",
    "594": "SELECT users.DisplayName, users.Reputation FROM posts INNER JOIN users ON posts.OwnerUserId = users.Id WHERE posts.Id = 1\t----- bird -----\tcodebase_community",
    "595": "SELECT T1.UserId FROM (SELECT UserId, COUNT(PostId) as post_count FROM postHistory GROUP BY UserId HAVING post_count = 1) AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.Views >= 1000\t----- bird -----\tcodebase_community",
    "596": "SELECT Name FROM badges WHERE UserId = ( SELECT UserId FROM comments GROUP BY UserId ORDER BY COUNT(Id) DESC LIMIT 1 )\t----- bird -----\tcodebase_community",
    "597": "SELECT COUNT(DISTINCT T1.Id) FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T1.Location = 'India' AND T2.Name = 'Teacher'\t----- bird -----\tcodebase_community",
    "598": "SELECT * FROM table\t----- bird -----\tcodebase_community",
    "599": "SELECT PostHistoryTypeId, (SELECT COUNT(DISTINCT UserId) FROM comments WHERE PostId = 3720) AS unique_comment_users FROM postHistory WHERE PostId = 3720\t----- bird -----\tcodebase_community",
    "600": "SELECT T1.PostId, T2.ViewCount FROM postLinks AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T1.RelatedPostId = 61217\t----- bird -----\tcodebase_community",
    "601": "SELECT T1.Score, T2.LinkTypeId FROM posts AS T1 INNER JOIN postLinks AS T2 ON T1.Id = T2.PostId WHERE T1.Id = 395\t----- bird -----\tcodebase_community",
    "602": "SELECT Id, LastEditorUserId FROM posts WHERE Score > 60\t----- bird -----\tcodebase_community",
    "603": "SELECT SUM(FavoriteCount) FROM posts WHERE OwnerUserId = 686 AND strftime('%Y', CreationDate) = '2011'\t----- bird -----\tcodebase_community",
    "604": "SELECT AVG(UpVotes), AVG(Age) FROM users WHERE Id IN (SELECT OwnerUserId FROM posts GROUP BY OwnerUserId HAVING COUNT(Id) > 10)\t----- bird -----\tcodebase_community",
    "605": "SELECT COUNT(UserId) FROM badges WHERE Name = 'Announcer'\t----- bird -----\tcodebase_community",
    "606": "SELECT Name FROM badges WHERE Date = '2010-07-19 19:39:08'\t----- bird -----\tcodebase_community",
    "607": "SELECT COUNT(*) FROM comments WHERE Score > 60\t----- bird -----\tcodebase_community",
    "608": "SELECT Text FROM comments WHERE CreationDate = '2010-07-19 19:25:47.0'\t----- bird -----\tcodebase_community",
    "609": "SELECT COUNT(Id) FROM posts WHERE Score = 10\t----- bird -----\tcodebase_community",
    "610": "SELECT T1.Name FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.Reputation = ( SELECT MAX(Reputation) FROM users )\t----- bird -----\tcodebase_community",
    "611": "SELECT T2.Reputation FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Date = '2010-07-19 19:39:08.0'\t----- bird -----\tcodebase_community",
    "612": "SELECT badges.Name FROM badges INNER JOIN users ON users.Id = badges.UserId WHERE users.DisplayName = 'Pierre'\t----- bird -----\tcodebase_community",
    "613": "SELECT badges.Date FROM badges INNER JOIN users ON badges.UserId = users.Id WHERE users.Location = 'Rochester, NY'\t----- bird -----\tcodebase_community",
    "614": "SELECT (CAST((SELECT COUNT(*) FROM badges WHERE Name = 'Teacher') AS REAL) / (SELECT COUNT(*) FROM users)) * 100\t----- bird -----\tcodebase_community",
    "615": "SELECT (CAST(COUNT(CASE WHEN T2.Age BETWEEN 13 AND 18 THEN 1 ELSE NULL END) AS REAL) / COUNT(*)) * 100 FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Name = 'Organizer'\t----- bird -----\tcodebase_community",
    "616": "SELECT comments.Score FROM comments INNER JOIN posts ON comments.PostId = posts.Id WHERE posts.CreationDate = '2010-07-19 19:19:56.0'\t----- bird -----\tcodebase_community",
    "617": "SELECT Text FROM comments WHERE CreationDate = '2010-07-19 19:37:33.0'\t----- bird -----\tcodebase_community",
    "618": "SELECT users.Age FROM users INNER JOIN badges ON users.Id = badges.UserId WHERE users.Location = 'Vienna, Austria'\t----- bird -----\tcodebase_community",
    "619": "SELECT COUNT(*) FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Name = 'Supporter' AND T2.Age BETWEEN 19 AND 65\t----- bird -----\tcodebase_community",
    "620": "SELECT SUM(T2.Views) FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Date = '2010-07-19 19:39:08.0'\t----- bird -----\tcodebase_community",
    "621": "SELECT Name FROM badges WHERE UserId IN (SELECT Id FROM users WHERE Reputation = (SELECT MIN(Reputation) FROM users))\t----- bird -----\tcodebase_community",
    "622": "SELECT badges.Name FROM badges INNER JOIN users ON badges.UserId = users.Id WHERE users.DisplayName = 'Sharpie'\t----- bird -----\tcodebase_community",
    "623": "SELECT COUNT(*) FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T1.Age > 65 AND T2.Name = 'Supporter'\t----- bird -----\tcodebase_community",
    "624": "SELECT DisplayName FROM users WHERE Id = 30\t----- bird -----\tcodebase_community",
    "625": "SELECT count(*) FROM users WHERE Location = 'New York'\t----- bird -----\tcodebase_community",
    "626": "SELECT COUNT(*) FROM votes WHERE strftime('%Y', CreationDate) = '2010'\t----- bird -----\tcodebase_community",
    "627": "SELECT COUNT(*) FROM users WHERE Age BETWEEN 19 AND 65\t----- bird -----\tcodebase_community",
    "628": "SELECT DisplayName FROM users ORDER BY Views DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "629": "SELECT (SELECT COUNT(Id) FROM votes WHERE strftime('%Y', CreationDate) = '2010') / (SELECT COUNT(Id) FROM votes WHERE strftime('%Y', CreationDate) = '2011') as ratio FROM votes LIMIT 1;\t----- bird -----\tcodebase_community",
    "630": "SELECT T1.Tags FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'John Stauffer'\t----- bird -----\tcodebase_community",
    "631": "SELECT COUNT(*) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'Daniel Vassallo'\t----- bird -----\tcodebase_community",
    "632": "SELECT COUNT(T1.Id) FROM votes AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.DisplayName = 'Harlan'\t----- bird -----\tcodebase_community",
    "633": "SELECT T1.Id, T1.AnswerCount FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'slashnick' ORDER BY T1.AnswerCount DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "634": "SELECT T2.DisplayName, SUM(T1.ViewCount) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName IN ('Harvey Motulsky', 'Noah Snyder') GROUP BY T2.DisplayName ORDER BY SUM(T1.ViewCount) DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "635": "SELECT COUNT(*) FROM (SELECT T1.Id FROM posts AS T1 INNER JOIN votes AS T2 ON T1.Id = T2.PostId INNER JOIN users AS T3 ON T1.OwnerUserId = T3.Id WHERE T3.DisplayName = 'Matt Parker' GROUP BY T1.Id HAVING COUNT(T2.Id) > 4)\t----- bird -----\tcodebase_community",
    "636": "SELECT COUNT(*) FROM comments AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id INNER JOIN posts AS T3 ON T1.PostId = T3.Id WHERE T2.DisplayName = 'Neil McGuigan' AND T1.Score < 60 AND T3.OwnerUserId = T2.Id\t----- bird -----\tcodebase_community",
    "637": "SELECT T1.Tags FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'Mark Meckes' AND T1.CommentCount = 0\t----- bird -----\tcodebase_community",
    "638": "SELECT T1.DisplayName FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T2.Name = 'Organizer'\t----- bird -----\tcodebase_community",
    "639": "SELECT ((SELECT COUNT(*) FROM posts WHERE Tags LIKE '%<r>%' AND OwnerDisplayName = 'Community') / (SELECT COUNT(*) FROM posts WHERE OwnerDisplayName = 'Community')) * 100.0 AS percentage\t----- bird -----\tcodebase_community",
    "640": "SELECT SUM(case when users.DisplayName='Mornington' then posts.ViewCount else 0 end) - SUM(case when users.DisplayName='Amos' then posts.ViewCount else 0 end) as difference FROM posts INNER JOIN users ON posts.OwnerUserId = users.Id\t----- bird -----\tcodebase_community",
    "641": "SELECT COUNT(DISTINCT UserId) FROM badges WHERE Name = 'commentator' AND strftime('%Y', Date) = '2014'\t----- bird -----\tcodebase_community",
    "642": "SELECT COUNT(Id) FROM posts WHERE \"CreaionDate\" BETWEEN '2010-07-21 00:00:00' AND '2010-07-21 23:59:59';\t----- bird -----\tcodebase_community",
    "643": "SELECT DisplayName, Age FROM users WHERE Views = (SELECT MAX(Views) FROM users)\t----- bird -----\tcodebase_community",
    "644": "SELECT LastEditDate, LastEditorUserId FROM posts WHERE Title = 'Detecting a given face in a database of facial images'\t----- bird -----\tcodebase_community",
    "645": "SELECT COUNT(*) FROM comments WHERE Score < 60 AND UserId = 13\t----- bird -----\tcodebase_community",
    "646": "SELECT T2.Title, T3.UserDisplayName FROM comments AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id INNER JOIN users AS T3 ON T1.UserId = T3.Id WHERE T1.Score > 60\t----- bird -----\tcodebase_community",
    "647": "SELECT badges.Name FROM badges INNER JOIN users ON badges.UserId = users.Id WHERE users.Location = 'North Pole' AND strftime('%Y', badges.Date) = '2011'\t----- bird -----\tcodebase_community",
    "648": "SELECT users.DisplayName, users.WebsiteUrl FROM users INNER JOIN posts ON users.Id = posts.OwnerUserId WHERE posts.FavoriteCount > 150\t----- bird -----\tcodebase_community",
    "649": "SELECT COUNT(postHistory.Id), posts.LastEditDate FROM postHistory INNER JOIN posts ON postHistory.PostId = posts.Id WHERE posts.Id = ( SELECT Id FROM posts WHERE Title = 'What is the best introductory Bayesian statistics textbook?' )\t----- bird -----\tcodebase_community",
    "650": "SELECT T2.LastAccessDate, T2.Location FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Name = 'Outliers'\t----- bird -----\tcodebase_community",
    "651": "SELECT T2.Title FROM postLinks AS T1 INNER JOIN posts AS T2 ON T1.RelatedPostId = T2.Id WHERE T1.PostId = ( SELECT Id FROM posts WHERE Title = 'How to tell if something happened in a data set which monitors a value over time' )\t----- bird -----\tcodebase_community",
    "652": "SELECT T2.Id, T3.Name FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId INNER JOIN badges AS T3 ON T1.Id = T3.UserId WHERE T1.DisplayName = 'Samuel' AND strftime('%Y', T2.CreationDate) = '2013' AND strftime('%Y', T3.Date) = '2013'\t----- bird -----\tcodebase_community",
    "653": "SELECT OwnerDisplayName FROM posts WHERE ViewCount = ( SELECT MAX(ViewCount) FROM posts )\t----- bird -----\tcodebase_community",
    "654": "SELECT U.DisplayName, U.Location FROM users U, posts P, tags T WHERE T.TagName = 'hypothesis-testing' AND T.ExcerptPostId = P.Id AND P.OwnerUserId = U.Id\t----- bird -----\tcodebase_community",
    "655": "SELECT p2.Title, pl.LinkTypeId FROM postLinks AS pl INNER JOIN posts AS p1 ON pl.PostId = p1.Id INNER JOIN posts AS p2 ON pl.RelatedPostId = p2.Id WHERE p1.Title = 'What are principal component scores?'\t----- bird -----\tcodebase_community",
    "656": "SELECT T2.DisplayName FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T1.Score = ( SELECT MAX(Score) FROM posts WHERE ParentId IS NOT NULL )\t----- bird -----\tcodebase_community",
    "657": "SELECT T2.DisplayName, T2.WebsiteUrl FROM votes AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.VoteTypeId = 8 AND T1.BountyAmount = (SELECT MAX(BountyAmount) FROM votes WHERE VoteTypeId = 8)\t----- bird -----\tcodebase_community",
    "658": "SELECT Title FROM posts ORDER BY ViewCount DESC LIMIT 5\t----- bird -----\tcodebase_community",
    "659": "SELECT COUNT(*) FROM tags WHERE Count BETWEEN 5000 AND 7000\t----- bird -----\tcodebase_community",
    "660": "SELECT OwnerUserId FROM posts ORDER BY FavoriteCount DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "661": "SELECT Age FROM users WHERE Reputation = (SELECT MAX(Reputation) from users)\t----- bird -----\tcodebase_community",
    "662": "SELECT COUNT(posts.Id) FROM votes INNER JOIN posts ON votes.PostId = posts.Id WHERE votes.BountyAmount = 50 AND strftime('%Y', votes.CreationDate) = '2011'\t----- bird -----\tcodebase_community",
    "663": "SELECT Id FROM users ORDER BY Age ASC LIMIT 1\t----- bird -----\tcodebase_community",
    "664": "The query cannot be revised as there is no direct relationship between the Tags column in the posts table and the TagName column in the tags table.\t----- bird -----\tcodebase_community",
    "665": "SELECT COUNT(*) / 12 FROM postLinks AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE strftime('%Y', T1.CreationDate) = '2010' AND T2.AnswerCount <= 2\t----- bird -----\tcodebase_community",
    "666": "SELECT T2.Id, MAX(T2.FavoriteCount) FROM votes AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T1.UserId = 1465\t----- bird -----\tcodebase_community",
    "667": "SELECT Title FROM posts WHERE Id = ( SELECT PostId FROM postLinks ORDER BY CreationDate ASC LIMIT 1 )\t----- bird -----\tcodebase_community",
    "668": "SELECT DisplayName FROM users WHERE Id = (SELECT UserId FROM badges GROUP BY UserId ORDER BY COUNT(Name) DESC LIMIT 1)\t----- bird -----\tcodebase_community",
    "669": "SELECT MIN(votes.CreationDate) FROM votes INNER JOIN users ON votes.UserId = users.Id WHERE users.DisplayName = 'chl'\t----- bird -----\tcodebase_community",
    "670": "SELECT MIN(CreaionDate) FROM posts WHERE OwnerUserId = ( SELECT Id FROM users WHERE Age = ( SELECT MIN(Age) FROM users ) )\t----- bird -----\tcodebase_community",
    "671": "SELECT T1.DisplayName FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T2.Name = 'Autobiographer' ORDER BY T2.Date ASC LIMIT 1\t----- bird -----\tcodebase_community",
    "672": "SELECT COUNT(DISTINCT OwnerUserId) FROM posts WHERE FavoriteCount >= 4 AND OwnerUserId IN (SELECT Id FROM users WHERE Location = 'United Kingdom')\t----- bird -----\tcodebase_community",
    "673": "SELECT COUNT(T1.PostId)/COUNT(DISTINCT T1.UserId) FROM votes AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.Age = ( SELECT MAX(Age) FROM users )\t----- bird -----\tcodebase_community",
    "674": "SELECT DisplayName FROM users WHERE Reputation = (SELECT MAX(Reputation) FROM users)\t----- bird -----\tcodebase_community",
    "675": "SELECT COUNT(*) FROM users WHERE Reputation > 2000 AND Views > 1000\t----- bird -----\tcodebase_community",
    "676": "SELECT DisplayName FROM users WHERE Age BETWEEN 19 AND 65\t----- bird -----\tcodebase_community",
    "677": "SELECT COUNT(T1.Id) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'Jay Stevens' AND strftime('%Y', T1.CreaionDate) = '2010'\t----- bird -----\tcodebase_community",
    "678": "SELECT p.Id, p.Title FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE u.DisplayName = 'Harvey Motulsky' ORDER BY p.ViewCount DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "679": "SELECT Id, Title FROM posts ORDER BY Score DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "680": "SELECT AVG(T2.Score) FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T1.DisplayName = 'Stephen Turner'\t----- bird -----\tcodebase_community",
    "681": "SELECT U.DisplayName FROM users U INNER JOIN posts P ON U.Id = P.OwnerUserId WHERE P.ViewCount > 20000 AND strftime('%Y', P.CreaionDate) = '2011'\t----- bird -----\tcodebase_community",
    "682": "SELECT Id, OwnerDisplayName FROM posts WHERE strftime('%Y', CreaionDate) = '2010' AND FavoriteCount = (SELECT MAX(FavoriteCount) FROM posts WHERE strftime('%Y', CreaionDate) = '2010')\t----- bird -----\tcodebase_community",
    "683": "SELECT (CAST(COUNT(T1.Id) AS REAL) / (SELECT COUNT(*) FROM posts)) * 100 AS percentage FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE strftime('%Y', T1.CreationDate) = '2011' AND T2.Reputation > 1000\t----- bird -----\tcodebase_community",
    "684": "SELECT COUNT(Id) * 100.0 / (SELECT COUNT(*) FROM users) as percentage FROM users WHERE Age BETWEEN 13 AND 18;\t----- bird -----\tcodebase_community",
    "685": "SELECT T1.ViewCount, T2.DisplayName FROM posts AS T1 INNER JOIN users AS T2 ON T1.LastEditorUserId = T2.Id WHERE T1.Title = 'Computer Game Datasets'\t----- bird -----\tcodebase_community",
    "686": "SELECT COUNT(Id) FROM posts WHERE ViewCount > ( SELECT AVG(ViewCount) FROM posts )\t----- bird -----\tcodebase_community",
    "687": "SELECT COUNT(*) FROM comments WHERE PostId = ( SELECT Id FROM posts WHERE Score = ( SELECT MAX(Score) FROM posts ) )\t----- bird -----\tcodebase_community",
    "688": "SELECT COUNT(Id) FROM posts WHERE ViewCount > 35000 AND CommentCount = 0\t----- bird -----\tcodebase_community",
    "689": "SELECT T2.DisplayName, T2.Location FROM posts AS T1 INNER JOIN users AS T2 ON T1.LastEditorUserId = T2.Id WHERE T1.Id = 183\t----- bird -----\tcodebase_community",
    "690": "SELECT T1.Name FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.DisplayName = 'Emmett' ORDER BY T1.Date DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "691": "SELECT COUNT(*) FROM users WHERE Age BETWEEN 19 AND 65 AND UpVotes > 5000\t----- bird -----\tcodebase_community",
    "692": "SELECT badges.Date - users.CreationDate FROM users INNER JOIN badges ON users.Id = badges.UserId WHERE users.DisplayName = 'Zolomon'\t----- bird -----\tcodebase_community",
    "693": "SELECT ((SELECT COUNT(Id) FROM posts WHERE OwnerUserId = (SELECT Id FROM users ORDER BY CreationDate DESC LIMIT 1)) + (SELECT COUNT(Id) FROM comments WHERE UserId = (SELECT Id FROM users ORDER BY CreationDate DESC LIMIT 1))) AS Number_of_posts_and_comments\t----- bird -----\tcodebase_community",
    "694": "SELECT T1.Text, T1.UserDisplayName FROM comments AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T2.Title = 'Analysing wind data with R' ORDER BY T1.CreationDate DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "695": "SELECT COUNT(DISTINCT UserId) FROM badges WHERE Name = 'Citizen Patrol'\t----- bird -----\tcodebase_community",
    "696": "SELECT COUNT(Id) FROM posts WHERE Tags LIKE '%<careers>%'\t----- bird -----\tcodebase_community",
    "697": "SELECT Reputation, Views FROM users WHERE DisplayName = 'Jarrod Dixon'\t----- bird -----\tcodebase_community",
    "698": "SELECT AnswerCount, CommentCount FROM posts WHERE Title = 'Clustering 1D data'\t----- bird -----\tcodebase_community",
    "699": "SELECT CreationDate FROM users WHERE DisplayName = 'IrishStat'\t----- bird -----\tcodebase_community",
    "700": "SELECT COUNT(*) FROM votes WHERE BountyAmount >= 30\t----- bird -----\tcodebase_community",
    "701": "SELECT ( SELECT COUNT(Id) FROM posts WHERE OwnerUserId = ( SELECT OwnerUserId FROM users WHERE Reputation = ( SELECT MAX(Reputation) FROM users ) ) AND Score > 50 ) * 100 / ( SELECT COUNT(Id) FROM posts WHERE OwnerUserId = ( SELECT OwnerUserId FROM users WHERE Reputation = ( SELECT MAX(Reputation) FROM users ) ) ) AS percentage\t----- bird -----\tcodebase_community",
    "702": "SELECT COUNT(*) FROM posts WHERE Score < 20\t----- bird -----\tcodebase_community",
    "703": "SELECT COUNT(*) FROM tags WHERE Id < 15 AND Count <= 20\t----- bird -----\tcodebase_community",
    "704": "SELECT ExcerptPostId, WikiPostId FROM tags WHERE TagName = 'sample'\t----- bird -----\tcodebase_community",
    "705": "SELECT U.Reputation, U.UpVotes FROM users AS U INNER JOIN comments AS C ON U.Id = C.UserId WHERE C.Text = 'fine, you win :)'\t----- bird -----\tcodebase_community",
    "706": "SELECT comments.Text FROM comments INNER JOIN posts ON comments.PostId=posts.Id WHERE posts.Title = 'linear regression'\t----- bird -----\tcodebase_community",
    "707": "SELECT T1.Text FROM comments AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T2.ViewCount BETWEEN 100 AND 150 ORDER BY T1.Score DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "708": "SELECT T2.CreationDate, T2.Age FROM comments AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Text LIKE '%http://%'\t----- bird -----\tcodebase_community",
    "709": "SELECT COUNT(DISTINCT posts.Id) FROM comments INNER JOIN posts ON comments.PostId = posts.Id WHERE comments.Score = 0 AND posts.ViewCount < 5\t----- bird -----\tcodebase_community",
    "710": "SELECT COUNT(T1.Id) FROM comments AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T2.CommentCount = 1 AND T1.Score = 0\t----- bird -----\tcodebase_community",
    "711": "SELECT COUNT(DISTINCT T1.UserId) FROM comments AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Score = 0 AND T2.Age = 40\t----- bird -----\tcodebase_community",
    "712": "SELECT T1.Id, T2.Text FROM posts AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.PostId WHERE T1.Title = 'Group differences on a five point Likert item'\t----- bird -----\tcodebase_community",
    "713": "SELECT T2.UpVotes FROM comments AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Text = 'R is also lazy evaluated.'\t----- bird -----\tcodebase_community",
    "714": "SELECT T1.Text FROM comments AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.DisplayName = 'Harvey Motulsky'\t----- bird -----\tcodebase_community",
    "715": "SELECT T1.DisplayName FROM users AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.UserId WHERE T2.Score BETWEEN 1 AND 5 AND T1.DownVotes = 0\t----- bird -----\tcodebase_community",
    "716": "SELECT (COUNT(T1.UserId) * 1.0 / (SELECT COUNT(*) FROM comments WHERE Score BETWEEN 5 and 10)) * 100 FROM users AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.UserId WHERE T1.UpVotes = 0 AND T2.Score BETWEEN 5 and 10\t----- bird -----\tcodebase_community",
    "717": "SELECT superpower.power_name FROM superhero INNER JOIN hero_power ON superhero.id = hero_power.hero_id INNER JOIN superpower ON hero_power.power_id = superpower.id WHERE superhero.superhero_name = '3-D Man'\t----- bird -----\tsuperhero",
    "718": "SELECT COUNT(DISTINCT T1.hero_id) FROM hero_power AS T1 INNER JOIN superpower AS T2 ON T1.power_id = T2.id WHERE T2.power_name = 'Super Strength'\t----- bird -----\tsuperhero",
    "719": "SELECT COUNT(T1.superhero_name) FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T3.power_name = 'Super Strength' AND T1.height_cm > 200\t----- bird -----\tsuperhero",
    "720": "SELECT s.full_name FROM superhero AS s JOIN hero_power AS hp ON s.id = hp.hero_id GROUP BY s.id HAVING COUNT(hp.power_id) > 15\t----- bird -----\tsuperhero",
    "721": "SELECT COUNT(T1.id) FROM superhero T1 INNER JOIN colour T2 ON T1.eye_colour_id = T2.id WHERE T2.colour = 'Blue'\t----- bird -----\tsuperhero",
    "722": "SELECT T2.colour FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.skin_colour_id = T2.id WHERE T1.superhero_name = 'Apocalypse'\t----- bird -----\tsuperhero",
    "723": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id INNER JOIN hero_power AS T3 ON T1.id = T3.hero_id INNER JOIN superpower AS T4 ON T3.power_id = T4.id WHERE T2.colour = 'Blue' AND T4.power_name = 'Agility'\t----- bird -----\tsuperhero",
    "724": "SELECT S.superhero_name FROM superhero AS S INNER JOIN colour AS C1 ON S.eye_colour_id = C1.id INNER JOIN colour AS C2 ON S.hair_colour_id = C2.id WHERE C1.colour = 'Blue' AND C2.colour = 'Blond'\t----- bird -----\tsuperhero",
    "725": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'Marvel Comics'\t----- bird -----\tsuperhero",
    "726": "SELECT T1.full_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'Marvel Comics' ORDER BY T1.height_cm DESC LIMIT 1\t----- bird -----\tsuperhero",
    "727": "SELECT T2.publisher_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.superhero_name = 'Sauron'\t----- bird -----\tsuperhero",
    "728": "SELECT COUNT(superhero.id) FROM superhero INNER JOIN publisher ON superhero.publisher_id = publisher.id INNER JOIN colour ON superhero.eye_colour_id = colour.id WHERE publisher.publisher_name = 'Marvel Comics' AND colour.colour = 'Blue'\t----- bird -----\tsuperhero",
    "729": "SELECT AVG(T1.height_cm) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'Marvel Comics'\t----- bird -----\tsuperhero",
    "730": "SELECT ROUND((SELECT COUNT(*) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id INNER JOIN hero_power AS T3 ON T1.id = T3.hero_id INNER JOIN superpower AS T4 ON T3.power_id = T4.id WHERE T2.publisher_name = 'Marvel Comics' AND T4.power_name = 'Super Strength') * 100.0 / (SELECT COUNT(*) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'Marvel Comics'), 2)\t----- bird -----\tsuperhero",
    "731": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'DC Comics'\t----- bird -----\tsuperhero",
    "732": "SELECT T2.publisher_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.id = (SELECT hero_id FROM hero_attribute WHERE attribute_id = (SELECT id FROM attribute WHERE attribute_name = 'Speed') ORDER BY attribute_value ASC LIMIT 1)\t----- bird -----\tsuperhero",
    "733": "SELECT COUNT(DISTINCT T1.superhero_name) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id INNER JOIN publisher AS T3 ON T1.publisher_id = T3.id WHERE T2.colour = 'Gold' AND T3.publisher_name = 'Marvel Comics'\t----- bird -----\tsuperhero",
    "734": "SELECT T2.publisher_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.superhero_name = 'Blue Beetle II'\t----- bird -----\tsuperhero",
    "735": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.hair_colour_id = T2.id WHERE T2.colour = 'Blond'\t----- bird -----\tsuperhero",
    "736": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN attribute AS T3 ON T2.attribute_id = T3.id WHERE T3.attribute_name = 'Intelligence' ORDER BY T2.attribute_value ASC LIMIT 1\t----- bird -----\tsuperhero",
    "737": "SELECT T2.race FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T1.superhero_name = 'Copycat'\t----- bird -----\tsuperhero",
    "738": "SELECT COUNT(DISTINCT T1.hero_id) FROM hero_attribute AS T1 INNER JOIN attribute AS T2 ON T1.attribute_id = T2.id WHERE T2.attribute_name = 'Durability' AND T1.attribute_value < 50\t----- bird -----\tsuperhero",
    "739": "SELECT superhero.superhero_name FROM hero_power INNER JOIN superhero ON hero_power.hero_id = superhero.id INNER JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'Death Touch'\t----- bird -----\tsuperhero",
    "740": "SELECT COUNT(*) FROM superhero AS S JOIN hero_attribute AS HA ON S.id = HA.hero_id JOIN attribute AS A ON HA.attribute_id = A.id JOIN gender AS G ON S.gender_id = G.id WHERE A.attribute_name = 'Strength' AND HA.attribute_value = 100 AND G.gender = 'Female'\t----- bird -----\tsuperhero",
    "741": "SELECT T1.superhero_name FROM superhero AS T1 WHERE T1.id = ( SELECT hero_id FROM hero_power GROUP BY hero_id ORDER BY COUNT(power_id) DESC LIMIT 1 )\t----- bird -----\tsuperhero",
    "742": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T2.race = 'Vampire'\t----- bird -----\tsuperhero",
    "743": "SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM superhero) FROM superhero AS T1 INNER JOIN alignment AS T2 ON T1.alignment_id = T2.id INNER JOIN publisher AS T3 ON T1.publisher_id = T3.id WHERE T2.alignment = 'Neutral' AND T3.publisher_name = 'Marvel Comics'\t----- bird -----\tsuperhero",
    "744": "SELECT (SELECT COUNT(*) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'Marvel Comics') - (SELECT COUNT(*) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'DC Comics')\t----- bird -----\tsuperhero",
    "745": "SELECT id FROM publisher WHERE publisher_name = 'Star Trek'\t----- bird -----\tsuperhero",
    "746": "SELECT AVG(attribute_value) FROM hero_attribute\t----- bird -----\tsuperhero",
    "747": "SELECT COUNT(*) FROM superhero WHERE full_name IS NULL\t----- bird -----\tsuperhero",
    "748": "SELECT T2.colour FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.id = 75\t----- bird -----\tsuperhero",
    "749": "SELECT T3.power_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T1.superhero_name = 'Deathlok'\t----- bird -----\tsuperhero",
    "750": "SELECT AVG(superhero.weight_kg) FROM superhero WHERE superhero.gender_id = 2Q: How many superheroes are there with height more than 200 cm?Hint: height more than 200 cm refers to height_cm > 200; count refers to COUNT(id)Schema_links: ['superhero.height_cm', '200']A: Let\u2019s think step by step. For creating the SQL for the given question, we do not need to join any tables.We have to filter the rows where height_cm > 200.Then, we have to find the count of superheroes which is COUNT(id).So the sqlite SQL query will be:SQL: SELECT COUNT(superhero.id) FROM superhero WHERE superhero.height_cm > 200Q: What is the average height of all male superheroes?Hint: male refers to gender_id = 1; average height refers to AVG(height_cm)Schema_links: ['superhero.gender_id', 'superhero.height_cm', 'superhero.gender_id=gender.id', '1']A: Let\u2019s think step by step. For creating the SQL for the given question, we need to join these tables = ['superhero','gender'].First of all, for joining these tables we have to use the common column = ['superhero.gender_id=gender.id'].Now, we have to filter the rows where gender_id = 1 which refers to male superheroes.Then, we have to find the average height which is AVG(height_cm).So the sqlite SQL query will be:SQL: SELECT AVG(superhero.height_cm) FROM superhero WHERE superhero.gender_id = 1Q: How many superheroes are there with weight less than 80 kg?Hint: weight less than 80 kg refers to weight_kg < 80; count refers to COUNT(id)Schema_links: ['superhero.weight_kg', '80']A: Let\u2019s think step by step. For creating the SQL for the given question, we do not need to join any tables.We have to filter the rows where weight_kg < 80.Then, we have to find the count of superheroes which is COUNT(id).So the sqlite SQL query will be:SQL: SELECT COUNT(superhero.id) FROM superhero WHERE superhero.weight_kg < 80\t----- bird -----\tsuperhero",
    "751": "SELECT T4.power_name FROM gender AS T1 INNER JOIN superhero AS T2 ON T1.id = T2.gender_id INNER JOIN hero_power AS T3 ON T2.id = T3.hero_id INNER JOIN superpower AS T4 ON T3.power_id = T4.id WHERE T1.gender = 'Male' LIMIT 5\t----- bird -----\tsuperhero",
    "752": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T2.race = 'Alien'\t----- bird -----\tsuperhero",
    "753": "SELECT superhero_name FROM superhero WHERE height_cm BETWEEN 170 AND 190 AND eye_colour_id = 1\t----- bird -----\tsuperhero",
    "754": "SELECT superpower.power_name FROM hero_power INNER JOIN superpower ON hero_power.power_id = superpower.id WHERE hero_power.hero_id = 56\t----- bird -----\tsuperhero",
    "755": "SELECT T1.full_name FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T2.race = 'Demi-God' LIMIT 5\t----- bird -----\tsuperhero",
    "756": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN alignment AS T2 ON T1.alignment_id = T2.id WHERE T2.alignment = 'Bad'\t----- bird -----\tsuperhero",
    "757": "SELECT race.race FROM superhero INNER JOIN race ON superhero.race_id = race.id WHERE superhero.weight_kg = 169\t----- bird -----\tsuperhero",
    "758": "SELECT colour.colour FROM superhero, colour WHERE superhero.height_cm = 185 AND superhero.race_id = (SELECT id FROM race WHERE race = 'human') AND superhero.hair_colour_id = colour.id\t----- bird -----\tsuperhero",
    "759": "SELECT T2.colour FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.weight_kg = ( SELECT MAX(weight_kg) FROM superhero )\t----- bird -----\tsuperhero",
    "760": "SELECT (COUNT(*) * 100) / (SELECT COUNT(*) FROM superhero WHERE height_cm BETWEEN 150 AND 180) AS percentage FROM superhero WHERE height_cm BETWEEN 150 AND 180 AND publisher_id = 13Note: The query assumes that the publisher_id for Marvel Comics is 13. Please replace 13 with the correct id if it is different.\t----- bird -----\tsuperhero",
    "761": "SELECT T1.full_name FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id WHERE T1.weight_kg > 0.79 * ( SELECT AVG(weight_kg) FROM superhero ) AND T2.gender = 'Male'\t----- bird -----\tsuperhero",
    "762": "SELECT T2.power_name FROM hero_power AS T1 INNER JOIN superpower AS T2 ON T1.power_id = T2.id GROUP BY T2.power_name ORDER BY COUNT(*) DESC LIMIT 1\t----- bird -----\tsuperhero",
    "763": "SELECT T2.attribute_value FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id WHERE T1.superhero_name = 'Abomination'\t----- bird -----\tsuperhero",
    "764": "SELECT T2.power_name FROM hero_power AS T1 INNER JOIN superpower AS T2 ON T1.power_id = T2.id WHERE T1.hero_id = 1\t----- bird -----\tsuperhero",
    "765": "SELECT COUNT(DISTINCT T1.hero_id) FROM hero_power AS T1 INNER JOIN superpower AS T2 ON T1.power_id = T2.id WHERE T2.power_name = 'stealth'\t----- bird -----\tsuperhero",
    "766": "SELECT T1.full_name FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id WHERE T1.id = ( SELECT hero_id FROM hero_attribute WHERE attribute_id = ( SELECT id FROM attribute WHERE attribute_name = 'Strength' ) ORDER BY attribute_value DESC LIMIT 1 )\t----- bird -----\tsuperhero",
    "767": "SELECT AVG(skin_colour_id) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.skin_colour_id = T2.id WHERE T2.id = 1\t----- bird -----\tsuperhero",
    "768": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'Dark Horse Comics'\t----- bird -----\tsuperhero",
    "769": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN attribute AS T3 ON T2.attribute_id = T3.id INNER JOIN publisher AS T4 ON T1.publisher_id = T4.id WHERE T4.publisher_name = 'Dark Horse Comics' AND T3.attribute_name = 'durability' ORDER BY T2.attribute_value DESC LIMIT 1\t----- bird -----\tsuperhero",
    "770": "SELECT T1.colour FROM colour AS T1 INNER JOIN superhero AS T2 ON T1.id = T2.eye_colour_id WHERE T2.full_name = 'Abraham Sapien'\t----- bird -----\tsuperhero",
    "771": "SELECT superhero.superhero_name FROM superhero INNER JOIN hero_power ON superhero.id = hero_power.hero_id INNER JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'Flight'\t----- bird -----\tsuperhero",
    "772": "SELECT T4.colour AS eye_colour, T5.colour AS hair_colour, T6.colour AS skin_colour FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id INNER JOIN publisher AS T3 ON T1.publisher_id = T3.id INNER JOIN colour AS T4 ON T1.eye_colour_id = T4.id INNER JOIN colour AS T5 ON T1.hair_colour_id = T5.id INNER JOIN colour AS T6 ON T1.skin_colour_id = T6.id WHERE T2.gender = 'Female' AND T3.publisher_name = 'Dark Horse Comics'\t----- bird -----\tsuperhero",
    "773": "SELECT T1.superhero_name, T2.publisher_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.hair_colour_id = T1.skin_colour_id AND T1.hair_colour_id = T1.eye_colour_id\t----- bird -----\tsuperhero",
    "774": "SELECT T2.race FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T1.superhero_name = 'A-Bomb'\t----- bird -----\tsuperhero",
    "775": "SELECT (CAST(SUM(CASE WHEN T1.colour = 'Blue' THEN 1 ELSE 0 END) AS REAL) / COUNT(*)) * 100 FROM superhero AS T3 INNER JOIN gender AS T2 ON T3.gender_id = T2.id INNER JOIN colour AS T1 ON T3.eye_colour_id = T1.id WHERE T2.gender = 'Female'\t----- bird -----\tsuperhero",
    "776": "SELECT T1.superhero_name, T2.race FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T1.full_name = 'Charles Chandler'\t----- bird -----\tsuperhero",
    "777": "SELECT T2.gender FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id WHERE T1.superhero_name = 'Agent 13'\t----- bird -----\tsuperhero",
    "778": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T3.power_name = 'Adaptation'\t----- bird -----\tsuperhero",
    "779": "SELECT COUNT(T1.power_id) FROM hero_power AS T1 INNER JOIN superhero AS T2 ON T1.hero_id = T2.id WHERE T2.superhero_name = 'Amazo'\t----- bird -----\tsuperhero",
    "780": "SELECT T3.power_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T1.full_name = 'Hunter Zolomon'\t----- bird -----\tsuperhero",
    "781": "SELECT T1.height_cm FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T2.colour = 'Amber'\t----- bird -----\tsuperhero",
    "782": "SELECT S.superhero_name FROM superhero AS S INNER JOIN colour AS C1 ON S.eye_colour_id = C1.id INNER JOIN colour AS C2 ON S.hair_colour_id = C2.id WHERE C1.colour = 'Black' AND C2.colour = 'Black'\t----- bird -----\tsuperhero",
    "783": "SELECT colour2.colour AS eye_colour FROM superhero INNER JOIN colour ON superhero.skin_colour_id = colour.id INNER JOIN colour AS colour2 ON superhero.eye_colour_id = colour2.id WHERE colour.colour = 'Gold'\t----- bird -----\tsuperhero",
    "784": "SELECT T1.full_name FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T2.race = 'Vampire'\t----- bird -----\tsuperhero",
    "785": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN alignment AS T2 ON T1.alignment_id = T2.id WHERE T2.alignment = 'Neutral'\t----- bird -----\tsuperhero",
    "786": "SELECT COUNT(hero_id) FROM hero_attribute WHERE attribute_value = ( SELECT MAX(attribute_value) FROM hero_attribute WHERE attribute_id = ( SELECT id FROM attribute WHERE attribute_name = 'Strength' ) )\t----- bird -----\tsuperhero",
    "787": "SELECT race.race, alignment.alignment FROM superhero INNER JOIN alignment ON superhero.alignment_id = alignment.id INNER JOIN race ON superhero.race_id = race.id WHERE superhero.superhero_name = 'Cameron Hicks'\t----- bird -----\tsuperhero",
    "788": "SELECT (CAST(SUM(CASE WHEN T1.gender = 'Female' AND T2.publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) AS REAL) / CAST(COUNT(*) AS REAL)) * 100 AS percent FROM gender AS T1 INNER JOIN superhero AS T3 ON T1.id = T3.gender_id INNER JOIN publisher AS T2 ON T3.publisher_id = T2.id\t----- bird -----\tsuperhero",
    "789": "SELECT AVG(T1.weight_kg) FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T2.race = 'Alien'\t----- bird -----\tsuperhero",
    "790": "SELECT (SELECT weight_kg FROM superhero WHERE full_name = 'Emil Blonsky') - (SELECT weight_kg FROM superhero WHERE full_name = 'Charles Chandler') AS weight_difference\t----- bird -----\tsuperhero",
    "791": "SELECT superhero_name, AVG(height_cm) FROM superhero GROUP BY superhero_name;\t----- bird -----\tsuperhero",
    "792": "SELECT T3.power_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T1.superhero_name = 'Abomination'\t----- bird -----\tsuperhero",
    "793": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id INNER JOIN race AS T3 ON T1.race_id = T3.id WHERE T1.race_id = 21 AND T1.gender_id = 1\t----- bird -----\tsuperhero",
    "794": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN attribute AS T3 ON T2.attribute_id = T3.id WHERE T3.attribute_name = 'Speed' ORDER BY T2.attribute_value DESC LIMIT 1\t----- bird -----\tsuperhero",
    "795": "SELECT COUNT(*) FROM superhero WHERE alignment_id = 3\t----- bird -----\tsuperhero",
    "796": "SELECT attribute.attribute_name, hero_attribute.attribute_value FROM superhero, hero_attribute, attribute WHERE superhero.id = hero_attribute.hero_id AND hero_attribute.attribute_id = attribute.id AND superhero.superhero_name = '3-D Man'\t----- bird -----\tsuperhero",
    "797": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id INNER JOIN colour AS T3 ON T1.hair_colour_id = T3.id WHERE T2.id = 7 AND T3.id = 9\t----- bird -----\tsuperhero",
    "798": "SELECT T1.publisher_name FROM publisher AS T1 INNER JOIN superhero AS T2 ON T1.id = T2.publisher_id WHERE T2.superhero_name IN ('Hawkman', 'Karate Kid', 'Speedy')\t----- bird -----\tsuperhero",
    "799": "SELECT COUNT(*) FROM superhero WHERE publisher_id = 1\t----- bird -----\tsuperhero",
    "800": "SELECT (CAST(COUNT(id) WHERE eye_colour_id = 7 AS FLOAT) / CAST(COUNT(id) AS FLOAT)) * 100.0 AS percentage FROM superhero\t----- bird -----\tsuperhero",
    "801": "SELECT SUM(gender_id = 1) / SUM(gender_id = 2) AS ratio FROM superhero\t----- bird -----\tsuperhero",
    "802": "SELECT superhero_name FROM superhero ORDER BY height_cm DESC LIMIT 1\t----- bird -----\tsuperhero",
    "803": "SELECT id FROM superpower WHERE power_name = 'cryokinesis'\t----- bird -----\tsuperhero",
    "804": "SELECT superhero_name FROM superhero WHERE id = 294\t----- bird -----\tsuperhero",
    "805": "SELECT full_name FROM superhero WHERE weight_kg = 0 OR weight_kg IS NULL\t----- bird -----\tsuperhero",
    "806": "SELECT T1.colour FROM colour AS T1 INNER JOIN superhero AS T2 ON T1.id = T2.eye_colour_id WHERE T2.full_name = 'Karen Beecher-Duncan'\t----- bird -----\tsuperhero",
    "807": "SELECT superpower.power_name FROM superpower INNER JOIN hero_power ON superpower.id = hero_power.power_id INNER JOIN superhero ON hero_power.hero_id = superhero.id WHERE superhero.full_name = 'Helen Parr'\t----- bird -----\tsuperhero",
    "808": "SELECT T1.race FROM race AS T1 INNER JOIN superhero AS T2 ON T1.id = T2.race_id WHERE T2.weight_kg = 108 AND T2.height_cm = 188\t----- bird -----\tsuperhero",
    "809": "SELECT T2.publisher_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.id = 38\t----- bird -----\tsuperhero",
    "810": "SELECT T2.race FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T1.id = ( SELECT hero_id FROM hero_attribute WHERE attribute_value = (SELECT MAX(attribute_value) FROM hero_attribute) )\t----- bird -----\tsuperhero",
    "811": "SELECT A.alignment, P.power_name FROM superhero AS S INNER JOIN hero_power AS H ON S.id = H.hero_id INNER JOIN superpower AS P ON H.power_id = P.id INNER JOIN alignment AS A ON S.alignment_id = A.id WHERE S.superhero_name = 'Atom IV'\t----- bird -----\tsuperhero",
    "812": "SELECT superhero.full_name FROM superhero INNER JOIN colour ON superhero.eye_colour_id = colour.id WHERE colour.colour = 'Blue' LIMIT 5\t----- bird -----\tsuperhero",
    "813": "SELECT AVG(T1.attribute_value) FROM hero_attribute AS T1 INNER JOIN superhero AS T2 ON T1.hero_id = T2.id WHERE T2.alignment_id = 3\t----- bird -----\tsuperhero",
    "814": "SELECT colour.colour FROM superhero JOIN colour ON superhero.skin_colour_id = colour.id JOIN hero_attribute ON superhero.id = hero_attribute.hero_id WHERE hero_attribute.attribute_value = 100\t----- bird -----\tsuperhero",
    "815": "SELECT COUNT(*) FROM superhero AS T1 INNER JOIN alignment AS T2 ON T1.alignment_id = T2.id INNER JOIN gender AS T3 ON T1.gender_id = T3.id WHERE T2.id = 1 AND T3.id = 2\t----- bird -----\tsuperhero",
    "816": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id WHERE T2.attribute_value BETWEEN 75 AND 80\t----- bird -----\tsuperhero",
    "817": "SELECT race.race FROM superhero JOIN colour ON superhero.hair_colour_id = colour.id JOIN gender ON superhero.gender_id = gender.id JOIN race ON superhero.race_id = race.id WHERE colour.colour = 'blue' AND gender.gender = 'male'\t----- bird -----\tsuperhero",
    "818": "SELECT (CAST(SUM(CASE WHEN T2.id = 2 THEN 1 ELSE 0 END) AS REAL) / COUNT(T1.id)) * 100 FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id INNER JOIN alignment AS T3 ON T1.alignment_id = T3.id WHERE T3.id = 2\t----- bird -----\tsuperhero",
    "819": "SELECT SUM(CASE WHEN T1.eye_colour_id = 7 THEN 1 ELSE 0 END) - SUM(CASE WHEN T1.eye_colour_id = 1 THEN 1 ELSE 0 END) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.weight_kg = 0 OR T1.weight_kg IS NULL\t----- bird -----\tsuperhero",
    "820": "SELECT T1.attribute_value FROM hero_attribute AS T1 INNER JOIN superhero AS T2 ON T1.hero_id = T2.id INNER JOIN attribute AS T3 ON T1.attribute_id = T3.id WHERE T2.superhero_name = 'Hulk' AND T3.attribute_name = 'Strength'\t----- bird -----\tsuperhero",
    "821": "SELECT T3.power_name FROM hero_power AS T1 INNER JOIN superhero AS T2 ON T1.hero_id = T2.id INNER JOIN superpower AS T3 ON T1.power_id = T3.id WHERE T2.superhero_name = 'Ajax'\t----- bird -----\tsuperhero",
    "822": "SELECT COUNT(superhero.id) FROM superhero JOIN colour ON superhero.skin_colour_id = colour.id JOIN alignment ON superhero.alignment_id = alignment.id WHERE colour.colour = 'Green' AND alignment.alignment = 'Bad'\t----- bird -----\tsuperhero",
    "823": "SELECT COUNT(*) FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id INNER JOIN publisher AS T3 ON T1.publisher_id = T3.id WHERE T2.gender = 'Female' AND T3.publisher_name = 'Marvel Comics'\t----- bird -----\tsuperhero",
    "824": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T3.power_name = 'Wind Control' ORDER BY T1.superhero_name ASC\t----- bird -----\tsuperhero",
    "825": "SELECT T2.gender FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id WHERE T1.id = ( SELECT hero_id FROM hero_power WHERE power_id = ( SELECT id FROM superpower WHERE power_name = 'Phoenix Force' ) )\t----- bird -----\tsuperhero",
    "826": "SELECT T1.superhero_name, MAX(T1.weight_kg) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'DC Comics'\t----- bird -----\tsuperhero",
    "827": "SELECT AVG(T1.height_cm) FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id INNER JOIN publisher AS T3 ON T1.publisher_id = T3.id WHERE T2.race <> 'Human' AND T3.publisher_name = 'Dark Horse Comics'\t----- bird -----\tsuperhero",
    "828": "SELECT COUNT(T1.hero_id) FROM hero_attribute AS T1 INNER JOIN attribute AS T2 ON T1.attribute_id = T2.id WHERE T2.attribute_name = 'Speed' AND T1.attribute_value = 100\t----- bird -----\tsuperhero",
    "829": "SELECT ABS((SELECT COUNT(*) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'DC Comics') - (SELECT COUNT(*) FROM superhero AS T3 INNER JOIN publisher AS T4 ON T3.publisher_id = T4.id WHERE T4.publisher_name = 'Marvel Comics'))\t----- bird -----\tsuperhero",
    "830": "SELECT T1.attribute_name FROM attribute AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.attribute_id WHERE T2.hero_id = ( SELECT id FROM superhero WHERE superhero_name = 'Black Panther' ) AND T2.attribute_value = ( SELECT MIN(attribute_value) FROM hero_attribute WHERE hero_id = ( SELECT id FROM superhero WHERE superhero_name = 'Black Panther' ) )\t----- bird -----\tsuperhero",
    "831": "SELECT T2.colour FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.superhero_name = 'Abomination'\t----- bird -----\tsuperhero",
    "832": "SELECT superhero_name FROM superhero WHERE height_cm = (SELECT MAX(height_cm) FROM superhero)\t----- bird -----\tsuperhero",
    "833": "SELECT superhero_name FROM superhero WHERE full_name = 'Charles Chandler'\t----- bird -----\tsuperhero",
    "834": "SELECT (SUM(CASE WHEN T3.gender = 'Female' THEN 1 ELSE 0 END) * 100.0 / COUNT(*)) AS percentage FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id INNER JOIN gender AS T3 ON T1.gender_id = T3.id WHERE T2.publisher_name = 'George Lucas'\t----- bird -----\tsuperhero",
    "835": "SELECT CAST(SUM(CASE WHEN T3.alignment = 'Good' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM superhero AS T1 JOIN publisher AS T2 ON T1.publisher_id = T2.id JOIN alignment AS T3 ON T1.alignment_id = T3.id WHERE T2.publisher_name = 'Marvel Comics'\t----- bird -----\tsuperhero",
    "836": "SELECT COUNT(*) FROM superhero WHERE full_name LIKE 'John%'\t----- bird -----\tsuperhero",
    "837": "SELECT hero_id FROM hero_attribute WHERE attribute_value = (SELECT MIN(attribute_value) FROM hero_attribute)\t----- bird -----\tsuperhero",
    "838": "SELECT full_name FROM superhero WHERE superhero_name = 'Alien'\t----- bird -----\tsuperhero",
    "839": "SELECT T1.full_name FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.weight_kg < 100 AND T2.colour = 'brown'\t----- bird -----\tsuperhero",
    "840": "SELECT T1.attribute_value FROM hero_attribute AS T1 INNER JOIN superhero AS T2 ON T1.hero_id = T2.id WHERE T2.superhero_name = 'Aquababy'\t----- bird -----\tsuperhero",
    "841": "SELECT T1.weight_kg, T2.race FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T1.id = 40\t----- bird -----\tsuperhero",
    "842": "SELECT AVG(T1.height_cm) FROM superhero AS T1 INNER JOIN alignment AS T2 ON T1.alignment_id = T2.id WHERE T2.alignment = 'Neutral'\t----- bird -----\tsuperhero",
    "843": "SELECT T1.id FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T3.power_name = 'Intelligence'\t----- bird -----\tsuperhero",
    "844": "SELECT T2.colour FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.superhero_name = 'Blackwulf'\t----- bird -----\tsuperhero",
    "845": "SELECT superpower.power_name FROM superhero JOIN hero_power ON hero_power.hero_id = superhero.id JOIN superpower ON superpower.id = hero_power.power_id WHERE superhero.height_cm > (0.8 * (SELECT AVG(height_cm) FROM superhero))\t----- bird -----\tsuperhero",
    "846": "SELECT T1.driverRef FROM drivers AS T1 WHERE T1.driverId IN ( SELECT T2.driverId FROM qualifying AS T2 WHERE T2.raceId = 18 ORDER BY T2.q1 DESC LIMIT 5 )\t----- bird -----\tformula_1",
    "847": "SELECT T1.surname FROM drivers AS T1 INNER JOIN qualifying AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T2.raceId = T3.raceId WHERE T3.raceId = 19 ORDER BY T2.q2 ASC LIMIT 1\t----- bird -----\tformula_1",
    "848": "SELECT races.year FROM races INNER JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.location = 'Shanghai'\t----- bird -----\tformula_1",
    "849": "SELECT T1.url FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T2.name = 'Circuit de Barcelona-Catalunya'\t----- bird -----\tformula_1",
    "850": "SELECT races.name FROM races INNER JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.country = 'Germany'\t----- bird -----\tformula_1",
    "851": "SELECT T1.position FROM results AS T1 INNER JOIN constructors AS T2 ON T1.constructorId = T2.constructorId WHERE T2.name = 'Renault'\t----- bird -----\tformula_1",
    "852": "SELECT COUNT(*) FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T1.year = 2010 AND T2.country NOT IN (SELECT country FROM circuits WHERE location IN ('Asia', 'Europe'))\t----- bird -----\tformula_1",
    "853": "SELECT races.name FROM races INNER JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.country = 'Spain'\t----- bird -----\tformula_1",
    "854": "SELECT circuits.lat, circuits.lng FROM races INNER JOIN circuits ON races.circuitId = circuits.circuitId WHERE races.name = 'Australian Grand Prix'\t----- bird -----\tformula_1",
    "855": "SELECT T1.url FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T2.name = 'Sepang International Circuit'\t----- bird -----\tformula_1",
    "856": "SELECT races.time FROM races INNER JOIN circuits ON circuits.circuitId = races.circuitId WHERE circuits.name = 'Sepang International Circuit'\t----- bird -----\tformula_1",
    "857": "SELECT lat, lng FROM circuits WHERE name = 'Abu Dhabi Grand Prix'\t----- bird -----\tformula_1",
    "858": "SELECT constructors.nationality FROM constructorResults INNER JOIN constructors ON constructorResults.constructorId = constructors.constructorId WHERE constructorResults.points = 1 AND constructorResults.raceId = 24\t----- bird -----\tformula_1",
    "859": "SELECT T2.q1 FROM drivers AS T1 INNER JOIN qualifying AS T2 ON T1.driverId = T2.driverId WHERE T1.forename = 'Bruno' AND T1.surname = 'Senna' AND T2.raceId = 354\t----- bird -----\tformula_1",
    "860": "SELECT T2.nationality FROM qualifying AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.q2 = '0:01:40' AND T1.raceId = 355\t----- bird -----\tformula_1",
    "861": "SELECT T1.number FROM drivers AS T1 INNER JOIN qualifying AS T2 ON T1.driverId = T2.driverId WHERE T2.raceId = 903 AND T2.q3 = '0:01:54'\t----- bird -----\tformula_1",
    "862": "SELECT COUNT(T2.driverId) FROM races AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId INNER JOIN status AS T3 ON T2.statusId = T3.statusId WHERE T1.name = 'Bahrain Grand Prix' AND T1.year = 2007 AND T3.status != 'Finished'\t----- bird -----\tformula_1",
    "863": "SELECT seasons.url FROM races INNER JOIN seasons ON races.year = seasons.year WHERE races.raceId = 901\t----- bird -----\tformula_1",
    "864": "SELECT COUNT(DISTINCT R2.driverId) FROM races AS R1 INNER JOIN results AS R2 ON R1.raceId = R2.raceId WHERE R1.date = '2015/11/29' AND R2.time IS NOT NULL\t----- bird -----\tformula_1",
    "865": "SELECT T1.forename, T1.surname, T2.time FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T2.raceId = 592 AND T2.time IS NOT NULL ORDER BY T1.dob ASC LIMIT 1\t----- bird -----\tformula_1",
    "866": "SELECT T1.url FROM drivers AS T1 INNER JOIN lapTimes AS T2 ON T1.driverId = T2.driverId WHERE T2.time = '0:01:27' AND T2.raceId = 161\t----- bird -----\tformula_1",
    "867": "SELECT d.nationality FROM drivers AS d INNER JOIN results AS r ON d.driverId = r.driverId WHERE r.fastestLapSpeed = ( SELECT MAX(fastestLapSpeed) FROM results WHERE raceId = 933 )\t----- bird -----\tformula_1",
    "868": "SELECT T2.lat, T2.lng FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T1.name = 'Malaysian Grand Prix'\t----- bird -----\tformula_1",
    "869": "SELECT T2.url FROM constructorResults AS T1 INNER JOIN constructors AS T2 ON T1.constructorId = T2.constructorId WHERE T1.raceId = 9 ORDER BY T1.points DESC LIMIT 1\t----- bird -----\tformula_1",
    "870": "SELECT q.q1 FROM drivers d INNER JOIN qualifying q ON d.driverId = q.driverId INNER JOIN races r ON q.raceId = r.raceId WHERE d.driverRef = 'Lucas di Grassi' AND r.raceId = 345\t----- bird -----\tformula_1",
    "871": "SELECT T2.nationality FROM qualifying AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.q2 = '0:01:15' AND T1.raceId = 347\t----- bird -----\tformula_1",
    "872": "SELECT drivers.code FROM qualifying INNER JOIN drivers ON qualifying.driverId = drivers.driverId WHERE qualifying.raceId = 45 AND qualifying.q3 = '0:01:33'\t----- bird -----\tformula_1",
    "873": "SELECT T2.milliseconds FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T2.raceId = T3.raceId WHERE T1.forename = 'Bruce' AND T1.surname = 'McLaren' AND T3.raceId = 743\t----- bird -----\tformula_1",
    "874": "SELECT results.driverId FROM results JOIN races ON races.raceId = results.raceId WHERE races.name = 'San Marino Grand Prix' AND races.year = 2006 AND results.position = 2\t----- bird -----\tformula_1",
    "875": "SELECT T2.url FROM races AS T1 INNER JOIN seasons AS T2 ON T1.year = T2.year WHERE T1.raceId = 901\t----- bird -----\tformula_1",
    "876": "SELECT COUNT(T2.resultId) FROM races AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId WHERE T1.date = '2015/11/29' AND T2.statusId = 1\t----- bird -----\tformula_1",
    "877": "SELECT T1.forename, T1.surname FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T2.raceId = 872 AND T2.time IS NOT NULL ORDER BY T1.dob DESC LIMIT 1\t----- bird -----\tformula_1",
    "878": "SELECT forename, surname FROM drivers WHERE driverId = ( SELECT driverId FROM lapTimes WHERE raceId = 348 ORDER BY time ASC LIMIT 1 )\t----- bird -----\tformula_1",
    "879": "SELECT T2.nationality FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.fastestLapSpeed = (SELECT MAX(fastestLapSpeed) FROM results)\t----- bird -----\tformula_1",
    "880": "SELECT ((SELECT fastestLapSpeed FROM results WHERE driverId = (SELECT driverId FROM drivers WHERE driverRef = 'Paul di Resta') AND raceId = 853) - (SELECT fastestLapSpeed FROM results WHERE driverId = (SELECT driverId FROM drivers WHERE driverRef = 'Paul di Resta') AND raceId = 854)) / (SELECT fastestLapSpeed FROM results WHERE driverId = (SELECT driverId FROM drivers WHERE driverRef = 'Paul di Resta') AND raceId = 853) * 100 as percentage\t----- bird -----\tformula_1",
    "881": "SELECT (CAST(COUNT(CASE WHEN T2.time IS NOT NULL THEN 1 ELSE NULL END) AS REAL) / COUNT(T2.driverId)) * 100 AS percentage FROM races AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId WHERE T1.date = '1983-07-16'\t----- bird -----\tformula_1",
    "882": "SELECT MIN(year) FROM races WHERE name = 'Singapore Grand Prix'\t----- bird -----\tformula_1",
    "883": "SELECT name, COUNT(raceId) AS number_of_races FROM races WHERE year = 2005 GROUP BY name ORDER BY name DESC\t----- bird -----\tformula_1",
    "884": "SELECT name FROM races WHERE strftime('%Y', date) = strftime('%Y', (SELECT MIN(date) FROM races)) AND strftime('%m', date) = strftime('%m', (SELECT MIN(date) FROM races))\t----- bird -----\tformula_1",
    "885": "SELECT name, date FROM races WHERE year = 1999 AND round = (SELECT MAX(round) FROM races WHERE year = 1999)\t----- bird -----\tformula_1",
    "886": "SELECT year, COUNT(raceId) as num_races FROM races GROUP BY year ORDER BY num_races DESC LIMIT 1\t----- bird -----\tformula_1",
    "887": "SELECT name FROM races WHERE year = 2017 AND name NOT IN ( SELECT name FROM races WHERE year = 2000 )\t----- bird -----\tformula_1",
    "888": "SELECT circuits.country, circuits.name, circuits.location FROM races INNER JOIN circuits ON races.circuitId = circuits.circuitId WHERE races.name = 'European Grand Prix' AND races.year = (SELECT MIN(year) FROM races WHERE name = 'European Grand Prix')\t----- bird -----\tformula_1",
    "889": "SELECT MAX(T1.year) FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T2.name = 'Brands Hatch' AND T1.name = 'British Grand Prix'\t----- bird -----\tformula_1",
    "890": "SELECT COUNT(DISTINCT year) FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T2.name = 'Silverstone Circuit' AND T1.name = 'British Grand Prix'\t----- bird -----\tformula_1",
    "891": "SELECT drivers.forename, drivers.surname FROM drivers INNER JOIN driverStandings ON drivers.driverId = driverStandings.driverId INNER JOIN races ON races.raceId = driverStandings.raceId WHERE races.year = 2010 AND races.name = 'Singapore Grand Prix' ORDER BY driverStandings.position\t----- bird -----\tformula_1",
    "892": "SELECT T1.forename, T1.surname, T2.points FROM drivers AS T1 INNER JOIN driverStandings AS T2 ON T1.driverId = T2.driverId WHERE T2.driverId = ( SELECT driverId FROM driverStandings WHERE points = ( SELECT MAX(points) FROM driverStandings ) )\t----- bird -----\tformula_1",
    "893": "SELECT T2.forename, T2.surname, T1.points FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T1.raceId = T3.raceId WHERE T3.year = 2017 AND T3.name = 'Chinese Grand Prix' AND T1.positionOrder IN (1, 2, 3) ORDER BY T1.positionOrder ASC\t----- bird -----\tformula_1",
    "894": "SELECT MIN(T1.time), T2.driverRef, T3.name FROM lapTimes AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T1.raceId = T3.raceId\t----- bird -----\tformula_1",
    "895": "SELECT AVG(lapTimes.time) FROM lapTimes INNER JOIN drivers ON lapTimes.driverId = drivers.driverId INNER JOIN races ON lapTimes.raceId = races.raceId WHERE drivers.forename = 'Sebastian' AND drivers.surname = 'Vettel' AND races.year = 2009 AND races.name = 'Chinese Grand Prix'\t----- bird -----\tformula_1",
    "896": "SELECT (SELECT COUNT(*) FROM drivers d, results r, races ra WHERE d.surname = 'Hamilton' AND d.driverId = r.driverId AND r.raceId = ra.raceId AND ra.year >= 2010 AND r.position > 1) / (SELECT COUNT(*) FROM drivers d, results r, races ra WHERE d.surname = 'Hamilton' AND d.driverId = r.driverId AND r.raceId = ra.raceId AND ra.year >= 2010) as percentage\t----- bird -----\tformula_1",
    "897": "SELECT T1.driverRef, T1.nationality, AVG(T2.points) FROM drivers AS T1 INNER JOIN driverStandings AS T2 ON T1.driverId = T2.driverId GROUP BY T1.driverId, T1.driverRef, T1.nationality ORDER BY COUNT(T2.wins) DESC LIMIT 1\t----- bird -----\tformula_1",
    "898": "SELECT forename, surname, 2022 - CAST(strftime('%Y', dob) AS INTEGER) + 1 AS age FROM drivers WHERE nationality = 'Japanese' ORDER BY dob DESC LIMIT 1\t----- bird -----\tformula_1",
    "899": "SELECT c.name FROM circuits c JOIN races r ON c.circuitId = r.circuitId WHERE r.year BETWEEN 1990 AND 2000 GROUP BY c.name HAVING COUNT(r.raceId) = 4\t----- bird -----\tformula_1",
    "900": "SELECT T1.name AS circuit_name, T1.location, T2.name AS race_name FROM circuits AS T1 INNER JOIN races AS T2 ON T1.circuitId = T2.circuitId WHERE T1.country = 'USA' AND T2.year = 2006\t----- bird -----\tformula_1",
    "901": "SELECT T1.name, T2.name, T2.location FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE strftime('%Y', T1.date) = '2005' AND strftime('%m', T1.date) = '09'\t----- bird -----\tformula_1",
    "902": "SELECT T1.raceId FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T2.forename = 'Alex' AND T2.surname = 'Yoong' AND T1.position < 10\t----- bird -----\tformula_1",
    "903": "SELECT SUM(T2.wins) FROM drivers AS T1 INNER JOIN driverStandings AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T2.raceId = T3.raceId INNER JOIN circuits AS T4 ON T3.circuitId = T4.circuitId WHERE T1.forename = 'Michael' AND T1.surname = 'Schumacher' AND T4.name = 'Sepang International Circuit'\t----- bird -----\tformula_1",
    "904": "SELECT T1.name, T1.year FROM races AS T1 INNER JOIN lapTimes AS T2 ON T1.raceId = T2.raceId WHERE T2.driverId = (SELECT driverId FROM drivers WHERE forename = 'Michael' AND surname = 'Schumacher') AND T2.milliseconds = (SELECT MIN(milliseconds) FROM lapTimes WHERE driverId = (SELECT driverId FROM drivers WHERE forename = 'Michael' AND surname = 'Schumacher'))\t----- bird -----\tformula_1",
    "905": "SELECT AVG(T2.points) FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T2.raceId = T3.raceId WHERE T1.forename = 'Eddie' AND T1.surname = 'Irvine' AND T3.year = 2000\t----- bird -----\tformula_1",
    "906": "SELECT T2.name, T1.points FROM driverStandings AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN drivers AS T3 ON T1.driverId = T3.driverId WHERE T3.forename = 'Lewis' AND T3.surname = 'Hamilton' AND T2.year = ( SELECT MIN(year) FROM races WHERE raceId = ( SELECT raceId FROM driverStandings WHERE driverId = ( SELECT driverId FROM drivers WHERE forename='Lewis' AND surname='Hamilton' )))\t----- bird -----\tformula_1",
    "907": "SELECT races.name, circuits.country, races.date FROM races INNER JOIN circuits ON races.circuitId = circuits.circuitId WHERE races.year = 2017 ORDER BY races.date\t----- bird -----\tformula_1",
    "908": "SELECT T2.name, T2.year, T3.location FROM lapTimes AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN circuits AS T3 ON T2.circuitId = T3.circuitId WHERE T1.lap = (SELECT MAX(lap) FROM lapTimes)\t----- bird -----\tformula_1",
    "909": "SELECT (SELECT COUNT(*) FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T1.name = 'European Grand Prix' AND T2.country = 'Germany') * 100.0 / (SELECT COUNT(*) FROM races WHERE name = 'European Grand Prix')\t----- bird -----\tformula_1",
    "910": "SELECT lat, lng FROM circuits WHERE name = 'Silverstone Circuit'\t----- bird -----\tformula_1",
    "911": "SELECT name, MAX(lat) FROM circuits WHERE name IN ('Silverstone Circuit', 'Hockenheimring', 'Hungaroring') ORDER BY lat DESC LIMIT 1\t----- bird -----\tformula_1",
    "912": "SELECT circuitRef FROM circuits WHERE name = 'Marina Bay Street Circuit'\t----- bird -----\tformula_1",
    "913": "SELECT * FROM table\t----- bird -----\tformula_1",
    "914": "SELECT COUNT(*) FROM drivers WHERE code IS NULL\t----- bird -----\tformula_1",
    "915": "SELECT nationality FROM drivers ORDER BY dob ASC LIMIT 1\t----- bird -----\tformula_1",
    "916": "SELECT surname FROM drivers WHERE nationality = 'italian'\t----- bird -----\tformula_1",
    "917": "SELECT url FROM drivers WHERE forename = 'Anthony' AND surname = 'Davidson'\t----- bird -----\tformula_1",
    "918": "SELECT driverRef FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton'\t----- bird -----\tformula_1",
    "919": "SELECT T2.name FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T1.year = 2009 AND T1.name = 'Spanish Grand Prix'\t----- bird -----\tformula_1",
    "920": "SELECT DISTINCT T1.year FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T2.name = 'Silverstone Circuit'\t----- bird -----\tformula_1",
    "921": "SELECT races.url FROM races INNER JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.name = 'Silverstone Circuit'\t----- bird -----\tformula_1",
    "922": "SELECT races.time FROM races INNER JOIN circuits ON races.circuitId = circuits.circuitId WHERE races.year = 2010 AND circuits.name = 'Abu Dhabi Circuit'\t----- bird -----\tformula_1",
    "923": "SELECT COUNT(T1.raceId) FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T2.country = 'Italy'\t----- bird -----\tformula_1",
    "924": "SELECT races.date FROM races JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.name = 'Circuit de Barcelona-Catalunya'\t----- bird -----\tformula_1",
    "925": "SELECT circuits.url FROM races INNER JOIN circuits ON races.circuitId = circuits.circuitId WHERE races.name = 'Spanish Grand Prix' AND races.year = 2009\t----- bird -----\tformula_1",
    "926": "SELECT MIN(T2.fastestLapTime) FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T1.forename = 'Lewis' AND T1.surname = 'Hamilton'\t----- bird -----\tformula_1",
    "927": "SELECT T1.forename, T1.surname FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId ORDER BY T2.fastestLapSpeed DESC LIMIT 1\t----- bird -----\tformula_1",
    "928": "SELECT T1.driverRef FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T2.raceId = T3.raceId WHERE T3.name = 'Australian Grand Prix' AND T3.year = 2008 AND T2.positionOrder = 1\t----- bird -----\tformula_1",
    "929": "SELECT results.raceId FROM drivers INNER JOIN results ON drivers.driverId = results.driverId WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton'\t----- bird -----\tformula_1",
    "930": "SELECT T2.raceId FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T1.forename = 'Lewis' AND T1.surname = 'Hamilton' ORDER BY T2.rank ASC LIMIT 1\t----- bird -----\tformula_1",
    "931": "SELECT MAX(T1.fastestLapSpeed) FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.year = 2009 AND T2.name = 'Spanish Grand Prix'\t----- bird -----\tformula_1",
    "932": "SELECT DISTINCT T3.year FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T2.raceId = T3.raceId WHERE T1.forename = 'Lewis' AND T1.surname = 'Hamilton'\t----- bird -----\tformula_1",
    "933": "SELECT T2.positionOrder FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T2.raceId = T3.raceId WHERE T1.forename = 'Lewis' AND T1.surname = 'Hamilton' AND T3.name = 'Australian Grand Prix' AND T3.year = 2008\t----- bird -----\tformula_1",
    "934": "SELECT T3.forename, T3.surname FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN drivers AS T3 ON T1.driverId = T3.driverId WHERE T1.grid = 4 AND T2.year = 2008 AND T2.name = 'Australian Grand Prix'\t----- bird -----\tformula_1",
    "935": "SELECT COUNT(T1.driverId) FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.name = 'Australian Grand Prix' AND T2.year = 2008 AND T1.time IS NOT NULL\t----- bird -----\tformula_1",
    "936": "SELECT MIN(T1.time) FROM lapTimes AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T1.raceId = T3.raceId WHERE T2.forename = 'Lewis' AND T2.surname = 'Hamilton' AND T3.year = 2008 AND T3.name = 'Australian Grand Prix'\t----- bird -----\tformula_1",
    "937": "SELECT T1.time FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.name = 'Australian Grand Prix' AND T2.year = 2008 AND T1.positionOrder = 2\t----- bird -----\tformula_1",
    "938": "SELECT drivers.url FROM results INNER JOIN races ON results.raceId = races.raceId INNER JOIN drivers ON results.driverId = drivers.driverId WHERE races.year = 2008 AND races.name = 'Australian Grand Prix' AND results.position = 1\t----- bird -----\tformula_1",
    "939": "SELECT COUNT(DISTINCT T1.driverId) FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T2.raceId = T3.raceId WHERE T1.nationality = 'American' AND T3.year = 2008 AND T3.name = 'Australian Grand Prix'\t----- bird -----\tformula_1",
    "940": "SELECT COUNT(DISTINCT driverId) FROM results WHERE time IS NOT NULL AND raceId = ( SELECT raceId FROM races WHERE year = 2008 AND name = 'Australian Grand Prix' )\t----- bird -----\tformula_1",
    "941": "SELECT SUM(T2.points) FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T1.forename = 'Lewis' AND T1.surname = 'Hamilton'\t----- bird -----\tformula_1",
    "942": "SELECT AVG(CAST(SUBSTR(T2.fastestLapTime,1,2) AS INTEGER)*60 + CAST(SUBSTR(T2.fastestLapTime,4,2) AS INTEGER) + CAST(SUBSTR(T2.fastestLapTime,7,3) AS INTEGER)/1000.0) FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T1.forename = 'Lewis' AND T1.surname = 'Hamilton' AND T2.fastestLapTime IS NOT NULL\t----- bird -----\tformula_1",
    "943": "SELECT CAST(COUNT(CASE WHEN T1.time IS NOT NULL THEN 1 ELSE NULL END) AS REAL) / COUNT(T1.raceId) FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.year = 2008 AND T2.name = 'Australian Grand Prix'\t----- bird -----\tformula_1",
    "944": "SELECT ((julianday(last_driver_time) - julianday(champion_time)) / julianday(last_driver_time)) * 100 AS percentage FROM (SELECT MAX(CASE WHEN positionOrder = 1 THEN time ELSE NULL END) AS champion_time, MAX(CASE WHEN positionOrder = (SELECT MAX(positionOrder) FROM results WHERE raceId = (SELECT raceId FROM races WHERE name = 'Australian Grand Prix' AND year = 2008) AND time IS NOT NULL) THEN time ELSE NULL END) AS last_driver_time FROM results WHERE raceId = (SELECT raceId FROM races WHERE name = 'Australian Grand Prix' AND year = 2008) AND time IS NOT NULL)\t----- bird -----\tformula_1",
    "945": "SELECT COUNT(*) FROM circuits WHERE country = 'Australia' AND location = 'Melbourne'\t----- bird -----\tformula_1",
    "946": "SELECT lat, lng FROM circuits WHERE country = 'USA'\t----- bird -----\tformula_1",
    "947": "SELECT COUNT(driverId) FROM drivers WHERE nationality='British' AND CAST(strftime('%Y', dob) AS INTEGER) > 1980\t----- bird -----\tformula_1",
    "948": "SELECT AVG(T1.points) FROM constructorStandings AS T1 INNER JOIN constructors AS T2 ON T1.constructorId = T2.constructorId WHERE T2.nationality = 'British'\t----- bird -----\tformula_1",
    "949": "SELECT T2.name FROM constructorStandings AS T1 INNER JOIN constructors AS T2 ON T1.constructorId = T2.constructorId ORDER BY T1.points DESC LIMIT 1\t----- bird -----\tformula_1",
    "950": "SELECT T2.name FROM constructorResults AS T1 INNER JOIN constructors AS T2 ON T1.constructorId = T2.constructorId WHERE T1.raceId = 291 AND T1.points = 0\t----- bird -----\tformula_1",
    "951": "SELECT COUNT(DISTINCT c.constructorId) FROM constructors c JOIN constructorResults cr ON c.constructorId = cr.constructorId WHERE c.nationality = 'Japanese' AND cr.points = 0 GROUP BY cr.constructorId HAVING COUNT(cr.raceId) = 2\t----- bird -----\tformula_1",
    "952": "SELECT constructorId FROM constructorStandings WHERE position = 1\t----- bird -----\tformula_1",
    "953": "SELECT COUNT(DISTINCT T1.constructorId) FROM constructors AS T1 INNER JOIN results AS T2 ON T1.constructorId = T2.constructorId WHERE T1.nationality = 'French' AND T2.laps > 50\t----- bird -----\tformula_1",
    "954": "SELECT CAST(COUNT(CASE WHEN T2.time IS NOT NULL THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T1.driverId) FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T2.raceId = T3.raceId WHERE T3.year BETWEEN 2007 AND 2009 AND T1.nationality = 'Japanese'\t----- bird -----\tformula_1",
    "955": "SELECT * FROM table\t----- bird -----\tformula_1",
    "956": "SELECT T1.forename, T1.surname FROM drivers AS T1 INNER JOIN driverStandings AS T2 ON T1.driverId = T2.driverId WHERE T1.dob > '1975-12-31' AND T2.position = 2\t----- bird -----\tformula_1",
    "957": "SELECT COUNT(*) FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T1.nationality = 'Italian' AND T2.time IS NULL\t----- bird -----\tformula_1",
    "958": "SELECT T2.forename, T2.surname FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.fastestLapTime = (SELECT MIN(fastestLapTime) FROM results)\t----- bird -----\tformula_1",
    "959": "SELECT lap FROM lapTimes WHERE driverId = (SELECT driverId FROM driverStandings WHERE position = 1 AND raceId IN (SELECT raceId FROM races WHERE year = 2009)) ORDER BY milliseconds ASC LIMIT 1\t----- bird -----\tformula_1",
    "960": "SELECT AVG(T2.fastestLapSpeed) FROM races AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId WHERE T1.name = 'Spanish Grand Prix' AND T1.year = 2009\t----- bird -----\tformula_1",
    "961": "SELECT T1.name, T1.year FROM races AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId WHERE T2.milliseconds IS NOT NULL ORDER BY T2.milliseconds LIMIT 1\t----- bird -----\tformula_1",
    "962": "SELECT ((SELECT COUNT(DISTINCT T1.driverId) FROM drivers AS T1 INNER JOIN lapTimes AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T2.raceId = T3.raceId WHERE T1.dob < '1985-01-01' AND T2.lap > 50 AND T3.year BETWEEN 2000 AND 2005) / (SELECT COUNT(DISTINCT T1.driverId) FROM drivers AS T1 INNER JOIN lapTimes AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T2.raceId = T3.raceId WHERE T3.year BETWEEN 2000 AND 2005)) * 100  AS percentage\t----- bird -----\tformula_1",
    "963": "SELECT COUNT(DISTINCT T1.driverId) FROM drivers AS T1 INNER JOIN lapTimes AS T2 ON T1.driverId = T2.driverId WHERE T1.nationality = 'French' AND CAST(SUBSTR(T2.time, 1, 2) AS INTEGER) * 60 + CAST(SUBSTR(T2.time, 4, 2) AS INTEGER) < 120\t----- bird -----\tformula_1",
    "964": "SELECT code FROM drivers WHERE nationality = 'America'\t----- bird -----\tformula_1",
    "965": "SELECT raceId FROM races WHERE year = 2009\t----- bird -----\tformula_1",
    "966": "SELECT COUNT(distinct driverId) FROM results WHERE raceId = 18\t----- bird -----\tformula_1",
    "967": "SELECT COUNT(*) FROM (SELECT code, nationality FROM drivers WHERE nationality = 'Dutch' ORDER BY dob DESC LIMIT 3)\t----- bird -----\tformula_1",
    "968": "SELECT driverRef FROM drivers WHERE forename = 'Robert' AND surname = 'Kubica'\t----- bird -----\tformula_1",
    "969": "SELECT COUNT(*) FROM drivers WHERE nationality = 'Australian' AND strftime('%Y', dob) = '1980'\t----- bird -----\tformula_1",
    "970": "SELECT T1.driverId, T1.forename, T1.surname, MIN(T2.time) as earliest_lap_time FROM drivers AS T1 INNER JOIN lapTimes AS T2 ON T1.driverId = T2.driverId WHERE T1.driverId IN ( SELECT driverId FROM drivers WHERE nationality = 'German' AND strftime('%Y', dob) BETWEEN '1980' AND '1990' ) GROUP BY T1.driverId, T1.forename, T1.surname ORDER BY earliest_lap_time ASC LIMIT 3\t----- bird -----\tformula_1",
    "971": "SELECT driverRef FROM drivers WHERE nationality='German' ORDER BY dob ASC LIMIT 1\t----- bird -----\tformula_1",
    "972": "SELECT T1.driverId, T1.code FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE strftime('%Y', T1.dob) = '1971' AND T2.fastestLapTime IS NOT NULL\t----- bird -----\tformula_1",
    "973": "SELECT d.forename, d.surname, Max(l.time) as latest_lap_time FROM drivers d JOIN lapTimes l ON d.driverId = l.driverId WHERE d.nationality = 'Spanish' AND CAST(strftime('%Y', d.dob) AS INTEGER) < 1982 GROUP BY d.forename, d.surname ORDER BY latest_lap_time DESC LIMIT 10\t----- bird -----\tformula_1",
    "974": "SELECT T1.year FROM races AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId WHERE T2.fastestLapTime = (SELECT MIN(fastestLapTime) FROM results)\t----- bird -----\tformula_1",
    "975": "SELECT T2.year, MAX(T1.time) FROM lapTimes AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId GROUP BY T2.year ORDER BY MAX(T1.time) ASC LIMIT 1\t----- bird -----\tformula_1",
    "976": "SELECT driverId, MIN(time) as fastest_time FROM lapTimes WHERE lap = 1 GROUP BY driverId ORDER BY fastest_time ASC LIMIT 5\t----- bird -----\tformula_1",
    "977": "SELECT COUNT(*) FROM results AS T1 INNER JOIN status AS T2 ON T1.statusId = T2.statusId WHERE T1.raceId > 50 AND T1.raceId < 100 AND T1.time IS NOT NULL AND T2.statusId = 2\t----- bird -----\tformula_1",
    "978": "SELECT location, lat, lng FROM circuits WHERE country = 'Austria'\t----- bird -----\tformula_1",
    "979": "SELECT T1.raceId, COUNT(*) as finishers FROM races as T1 JOIN results as T2 ON T1.raceId = T2.raceId WHERE T2.time IS NOT NULL GROUP BY T1.raceId ORDER BY finishers DESC LIMIT 1\t----- bird -----\tformula_1",
    "980": "SELECT d.driverRef, d.nationality, d.dob FROM drivers d INNER JOIN qualifying q ON d.driverId = q.driverId WHERE q.raceId = 23 AND q.q2 IS NOT NULL\t----- bird -----\tformula_1",
    "981": "SELECT T3.year, T3.name, T3.date, T3.time FROM qualifying AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T1.raceId = T3.raceId WHERE T2.driverId = ( SELECT driverId FROM drivers WHERE dob = ( SELECT MAX(dob) FROM drivers ) ) ORDER BY T3.year ASC LIMIT 1\t----- bird -----\tformula_1",
    "982": "SELECT COUNT(*) FROM drivers T1 JOIN results T2 ON T1.driverId = T2.driverId JOIN status T3 ON T2.statusId = T3.statusId WHERE T1.nationality = 'American' AND T3.statusId = 2\t----- bird -----\tformula_1",
    "983": "SELECT T2.url FROM constructorStandings AS T1 INNER JOIN constructors AS T2 ON T1.constructorId = T2.constructorId WHERE T1.points = (SELECT MAX(points) FROM constructorStandings WHERE constructorId IN (SELECT constructorId FROM constructors WHERE nationality = 'Italian'))\t----- bird -----\tformula_1",
    "984": "SELECT url FROM constructors WHERE constructorId = ( SELECT constructorId FROM constructorStandings GROUP BY constructorId ORDER BY SUM(wins) DESC LIMIT 1 )\t----- bird -----\tformula_1",
    "985": "SELECT MAX(T1.time) FROM lapTimes AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.name = 'French Grand Prix' AND T1.lap = 3\t----- bird -----\tformula_1",
    "986": "SELECT T2.name, MIN(T1.milliseconds) FROM lapTimes AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T1.lap = 1\t----- bird -----\tformula_1",
    "987": "SELECT AVG(T1.fastestLapTime) FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T1.rank < 11 AND T2.name = 'United States Grand Prix' AND T2.year = 2006\t----- bird -----\tformula_1",
    "988": "SELECT drivers.driverRef, AVG(pitStops.milliseconds) AS AvgDuration FROM drivers INNER JOIN pitStops ON drivers.driverId = pitStops.driverId WHERE drivers.nationality = 'German' AND drivers.dob BETWEEN '1980-01-01' AND '1985-12-31' GROUP BY drivers.driverRef ORDER BY AvgDuration ASC LIMIT 5\t----- bird -----\tformula_1",
    "989": "SELECT results.time FROM races INNER JOIN results ON races.raceId = results.raceId WHERE races.name = 'Canadian Grand Prix' AND races.year = 2008 AND results.positionOrder = 1\t----- bird -----\tformula_1",
    "990": "SELECT constructors.constructorRef, constructors.url FROM constructors INNER JOIN results ON constructors.constructorId = results.constructorId INNER JOIN races ON results.raceId = races.raceId WHERE races.year = 2009 AND races.name = 'Singapore Grand Prix' AND results.time LIKE '__:__:__.___'\t----- bird -----\tformula_1",
    "991": "SELECT forename, surname, dob FROM drivers WHERE nationality = 'Austrian' AND strftime('%Y', dob) BETWEEN '1981' AND '1991'\t----- bird -----\tformula_1",
    "992": "SELECT forename || ' ' || surname AS full_name, url, dob FROM drivers WHERE nationality = 'German' AND dob BETWEEN '1971-01-01' AND '1985-12-31' ORDER BY dob DESC\t----- bird -----\tformula_1",
    "993": "SELECT location, country, lat, lng FROM circuits WHERE name = 'Hungaroring'\t----- bird -----\tformula_1",
    "994": "SELECT SUM(T1.points), T2.name, T2.nationality FROM constructorResults AS T1 INNER JOIN constructors AS T2 ON T1.constructorId = T2.constructorId INNER JOIN races AS T3 ON T1.raceId = T3.raceId WHERE T3.name = 'Monaco Grand Prix' AND T3.year BETWEEN 1980 AND 2010 GROUP BY T1.constructorId ORDER BY SUM(T1.points) DESC LIMIT 1\t----- bird -----\tformula_1",
    "995": "SELECT AVG(T2.points) FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T2.raceId = T3.raceId WHERE T1.forename = 'Lewis' AND T1.surname = 'Hamilton' AND T3.name = 'Turkish Grand Prix'\t----- bird -----\tformula_1",
    "996": "SELECT AVG(count) FROM (SELECT year, COUNT(raceId) as count FROM races WHERE year BETWEEN 2000 AND 2009 GROUP BY year)\t----- bird -----\tformula_1",
    "997": "SELECT nationality FROM drivers GROUP BY nationality ORDER BY COUNT(*) DESC LIMIT 1\t----- bird -----\tformula_1",
    "998": "SELECT wins FROM driverStandings ORDER BY points DESC LIMIT 1 OFFSET 90\t----- bird -----\tformula_1",
    "999": "SELECT T1.name FROM races AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId WHERE T2.fastestLapTime = (SELECT MIN(fastestLapTime) FROM results)\t----- bird -----\tformula_1",
    "1000": "SELECT T1.name, T1.location || ', ' || T1.country AS full_location FROM circuits AS T1 INNER JOIN races AS T2 ON T1.circuitId = T2.circuitId WHERE T2.date = (SELECT MAX(date) FROM races)\t----- bird -----\tformula_1",
    "1001": "SELECT T2.forename, T2.surname FROM qualifying AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T1.raceId = T3.raceId INNER JOIN circuits AS T4 ON T3.circuitId = T4.circuitId WHERE T4.name = 'Marina Bay Street Circuit' AND T3.year = 2008 AND T1.q3 = (SELECT MIN(q3) FROM qualifying WHERE q3 IS NOT NULL)\t----- bird -----\tformula_1",
    "1002": "SELECT T1.forename, T1.surname, T1.nationality, T3.name FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T2.raceId = T3.raceId WHERE T1.dob = ( SELECT MAX(dob) FROM drivers ) ORDER BY T3.date ASC LIMIT 1\t----- bird -----\tformula_1",
    "1003": "SELECT COUNT(*) FROM results WHERE driverId = ( SELECT driverId FROM results WHERE raceId IN ( SELECT raceId FROM races WHERE name = 'Canadian Grand Prix' ) AND statusId = 3 GROUP BY driverId ORDER BY COUNT(*) DESC LIMIT 1 ) AND statusId = 3\t----- bird -----\tformula_1",
    "1004": "SELECT T1.forename, T1.surname, SUM(T2.wins) AS total_wins FROM drivers AS T1 INNER JOIN driverStandings AS T2 ON T1.driverId = T2.driverId WHERE T1.dob = (SELECT MIN(dob) FROM drivers) GROUP BY T1.driverId\t----- bird -----\tformula_1",
    "1005": "SELECT MAX(duration) FROM pitStops\t----- bird -----\tformula_1",
    "1006": "SELECT MIN(milliseconds) FROM lapTimes\t----- bird -----\tformula_1",
    "1007": "SELECT MAX(T2.duration) FROM drivers AS T1 INNER JOIN pitStops AS T2 ON T1.driverId = T2.driverId WHERE T1.forename = 'Lewis' AND T1.surname = 'Hamilton'\t----- bird -----\tformula_1",
    "1008": "SELECT T2.lap FROM drivers AS T1 INNER JOIN pitStops AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T2.raceId = T3.raceId WHERE T1.forename = 'Lewis' AND T1.surname = 'Hamilton' AND T3.name = 'Australian Grand Prix' AND T3.year = 2011\t----- bird -----\tformula_1",
    "1009": "SELECT drivers.driverRef, pitStops.duration FROM pitStops INNER JOIN drivers ON pitStops.driverId = drivers.driverId INNER JOIN races ON pitStops.raceId = races.raceId WHERE races.name = 'Australian Grand Prix' AND races.year = 2011\t----- bird -----\tformula_1",
    "1010": "SELECT MIN(T2.time) FROM drivers AS T1 INNER JOIN lapTimes AS T2 ON T1.driverId = T2.driverId WHERE T1.forename = 'Lewis' AND T1.surname = 'Hamilton'\t----- bird -----\tformula_1",
    "1011": "SELECT T1.forename, T1.surname FROM drivers AS T1 INNER JOIN lapTimes AS T2 ON T1.driverId = T2.driverId WHERE T2.time = (SELECT MIN(time) FROM lapTimes)\t----- bird -----\tformula_1",
    "1012": "SELECT T4.name FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T1.raceId = T3.raceId INNER JOIN circuits AS T4 ON T3.circuitId = T4.circuitId WHERE T2.forename = 'Lewis' AND T2.surname = 'Hamilton' AND T1.fastestLapTime = ( SELECT MIN(fastestLapTime) FROM results WHERE driverId = ( SELECT driverId FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton' ) )\t----- bird -----\tformula_1",
    "1013": "SELECT MIN(T2.time) FROM races AS T1 INNER JOIN lapTimes AS T2 ON T1.raceId = T2.raceId WHERE T1.name = 'Austrian Grand Prix'\t----- bird -----\tformula_1",
    "1014": "SELECT T1.circuitId, MIN(T2.time) FROM races AS T1 INNER JOIN lapTimes AS T2 ON T1.raceId = T2.raceId WHERE T1.circuitId IN ( SELECT circuitId FROM circuits WHERE country = 'Italy' ) GROUP BY T1.circuitId\t----- bird -----\tformula_1",
    "1015": "SELECT T1.name FROM races AS T1 INNER JOIN lapTimes AS T2 ON T1.raceId = T2.raceId WHERE T1.circuitId = (SELECT circuitId FROM circuits WHERE name = 'Austrian Grand Prix Circuit') AND T2.time = (SELECT MIN(time) FROM lapTimes WHERE time != 'None')\t----- bird -----\tformula_1",
    "1016": "SELECT duration FROM pitStops WHERE raceId = (SELECT raceId FROM lapTimes WHERE time = (SELECT MIN(time) FROM lapTimes WHERE raceId = (SELECT raceId FROM races WHERE name = 'Austrian Grand Prix'))) AND driverId = (SELECT driverId FROM lapTimes WHERE time = (SELECT MIN(time) FROM lapTimes WHERE raceId = (SELECT raceId FROM races WHERE name = 'Austrian Grand Prix')))\t----- bird -----\tformula_1",
    "1017": "SELECT circuits.lat, circuits.lng FROM circuits INNER JOIN races ON circuits.circuitId = races.circuitId INNER JOIN lapTimes ON races.raceId = lapTimes.raceId WHERE lapTimes.time = '1:29.488'\t----- bird -----\tformula_1",
    "1018": "SELECT AVG(pitStops.milliseconds) FROM drivers INNER JOIN pitStops ON drivers.driverId = pitStops.driverId WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton'\t----- bird -----\tformula_1",
    "1019": "SELECT AVG(T1.milliseconds) FROM lapTimes AS T1 INNER JOIN circuits AS T2 ON T1.raceId = T2.circuitId WHERE T2.country = 'Italy'\t----- bird -----\tformula_1",
    "1020": "SELECT player_api_id, MAX(overall_rating) FROM Player_Attributes\t----- bird -----\teuropean_football_2",
    "1021": "SELECT player_name, MAX(height) FROM Player ORDER BY height DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1022": "SELECT preferred_foot FROM Player_Attributes WHERE potential = (SELECT MIN(potential) FROM Player_Attributes)\t----- bird -----\teuropean_football_2",
    "1023": "SELECT COUNT(id) FROM Player_Attributes WHERE overall_rating >= 60 AND overall_rating <= 65 AND defensive_work_rate = 'low'\t----- bird -----\teuropean_football_2",
    "1024": "SELECT T1.player_api_id FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id ORDER BY T2.crossing DESC LIMIT 5\t----- bird -----\teuropean_football_2",
    "1025": "SELECT L.name, SUM(M.home_team_goal + M.away_team_goal) AS total_goals FROM League L LEFT JOIN Match M ON L.id = M.league_id WHERE M.season = '2015/2016' GROUP BY L.name ORDER BY total_goals DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1026": "SELECT T2.team_long_name FROM Match AS T1 INNER JOIN Team AS T2 ON T1.home_team_api_id = T2.team_api_id WHERE T1.season = '2015/2016' AND T1.home_team_goal < T1.away_team_goal GROUP BY T1.home_team_api_id ORDER BY COUNT(T1.id) ASC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1027": "SELECT P.player_name FROM Player P INNER JOIN Player_Attributes PA ON P.player_api_id = PA.player_api_id ORDER BY PA.penalties DESC LIMIT 10\t----- bird -----\teuropean_football_2",
    "1028": "SELECT away_team_api_id FROM Match WHERE league_id = (SELECT id FROM League WHERE name = 'Scotland Premier League') AND season = '2009/2010' AND away_team_goal > home_team_goal GROUP BY away_team_api_id ORDER BY COUNT(*) DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1029": "SELECT T1.team_long_name, T2.buildUpPlaySpeed FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.buildUpPlaySpeed IN (SELECT buildUpPlaySpeed FROM Team_Attributes ORDER BY buildUpPlaySpeed DESC LIMIT 4)\t----- bird -----\teuropean_football_2",
    "1030": "SELECT L.league_name, COUNT(*) as Draw_Matches FROM Match M JOIN League L ON M.league_id = L.id WHERE M.season = '2015/2016' AND M.home_team_goal = M.away_team_goal GROUP BY L.league_name ORDER BY Draw_Matches DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1031": "SELECT P.player_name, (strftime('%Y', 'now') - strftime('%Y', P.birthday)) - (strftime('%m-%d', 'now') < strftime('%m-%d', P.birthday)) AS age FROM Player AS P INNER JOIN Player_Attributes AS PA ON P.player_api_id = PA.player_api_id WHERE PA.sprint_speed >= 97 AND PA.date BETWEEN '2013-01-01 00:00:00' AND '2015-12-31 00:00:00'\t----- bird -----\teuropean_football_2",
    "1032": "SELECT T2.name, COUNT(*) as match_count FROM Match AS T1 INNER JOIN League AS T2 ON T1.league_id = T2.id GROUP BY T1.league_id ORDER BY match_count DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1033": "SELECT AVG(height) FROM Player WHERE birthday >= '1990-01-01 00:00:00' AND birthday < '1996-01-01 00:00:00'\t----- bird -----\teuropean_football_2",
    "1034": "SELECT player_api_id FROM Player_Attributes WHERE overall_rating > ( SELECT AVG(overall_rating) FROM Player_Attributes WHERE substr(date,1,4) = '2010' ) ORDER BY overall_rating DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1035": "SELECT team_fifa_api_id FROM Team_Attributes WHERE buildUpPlaySpeed BETWEEN 51 AND 59\t----- bird -----\teuropean_football_2",
    "1036": "SELECT T1.team_long_name FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.buildUpPlayPassing > ( SELECT AVG(buildUpPlayPassing) FROM Team_Attributes WHERE strftime('%Y', date) = '2012' ) AND strftime('%Y', T2.date) = '2012'\t----- bird -----\teuropean_football_2",
    "1037": "SELECT CAST(SUM(CASE WHEN T2.preferred_foot = 'left' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T2.player_fifa_api_id) FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.birthday BETWEEN '1987-01-01 00:00:00' AND '1992-12-31 00:00:00'\t----- bird -----\teuropean_football_2",
    "1038": "SELECT L.name, SUM(M.home_team_goal + M.away_team_goal) AS total_goals FROM Match M JOIN League L ON M.league_id = L.id GROUP BY L.name ORDER BY total_goals ASC LIMIT 5\t----- bird -----\teuropean_football_2",
    "1039": "SELECT AVG(T2.long_shots) FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'Ahmed Samir Farag'\t----- bird -----\teuropean_football_2",
    "1040": "SELECT P.player_name, AVG(PA.heading_accuracy) AS avg_heading_accuracy FROM Player AS P INNER JOIN Player_Attributes AS PA ON P.player_api_id = PA.player_api_id AND P.player_fifa_api_id = PA.player_fifa_api_id WHERE P.height > 180 GROUP BY P.player_name ORDER BY avg_heading_accuracy DESC LIMIT 10\t----- bird -----\teuropean_football_2",
    "1041": "SELECT T1.team_long_name, T2.chanceCreationPassing FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.chanceCreationPassing < ( SELECT AVG(chanceCreationPassing) FROM Team_Attributes WHERE buildUpPlayDribblingClass = 'Normal' AND date >= '2014-01-01 00:00:00' AND date <= '2014-12-31 23:59:59' ) ORDER BY T2.chanceCreationPassing DESC\t----- bird -----\teuropean_football_2",
    "1042": "SELECT T1.name FROM League AS T1 INNER JOIN (SELECT league_id, AVG(home_team_goal) AS avg_home, AVG(away_team_goal) AS avg_away FROM Match WHERE season = \"2009/2010\" GROUP BY league_id) AS T2 ON T1.id = T2.league_id WHERE T2.avg_home > T2.avg_away\t----- bird -----\teuropean_football_2",
    "1043": "SELECT team_short_name FROM Team WHERE team_long_name = 'Queens Park Rangers'\t----- bird -----\teuropean_football_2",
    "1044": "SELECT player_name FROM Player WHERE substr(birthday,1,4) = '1970' AND substr(birthday,6,2) = '10'\t----- bird -----\teuropean_football_2",
    "1045": "SELECT T2.attacking_work_rate FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'Franco Zennaro'\t----- bird -----\teuropean_football_2",
    "1046": "SELECT T2.buildUpPlayPositioningClass FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.team_long_name = 'ADO Den Haag'\t----- bird -----\teuropean_football_2",
    "1047": "SELECT T2.heading_accuracy FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'Francois Affolter'\t----- bird -----\teuropean_football_2",
    "1048": "SELECT T2.overall_rating FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'Gabriel Tamas' AND strftime('%Y', T2.date) = '2011'\t----- bird -----\teuropean_football_2",
    "1049": "SELECT COUNT(T1.id) FROM Match AS T1 INNER JOIN League AS T2 ON T1.league_id = T2.id WHERE T1.season = '2015/2016' AND T2.name = 'Scotland Premier League'\t----- bird -----\teuropean_football_2",
    "1050": "SELECT T2.preferred_foot FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.birthday = (SELECT MAX(birthday) FROM Player)\t----- bird -----\teuropean_football_2",
    "1051": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.potential = (SELECT MAX(potential) FROM Player_Attributes)\t----- bird -----\teuropean_football_2",
    "1052": "SELECT COUNT(*) FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.weight < 130 AND T2.preferred_foot = 'left'\t----- bird -----\teuropean_football_2",
    "1053": "SELECT T1.team_short_name FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.chanceCreationPassingClass = 'Risky'\t----- bird -----\teuropean_football_2",
    "1054": "SELECT T2.defensive_work_rate FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id AND T1.player_fifa_api_id = T2.player_fifa_api_id WHERE T1.player_name = 'David Wilson'\t----- bird -----\teuropean_football_2",
    "1055": "SELECT player_name, birthday FROM Player WHERE player_api_id IN (SELECT player_api_id FROM Player_Attributes WHERE overall_rating = (SELECT MAX(overall_rating) FROM Player_Attributes))\t----- bird -----\teuropean_football_2",
    "1056": "SELECT League.name FROM League INNER JOIN Country ON League.country_id = Country.id WHERE Country.name = 'Netherlands'\t----- bird -----\teuropean_football_2",
    "1057": "SELECT AVG(Match.home_team_goal) FROM Match INNER JOIN Country ON Match.country_id = Country.id WHERE Country.name = 'Poland' AND Match.season = '2010/2011'\t----- bird -----\teuropean_football_2",
    "1058": "SELECT T1.player_name, AVG(T2.finishing) as average_finishing_rate FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.height = ( SELECT MAX(height) FROM Player ) OR T1.height = ( SELECT MIN(height) FROM Player ) GROUP BY T1.player_name ORDER BY average_finishing_rate DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1059": "SELECT player_name FROM Player WHERE height > 180\t----- bird -----\teuropean_football_2",
    "1060": "SELECT COUNT(*) FROM Player WHERE strftime('%Y', birthday) > '1990'\t----- bird -----\teuropean_football_2",
    "1061": "SELECT COUNT(*) FROM Player WHERE player_name LIKE 'Adam%' AND weight > 170\t----- bird -----\teuropean_football_2",
    "1062": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.overall_rating > 80\t----- bird -----\teuropean_football_2",
    "1063": "SELECT T2.potential FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'Aaron Doran'\t----- bird -----\teuropean_football_2",
    "1064": "SELECT Player.player_name FROM Player JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE Player_Attributes.preferred_foot = 'left'\t----- bird -----\teuropean_football_2",
    "1065": "SELECT T1.team_long_name FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.buildUpPlaySpeedClass = 'Fast'\t----- bird -----\teuropean_football_2",
    "1066": "SELECT T2.buildUpPlayPassingClass FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.team_short_name = 'CLB'\t----- bird -----\teuropean_football_2",
    "1067": "SELECT T1.team_short_name FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.buildUpPlayPassing > 70\t----- bird -----\teuropean_football_2",
    "1068": "SELECT AVG(\"Player_Attributes\".overall_rating) FROM \"Player\" INNER JOIN \"Player_Attributes\" ON \"Player\".player_api_id = \"Player_Attributes\".player_api_id WHERE \"Player\".height > 170\t----- bird -----\teuropean_football_2",
    "1069": "SELECT player_name, MIN(height) FROM Player;\t----- bird -----\teuropean_football_2",
    "1070": "SELECT T1.name FROM Country AS T1 INNER JOIN League AS T2 ON T1.id = T2.country_id WHERE T2.name = 'Italy Serie A'\t----- bird -----\teuropean_football_2",
    "1071": "SELECT T1.team_short_name FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.buildUpPlaySpeed = 31 AND T2.buildUpPlayDribbling = 53 AND T2.buildUpPlayPassing = 32\t----- bird -----\teuropean_football_2",
    "1072": "SELECT AVG(T2.overall_rating) FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'Aaron Doran'\t----- bird -----\teuropean_football_2",
    "1073": "SELECT COUNT(\"Match\".id) FROM \"Match\" INNER JOIN \"League\" ON \"Match\".league_id = \"League\".id WHERE \"League\".name = 'Germany 1. Bundesliga' AND strftime('%Y-%m', \"Match\".date) BETWEEN '2008-08' AND '2008-10'\t----- bird -----\teuropean_football_2",
    "1074": "SELECT T2.team_short_name FROM Match AS T1 INNER JOIN Team AS T2 ON T1.home_team_api_id = T2.team_api_id WHERE T1.home_team_goal = 10\t----- bird -----\teuropean_football_2",
    "1075": "SELECT P.player_name FROM Player AS P INNER JOIN Player_Attributes AS PA ON P.player_api_id = PA.player_api_id WHERE PA.balance = ( SELECT MAX(balance) FROM Player_Attributes ) AND PA.potential = 61\t----- bird -----\teuropean_football_2",
    "1076": "SELECT (SELECT AVG(ball_control) FROM Player JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE player_name = 'Abdou Diallo') - (SELECT AVG(ball_control) FROM Player JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE player_name = 'Aaron Appindangoye')\t----- bird -----\teuropean_football_2",
    "1077": "SELECT team_long_name FROM Team WHERE team_short_name = 'GEN'\t----- bird -----\teuropean_football_2",
    "1078": "SELECT player_name, birthday FROM Player WHERE player_name IN ('Aaron Lennon', 'Abdelaziz Barrada') ORDER BY birthday LIMIT 1\t----- bird -----\teuropean_football_2",
    "1079": "SELECT player_name, MAX(height) FROM Player\t----- bird -----\teuropean_football_2",
    "1080": "SELECT COUNT(*) FROM Player_Attributes WHERE preferred_foot = 'left' AND attacking_work_rate = 'low'\t----- bird -----\teuropean_football_2",
    "1081": "SELECT Country.name FROM Country INNER JOIN League ON Country.id = League.country_id WHERE League.name = 'Belgium Jupiler League'\t----- bird -----\teuropean_football_2",
    "1082": "SELECT \"League.name\" FROM \"League\" INNER JOIN \"Country\" ON \"Country.id\" = \"League.country_id\" WHERE \"Country.name\" = 'Germany'\t----- bird -----\teuropean_football_2",
    "1083": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id ORDER BY T2.overall_rating DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1084": "SELECT COUNT(*) FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE strftime('%Y', T1.birthday)<'1986' AND T2.defensive_work_rate = 'high'\t----- bird -----\teuropean_football_2",
    "1085": "SELECT T1.player_name, MAX(T2.crossing) FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name IN ('Alexis', 'Ariel Borysiuk', 'Arouna Kone')\t----- bird -----\teuropean_football_2",
    "1086": "SELECT heading_accuracy FROM Player_Attributes JOIN Player ON Player.player_api_id = Player_Attributes.player_api_id WHERE Player.player_name = 'Ariel Borysiuk'\t----- bird -----\teuropean_football_2",
    "1087": "SELECT COUNT(DISTINCT T1.player_api_id) FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.height > 180 AND T2.volleys > 70\t----- bird -----\teuropean_football_2",
    "1088": "SELECT Player.player_name FROM Player INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE Player_Attributes.volleys > 70 AND Player_Attributes.dribbling > 70\t----- bird -----\teuropean_football_2",
    "1089": "SELECT COUNT(T1.id) FROM Match AS T1 INNER JOIN Country AS T2 ON T1.country_id = T2.id WHERE T1.season = '2008/2009' AND T2.name = 'Belgium'\t----- bird -----\teuropean_football_2",
    "1090": "SELECT T2.long_passing FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id ORDER BY T1.birthday ASC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1091": "SELECT COUNT(T1.id) FROM Match AS T1 INNER JOIN League AS T2 ON T1.league_id = T2.id WHERE T2.name = 'Belgium Jupiler League' AND strftime('%Y', T1.date) = '2009' AND strftime('%m', T1.date) = '04'\t----- bird -----\teuropean_football_2",
    "1092": "SELECT L.name, COUNT(*) as match_count FROM Match M JOIN League L ON M.league_id = L.id WHERE M.season = '2008/2009' GROUP BY L.name ORDER BY match_count DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1093": "SELECT AVG(T2.overall_rating) FROM \"Player\" AS T1 INNER JOIN \"Player_Attributes\" AS T2 ON T1.player_api_id = T2.player_api_id WHERE strftime('%Y', T1.birthday) < '1986'\t----- bird -----\teuropean_football_2",
    "1094": "SELECT ((T1.overall_rating - T2.overall_rating) / T2.overall_rating) * 100 FROM Player_Attributes AS T1 INNER JOIN Player AS P1 ON T1.player_api_id = P1.player_api_id INNER JOIN Player_Attributes AS T2 INNER JOIN Player AS P2 ON T2.player_api_id = P2.player_api_id WHERE P1.player_name = 'Ariel Borysiuk' AND P2.player_name = 'Paulin Puel'\t----- bird -----\teuropean_football_2",
    "1095": "SELECT AVG(T2.buildUpPlaySpeed) FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.team_long_name = 'Heart of Midlothian'\t----- bird -----\teuropean_football_2",
    "1096": "SELECT AVG(T1.overall_rating) FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Pietro Marino'\t----- bird -----\teuropean_football_2",
    "1097": "SELECT SUM(T1.crossing) FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Aaron Lennox'\t----- bird -----\teuropean_football_2",
    "1098": "SELECT MAX(T2.chanceCreationPassing), T2.chanceCreationPassingClass FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id AND T1.team_fifa_api_id = T2.team_fifa_api_id WHERE T1.team_long_name = 'Ajax'\t----- bird -----\teuropean_football_2",
    "1099": "SELECT T2.preferred_foot FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'Abdou Diallo'\t----- bird -----\teuropean_football_2",
    "1100": "SELECT MAX(T1.overall_rating) FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Dorlan Pabon'\t----- bird -----\teuropean_football_2",
    "1101": "SELECT AVG(M.away_team_goal) FROM Match as M JOIN Team as T ON M.away_team_api_id = T.team_api_id WHERE T.team_long_name = 'Parma'\t----- bird -----\teuropean_football_2",
    "1102": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.overall_rating = 77 ORDER BY T1.birthday ASC LIMIT 1However, the question mentions \"on 2016/6/23\", but there is no date column in the provided schema to apply this condition. So, the query might not give the correct answer for the question as per the provided schema.\t----- bird -----\teuropean_football_2",
    "1103": "SELECT T2.overall_rating FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'Aaron Mooy' AND T2.date = '2016-02-04 00:00:00'\t----- bird -----\teuropean_football_2",
    "1104": "SELECT T2.potential FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id AND T1.player_fifa_api_id = T2.player_fifa_api_id WHERE T1.player_name = 'Francesco Parravicini' AND T1.birthday = '2010-08-30 00:00:00'\t----- bird -----\teuropean_football_2",
    "1105": "The revised SQL query cannot be provided due to missing data in the provided schema.\t----- bird -----\teuropean_football_2",
    "1106": "SELECT T2.defensive_work_rate FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'Kevin Berigaud'\t----- bird -----\teuropean_football_2",
    "1107": "SELECT MIN(T2.date) FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'Kevin Constant' AND T2.crossing = (SELECT MAX(crossing) FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Kevin Constant'))\t----- bird -----\teuropean_football_2",
    "1108": "SELECT T2.buildUpPlaySpeedClass FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.team_long_name = 'Willem II' AND T2.date = '2012-02-22 00:00:00'\t----- bird -----\teuropean_football_2",
    "1109": "SELECT T1.buildUpPlayDribblingClass FROM Team_Attributes AS T1 INNER JOIN Team AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.team_short_name = 'LEI' AND T1.date = '2015-09-10 00:00:00'\t----- bird -----\teuropean_football_2",
    "1110": "SELECT Team_Attributes.buildUpPlayPassingClass FROM Team INNER JOIN Team_Attributes ON Team.team_api_id = Team_Attributes.team_api_id AND Team.team_fifa_api_id = Team_Attributes.team_fifa_api_id WHERE Team.team_long_name = 'FC Lorient' AND Team_Attributes.date = '2010-02-22'\t----- bird -----\teuropean_football_2",
    "1111": "SELECT T2.chanceCreationPassingClass FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.team_long_name = 'PEC Zwolle' AND T2.date = '2013-09-20 00:00:00'\t----- bird -----\teuropean_football_2",
    "1112": "SELECT T2.chanceCreationCrossingClass FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.team_long_name = 'Hull City' AND T2.date = '2010-02-22 00:00:00'\t----- bird -----\teuropean_football_2",
    "1113": "SELECT T2.defenceAggressionClass FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.team_long_name = 'Hannover 96' AND T2.date = '2015-09-10 00:00:00'\t----- bird -----\teuropean_football_2",
    "1114": "SELECT AVG(T1.overall_rating) FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id AND T1.player_fifa_api_id = T2.player_fifa_api_id WHERE T2.player_name = 'Marko Arnautovic'\t----- bird -----\teuropean_football_2",
    "1115": "SELECT ((SELECT overall_rating FROM Player_Attributes JOIN Player ON Player.player_api_id = Player_Attributes.player_api_id WHERE player_name = 'Landon Donovan') - (SELECT overall_rating FROM Player_Attributes JOIN Player ON Player.player_api_id = Player_Attributes.player_api_id WHERE player_name = 'Jordan Bowery')) / (SELECT overall_rating FROM Player_Attributes JOIN Player ON Player.player_api_id = Player_Attributes.player_api_id WHERE player_name = 'Landon Donovan') * 100 AS percentage_difference\t----- bird -----\teuropean_football_2",
    "1116": "SELECT player_name, height FROM Player ORDER BY height DESC LIMIT 5\t----- bird -----\teuropean_football_2",
    "1117": "SELECT player_api_id FROM Player ORDER BY weight DESC LIMIT 10\t----- bird -----\teuropean_football_2",
    "1118": "SELECT player_name FROM Player WHERE (strftime('%Y', 'now') - strftime('%Y', birthday)) >= 35\t----- bird -----\teuropean_football_2",
    "1119": "SELECT SUM(M.home_team_goal) FROM Match M INNER JOIN Player P ON M.home_player_1 = P.player_api_id OR M.home_player_2 = P.player_api_id OR M.home_player_3 = P.player_api_id OR M.home_player_4 = P.player_api_id OR M.home_player_5 = P.player_api_id OR M.home_player_6 = P.player_api_id OR M.home_player_7 = P.player_api_id OR M.home_player_8 = P.player_api_id OR M.home_player_9 = P.player_api_id OR M.home_player_10 = P.player_api_id OR M.home_player_11 = P.player_api_id WHERE P.player_name = 'Aaron Lennon'\t----- bird -----\teuropean_football_2",
    "1120": "SELECT SUM(away_team_goal) FROM Match WHERE away_player_1 IN (SELECT player_api_id FROM Player WHERE player_name = 'Daan Smith' OR player_name = 'Filipe Ferreira') OR away_player_2 IN (SELECT player_api_id FROM Player WHERE player_name = 'Daan Smith' OR player_name = 'Filipe Ferreira') OR away_player_3 IN (SELECT player_api_id FROM Player WHERE player_name = 'Daan Smith' OR player_name = 'Filipe Ferreira') OR away_player_4 IN (SELECT player_api_id FROM Player WHERE player_name = 'Daan Smith' OR player_name = 'Filipe Ferreira') OR away_player_5 IN (SELECT player_api_id FROM Player WHERE player_name = 'Daan Smith' OR player_name = 'Filipe Ferreira') OR away_player_6 IN (SELECT player_api_id FROM Player WHERE player_name = 'Daan Smith' OR player_name = 'Filipe Ferreira') OR away_player_7 IN (SELECT player_api_id FROM Player WHERE player_name = 'Daan Smith' OR player_name = 'Filipe Ferreira') OR away_player_8 IN (SELECT player_api_id FROM Player WHERE player_name = 'Daan Smith' OR player_name = 'Filipe Ferreira') OR away_player_9 IN (SELECT player_api_id FROM Player WHERE player_name = 'Daan Smith' OR player_name = 'Filipe Ferreira') OR away_player_10 IN (SELECT player_api_id FROM Player WHERE player_name = 'Daan Smith' OR player_name = 'Filipe Ferreira') OR away_player_11 IN (SELECT player_api_id FROM Player WHERE player_name = 'Daan Smith' OR player_name = 'Filipe Ferreira')\t----- bird -----\teuropean_football_2",
    "1121": "SELECT SUM(M.home_team_goal) FROM Match M INNER JOIN Player P ON M.home_player_1 = P.player_api_id OR M.home_player_2 = P.player_api_id OR M.home_player_3 = P.player_api_id OR M.home_player_4 = P.player_api_id OR M.home_player_5 = P.player_api_id OR M.home_player_6 = P.player_api_id OR M.home_player_7 = P.player_api_id OR M.home_player_8 = P.player_api_id OR M.home_player_9 = P.player_api_id OR M.home_player_10 = P.player_api_id OR M.home_player_11 = P.player_api_id WHERE (strftime('%Y', 'now') - strftime('%Y', P.birthday)) < 31 OR ((strftime('%Y', 'now') - strftime('%Y', P.birthday)) = 30 AND strftime('%m-%d', 'now') >= strftime('%m-%d', P.birthday))\t----- bird -----\teuropean_football_2",
    "1122": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id ORDER BY T2.overall_rating DESC LIMIT 10\t----- bird -----\teuropean_football_2",
    "1123": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.potential = (SELECT MAX(potential) FROM Player_Attributes)\t----- bird -----\teuropean_football_2",
    "1124": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id AND T1.player_fifa_api_id = T2.player_fifa_api_id WHERE T2.attacking_work_rate = 'high'\t----- bird -----\teuropean_football_2",
    "1125": "SELECT P.player_name FROM Player AS P INNER JOIN Player_Attributes AS PA ON P.player_api_id = PA.player_api_id WHERE PA.finishing = 1 ORDER BY P.birthday DESC LIMIT 1.\t----- bird -----\teuropean_football_2",
    "1126": "SELECT player_name FROM players WHERE country = 'Belgium'\t----- bird -----\teuropean_football_2",
    "1127": "SELECT P.player_name, C.name FROM Player AS P JOIN Player_Attributes AS PA ON P.player_api_id = PA.player_api_id JOIN Match AS M ON P.player_api_id = M.home_player_1 JOIN Country AS C ON M.country_id = C.id WHERE PA.vision > 89\t----- bird -----\teuropean_football_2",
    "1128": "SELECT Country.name, AVG(Player.weight) as avg_weight from Match INNER JOIN Player ON Match.home_player_1 = Player.player_api_id OR Match.home_player_2 = Player.player_api_id OR Match.home_player_3 = Player.player_api_id OR Match.home_player_4 = Player.player_api_id OR Match.home_player_5 = Player.player_api_id OR Match.home_player_6 = Player.player_api_id OR Match.home_player_7 = Player.player_api_id OR Match.home_player_8 = Player.player_api_id OR Match.home_player_9 = Player.player_api_id OR Match.home_player_10 = Player.player_api_id OR Match.home_player_11 = Player.player_api_id OR Match.away_player_1 = Player.player_api_id OR Match.away_player_2 = Player.player_api_id OR Match.away_player_3 = Player.player_api_id OR Match.away_player_4 = Player.player_api_id OR Match.away_player_5 = Player.player_api_id OR Match.away_player_6 = Player.player_api_id OR Match.away_player_7 = Player.player_api_id OR Match.away_player_8 = Player.player_api_id OR Match.away_player_9 = Player.player_api_id OR Match.away_player_10 = Player.player_api_id OR Match.away_player_11 = Player.player_api_id INNER JOIN Country ON Match.country_id = Country.id GROUP BY Country.name ORDER BY avg_weight DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1129": "SELECT T1.team_long_name FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.buildUpPlaySpeedClass = 'Slow'\t----- bird -----\teuropean_football_2",
    "1130": "SELECT T1.team_short_name FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id AND T1.team_fifa_api_id = T2.team_fifa_api_id WHERE T2.chanceCreationPassingClass = 'Safe'\t----- bird -----\teuropean_football_2",
    "1131": "We need more information about the database schema to answer this question.\t----- bird -----\teuropean_football_2",
    "1132": "SELECT player_name FROM Player WHERE height > 180 ORDER BY player_name ASC LIMIT 3\t----- bird -----\teuropean_football_2",
    "1133": "SELECT COUNT(*) FROM Player WHERE player_name LIKE 'Aaron%' AND birthday > '1990-12-31 23:59:59'\t----- bird -----\teuropean_football_2",
    "1134": "SELECT ABS((SELECT jumping FROM Player_Attributes INNER JOIN Player ON Player_Attributes.player_api_id = Player.player_api_id WHERE Player.id = 6) - (SELECT jumping FROM Player_Attributes INNER JOIN Player ON Player_Attributes.player_api_id = Player.player_api_id WHERE Player.id = 23))\t----- bird -----\teuropean_football_2",
    "1135": "SELECT T1.player_api_id FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.preferred_foot = 'right' ORDER BY T1.potential ASC LIMIT 3\t----- bird -----\teuropean_football_2",
    "1136": "SELECT COUNT(id) FROM Player_Attributes WHERE crossing = ( SELECT MAX(crossing) FROM Player_Attributes ) AND preferred_foot = 'left'\t----- bird -----\teuropean_football_2",
    "1137": "SELECT CAST(COUNT(*) AS FLOAT) / (SELECT COUNT(*) FROM Player_Attributes) * 100 AS percentage FROM Player_Attributes WHERE strength > 80 AND stamina > 80\t----- bird -----\teuropean_football_2",
    "1138": "SELECT Country.name FROM Country JOIN League ON Country.id = League.country_id WHERE League.name = 'Poland Ekstraklasa'\t----- bird -----\teuropean_football_2",
    "1139": "SELECT T1.home_team_goal, T1.away_team_goal FROM \"Match\" AS T1 INNER JOIN \"League\" AS T2 ON T1.league_id = T2.id WHERE T1.date LIKE '2008-09-24%' AND T2.name = 'Belgian Jupiler League'\t----- bird -----\teuropean_football_2",
    "1140": "SELECT Player_Attributes.sprint_speed, Player_Attributes.agility, Player_Attributes.acceleration FROM Player INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE Player.player_name = 'Alexis Blin'\t----- bird -----\teuropean_football_2",
    "1141": "SELECT T2.buildUpPlaySpeedClass FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.team_long_name = 'KSV Cercle Brugge'\t----- bird -----\teuropean_football_2",
    "1142": "SELECT COUNT(T1.id) FROM Match AS T1 INNER JOIN League AS T2 ON T1.league_id = T2.id WHERE T1.season = '2015/2016' AND T2.name = 'Italian Serie A'\t----- bird -----\teuropean_football_2",
    "1143": "SELECT MAX(M.home_team_goal) FROM Match M INNER JOIN League L ON M.league_id = L.id WHERE L.name = 'Netherlands Eredivisie'\t----- bird -----\teuropean_football_2",
    "1144": "SELECT T1.finishing, T1.curve FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.weight = ( SELECT MAX(weight) FROM Player )\t----- bird -----\teuropean_football_2",
    "1145": "SELECT L.name, COUNT(M.id) AS count FROM League L INNER JOIN Match M ON L.id = M.league_id WHERE M.season = '2015/2016' GROUP BY L.name ORDER BY count DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1146": "SELECT T2.team_long_name FROM Match AS T1 INNER JOIN Team AS T2 ON T1.away_team_api_id = T2.team_api_id WHERE T1.away_team_goal = ( SELECT MAX(away_team_goal) FROM Match )\t----- bird -----\teuropean_football_2",
    "1147": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id ORDER BY T2.overall_rating DESC LIMIT 1.\t----- bird -----\teuropean_football_2",
    "1148": "SELECT (CAST(COUNT(*) AS REAL) / (SELECT COUNT(*) FROM Player)) * 100 FROM Player AS P INNER JOIN Player_Attributes AS A ON P.player_api_id = A.player_api_id WHERE P.height < 180 AND A.overall_rating > 70\t----- bird -----\teuropean_football_2",
    "1149": "SELECT (in_patient - out_patient)*100.0 / total as deviation_percentage FROM (    SELECT COUNT(ID) as total,    SUM(CASE WHEN Admission = '+' THEN 1 ELSE 0 END) as in_patient,    SUM(CASE WHEN Admission = '-' THEN 1 ELSE 0 END) as out_patient    FROM Patient    WHERE SEX = 'M')\t----- bird -----\tthrombosis_prediction",
    "1150": "SELECT CAST(SUM(CASE WHEN strftime('%Y', Birthday) > '1930' THEN 1 ELSE 0 END) AS FLOAT) / COUNT(*) * 100 as Percentage FROM Patient WHERE SEX = 'F'\t----- bird -----\tthrombosis_prediction",
    "1151": "SELECT     (CAST(COUNT(*) AS FLOAT) /     (SELECT COUNT(*) FROM Patient      WHERE strftime('%Y', Birthday) BETWEEN '1930' AND '1940')) * 100     AS Inpatient_PercentageFROM PatientWHERE strftime('%Y', Birthday) BETWEEN '1930' AND '1940'AND Admission = '+'\t----- bird -----\tthrombosis_prediction",
    "1152": "SELECT     (SELECT COUNT(ID) FROM Patient WHERE Diagnosis = 'SLE' AND Admission = '+') / CAST((SELECT COUNT(ID) FROM Patient WHERE Diagnosis = 'SLE' AND Admission = '-') AS FLOAT)     AS ratioFROM PatientLIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1153": "SELECT T1.Diagnosis, T2.Date FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.ID = '30609'\t----- bird -----\tthrombosis_prediction",
    "1154": "SELECT T1.SEX, T1.Birthday, T2.\"Examination Date\", T2.Symptoms FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.ID = '163109'\t----- bird -----\tthrombosis_prediction",
    "1155": "SELECT T1.ID, T1.SEX, T1.Birthday FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.LDH > 500\t----- bird -----\tthrombosis_prediction",
    "1156": "SELECT T1.ID, (strftime('%Y', 'now') - strftime('%Y', T1.Birthday)) as Age FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.RVVT = '+'\t----- bird -----\tthrombosis_prediction",
    "1157": "SELECT T1.ID, T1.SEX, T1.Diagnosis FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.Thrombosis = 2\t----- bird -----\tthrombosis_prediction",
    "1158": "SELECT T1.* FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE strftime('%Y', T1.Birthday) = '1937' AND T2.`T-CHO` >= 250\t----- bird -----\tthrombosis_prediction",
    "1159": "SELECT T2.ID, T2.SEX, T2.Diagnosis FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.ALB < 3.5\t----- bird -----\tthrombosis_prediction",
    "1160": "SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM Patient WHERE SEX = 'F') FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'F' AND (T2.TP < 6.0 OR T2.TP > 8.5)\t----- bird -----\tthrombosis_prediction",
    "1161": "SELECT AVG(T1.'aCL IgG') FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T2.Admission = '+' AND (strftime('%Y','now') - strftime('%Y',T2.Birthday)) >= 50\t----- bird -----\tthrombosis_prediction",
    "1162": "SELECT COUNT(*) FROM Patient WHERE SEX = 'F' AND strftime('%Y', Description) = '1997' AND Admission = '-'\t----- bird -----\tthrombosis_prediction",
    "1163": "SELECT MIN(strftime('%Y', \"First Date\") - strftime('%Y', \"Birthday\")) as Age FROM Patient\t----- bird -----\tthrombosis_prediction",
    "1164": "SELECT COUNT(*) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.Thrombosis = '1' AND T1.SEX = 'F' AND strftime('%Y', T2.\"Examination Date\") = '1997'\t----- bird -----\tthrombosis_prediction",
    "1165": "SELECT strftime('%Y',(SELECT MAX(Birthday) FROM Patient WHERE ID IN ( SELECT ID FROM Laboratory WHERE TG >= 200 ))) - strftime('%Y',(SELECT MIN(Birthday) FROM Patient WHERE ID IN ( SELECT ID FROM Laboratory WHERE TG >= 200 )))\t----- bird -----\tthrombosis_prediction",
    "1166": "SELECT T2.Symptoms, T2.Diagnosis FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.Birthday = ( SELECT MAX(Birthday) FROM Patient )\t----- bird -----\tthrombosis_prediction",
    "1167": "SELECT COUNT(T1.ID) / 12 FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.Date BETWEEN '1998-01-01' AND '1998-12-31' AND T2.SEX = 'M'\t----- bird -----\tthrombosis_prediction",
    "1168": "SELECT T2.Date, strftime('%Y', T1.`First Date`) - strftime('%Y', T1.Birthday) AS Age FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.ID = ( SELECT ID FROM Patient WHERE Diagnosis = 'SJS' ORDER BY Birthday ASC LIMIT 1 ) ORDER BY T2.Date DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1169": "SELECT (SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.SEX = 'M' AND Laboratory.UA <= 8.0) / (SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.SEX = 'F' AND Laboratory.UA <= 6.5) AS Ratio\t----- bird -----\tthrombosis_prediction",
    "1170": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE julianday(T2.\"Examination Date\") - julianday(T1.\"First Date\") >= 365\t----- bird -----\tthrombosis_prediction",
    "1171": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE ((strftime('%Y', T2.\"Examination Date\") - strftime('%Y', T1.Birthday)) < 18) AND T2.\"Examination Date\" BETWEEN '1990-01-01' AND '1993-12-31'\t----- bird -----\tthrombosis_prediction",
    "1172": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND T2.\"T-BIL\" > 2.0\t----- bird -----\tthrombosis_prediction",
    "1173": "SELECT T1.Diagnosis, COUNT(*) as count FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.Date BETWEEN '1985-01-01' AND '1995-12-31' GROUP BY T1.Diagnosis ORDER BY count DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1174": "SELECT AVG(1991 - CAST(strftime('%Y', T1.Birthday) AS INT)) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.Date BETWEEN '1991-10-01' AND '1991-10-31'\t----- bird -----\tthrombosis_prediction",
    "1175": "SELECT     CASE        WHEN strftime('%m-%d',T1.\"Examination Date\") >= strftime('%m-%d',T2.Birthday) THEN strftime('%Y',T1.\"Examination Date\") - strftime('%Y',T2.Birthday)        ELSE (strftime('%Y',T1.\"Examination Date\") - strftime('%Y',T2.Birthday)) - 1    END AS Age,    T1.Diagnosis FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID INNER JOIN Laboratory AS T3 ON T1.ID = T3.ID WHERE T3.HGB = ( SELECT MAX(HGB) FROM Laboratory )\t----- bird -----\tthrombosis_prediction",
    "1176": "SELECT \"ANA\" FROM \"Examination\" WHERE \"ID\" = 3605340 AND \"Examination Date\" = '1996-12-02'\t----- bird -----\tthrombosis_prediction",
    "1177": "SELECT T-CHO <= 250 AS 'Is_Normal' FROM Laboratory WHERE ID = 2927464 AND Date = '1995-9-4'\t----- bird -----\tthrombosis_prediction",
    "1178": "SELECT SEX FROM Patient WHERE Diagnosis = 'AORTITIS' LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1179": "SELECT E.aCL_IgM FROM Patient P INNER JOIN Examination E ON P.ID = E.ID WHERE P.Diagnosis LIKE 'SLE' AND P.Description = '1994-02-19' AND E.Examination_Date = '1993-11-12'\t----- bird -----\tthrombosis_prediction",
    "1180": "SELECT T1.SEX FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.GPT = 9 AND T2.Date = '1992-06-12'\t----- bird -----\tthrombosis_prediction",
    "1181": "SELECT 1991 - CAST(SUBSTR(T2.Birthday, 1, 4) AS INTEGER) FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.UA = 8.4 AND T1.Date = '1991-10-21'\t----- bird -----\tthrombosis_prediction",
    "1182": "SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.`First Date` = '1991-06-13' AND T1.Diagnosis = 'SJS' AND T2.Date LIKE '1995%'\t----- bird -----\tthrombosis_prediction",
    "1183": "SELECT Diagnosis FROM Patient WHERE ID = ( SELECT ID FROM Examination WHERE Diagnosis = 'SLE' AND \"Examination Date\" = '1997-01-27' ) AND \"First Date\" IS NOT NULL ORDER BY \"First Date\" ASC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1184": "SELECT T1.Symptoms FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T2.Birthday = '1959-03-01' AND T1.\"Examination Date\" = '1993-09-27'\t----- bird -----\tthrombosis_prediction",
    "1185": "SELECT ((SELECT SUM(T-CHO) FROM Laboratory WHERE ID = ( SELECT ID FROM Patient WHERE Birthday = '1959-02-18' ) AND Date like '1981-11-%') - (SELECT SUM(T-CHO) FROM Laboratory WHERE ID = ( SELECT ID FROM Patient WHERE Birthday = '1959-02-18' ) AND Date like '1981-12-%')) AS 'decrease rate'\t----- bird -----\tthrombosis_prediction",
    "1186": "SELECT ID FROM Patient WHERE Diagnosis = 'Behcet' AND Description >= '1997-01-01' AND Description < '1998-01-01'\t----- bird -----\tthrombosis_prediction",
    "1187": "SELECT ID FROM Laboratory WHERE Date BETWEEN '1987-07-06' AND '1996-01-31' AND GPT > 30 AND ALB < 4\t----- bird -----\tthrombosis_prediction",
    "1188": "SELECT ID FROM Patient WHERE SEX = 'F' AND strftime('%Y', Birthday) = '1964' AND Admission = '+'\t----- bird -----\tthrombosis_prediction",
    "1189": "SELECT COUNT(ID) FROM Examination WHERE Thrombosis = 2 AND `ANA Pattern` = 'S' AND `aCL IgM` > (1.2 * (SELECT AVG(`aCL IgM`) FROM Examination))\t----- bird -----\tthrombosis_prediction",
    "1190": "SELECT (CAST(SUM(CASE WHEN UA <= 6.5 THEN 1 ELSE 0 END) AS FLOAT) / CAST(SUM(CASE WHEN U-PRO > 0 AND U-PRO < 30 THEN 1 ELSE 0 END) AS FLOAT)) * 100 AS percentage FROM Laboratory\t----- bird -----\tthrombosis_prediction",
    "1191": "SELECT (SUM(CASE WHEN Diagnosis = 'BEHCET' THEN 1 ELSE 0 END) / CAST(COUNT(*) AS FLOAT)) * 100 AS percentage FROM Patient WHERE SEX = 'M' AND strftime('%Y', `First Date`) = '1981'\t----- bird -----\tthrombosis_prediction",
    "1192": "SELECT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Admission = '-' AND T2.Date LIKE '1991-10-%' AND T2.T-BIL < 2.0\t----- bird -----\tthrombosis_prediction",
    "1193": "SELECT COUNT(T1.\"ID\") FROM \"Patient\" AS T1 INNER JOIN \"Examination\" AS T2 ON T1.\"ID\" = T2.\"ID\" WHERE T1.\"SEX\" = 'F' AND T2.\"ANA Pattern\" != 'P' AND T1.\"Birthday\" BETWEEN '1980-01-01' AND '1989-12-31'\t----- bird -----\tthrombosis_prediction",
    "1194": "SELECT P.SEX FROM Patient P INNER JOIN Examination E ON P.ID = E.ID INNER JOIN Laboratory L ON P.ID = L.ID WHERE E.Diagnosis = 'PSS' AND L.CRP = '2+' AND L.CRE = 1 AND L.LDH = 123\t----- bird -----\tthrombosis_prediction",
    "1195": "SELECT AVG(Laboratory.ALB) FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.SEX = 'F' AND Patient.Diagnosis LIKE '%SLE%' AND Laboratory.PLT > 400\t----- bird -----\tthrombosis_prediction",
    "1196": "SELECT Symptoms, COUNT(Symptoms) AS frequency FROM Examination WHERE Diagnosis = 'SLE' GROUP BY Symptoms ORDER BY frequency DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1197": "SELECT Description, Diagnosis FROM Patient WHERE ID = 48473\t----- bird -----\tthrombosis_prediction",
    "1198": "SELECT COUNT(*) FROM Patient WHERE SEX = 'F' AND Diagnosis = 'APS'\t----- bird -----\tthrombosis_prediction",
    "1199": "SELECT COUNT(DISTINCT ID) FROM Laboratory WHERE STRFTIME('%Y', Date) = '1997' and (TP < 6 or TP > 8.5)\t----- bird -----\tthrombosis_prediction",
    "1200": "SELECT CAST(SUM(CASE WHEN Symptoms LIKE '%thrombocytopenia%' AND Diagnosis LIKE '%SLE%' THEN 1 ELSE 0 END) AS REAL) / CAST(SUM(CASE WHEN Diagnosis LIKE '%SLE%' THEN 1 ELSE 0 END) AS REAL) * 100 AS proportion FROM Examination\t----- bird -----\tthrombosis_prediction",
    "1201": "SELECT ((COUNT(CASE WHEN SEX = 'F' THEN 1 END) * 1.0) / COUNT(*)) * 100 as Percentage FROM Patient WHERE strftime('%Y', Birthday) = '1980' AND Diagnosis = 'RA'\t----- bird -----\tthrombosis_prediction",
    "1202": "SELECT COUNT(DISTINCT P.ID) FROM Patient P INNER JOIN Laboratory L ON P.ID = L.ID WHERE P.SEX = 'M' AND L.Date >= '1995-01-01' AND L.Date <= '1997-12-31' AND P.Diagnosis = 'BEHCET' AND P.Admission = '-'\t----- bird -----\tthrombosis_prediction",
    "1203": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'F' AND T2.WBC < 3.5\t----- bird -----\tthrombosis_prediction",
    "1204": "SELECT julianday(T1.`Examination Date`) - julianday(T2.`First Date`) FROM `Examination` AS T1 INNER JOIN `Patient` AS T2 ON T1.ID = T2.ID WHERE T2.ID = 821298\t----- bird -----\tthrombosis_prediction",
    "1205": "SELECT CASE WHEN T2.SEX = 'M' AND T1.UA > 8.0 THEN 'Yes' WHEN T2.SEX = 'F' AND T1.UA > 6.5 THEN 'Yes' ELSE 'No' END AS 'Normal Range' FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.ID = 57266\t----- bird -----\tthrombosis_prediction",
    "1206": "SELECT Date FROM Laboratory WHERE ID = 48473 AND GOT >= 60\t----- bird -----\tthrombosis_prediction",
    "1207": "SELECT T1.ID, T1.SEX, T1.Birthday FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.GOT < 60 AND STRFTIME('%Y', T2.Date) = '1994'.\t----- bird -----\tthrombosis_prediction",
    "1208": "SELECT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND T2.GPT >= 60\t----- bird -----\tthrombosis_prediction",
    "1209": "SELECT P.Diagnosis FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE L.GPT > 60 ORDER BY P.Birthday ASC\t----- bird -----\tthrombosis_prediction",
    "1210": "SELECT AVG(LDH) FROM Laboratory WHERE LDH < 500\t----- bird -----\tthrombosis_prediction",
    "1211": "SELECT T1.ID, (strftime('%Y','now') - strftime('%Y',T1.Birthday)) as Age FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.LDH BETWEEN 600 AND 800\t----- bird -----\tthrombosis_prediction",
    "1212": "SELECT T2.Admission FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.ALP < 300\t----- bird -----\tthrombosis_prediction",
    "1213": "SELECT T1.ID, CASE WHEN T2.ALP < 300 THEN 'Yes' ELSE 'No' END AS ALP_Normal_Range FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Birthday = '1982-04-01'\t----- bird -----\tthrombosis_prediction",
    "1214": "SELECT T1.ID, T1.SEX, T1.Birthday FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.TP < 6.0\t----- bird -----\tthrombosis_prediction",
    "1215": "SELECT T2.TP - 8.5 AS deviation FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'F' AND T2.TP > 8.5\t----- bird -----\tthrombosis_prediction",
    "1216": "SELECT T1.ID, T1.Birthday FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND (T2.ALB <= 3.5 OR T2.ALB >= 5.5) ORDER BY T1.Birthday DESC\t----- bird -----\tthrombosis_prediction",
    "1217": "SELECT P.ID, (L.ALB BETWEEN 3.5 AND 5.5) as is_normal FROM Patient P INNER JOIN Laboratory L ON P.ID = L.ID WHERE strftime('%Y', P.Birthday) = '1982'\t----- bird -----\tthrombosis_prediction",
    "1218": "SELECT CAST(SUM(CASE WHEN T1.UA > 6.5 AND T2.SEX = 'F' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T2.SEX = 'F'\t----- bird -----\tthrombosis_prediction",
    "1219": "SELECT AVG(T1.UA) FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE (T1.Date, T1.ID) IN (SELECT ID, MAX(Date) as LatestDate FROM Laboratory GROUP BY ID) AND ((T1.UA < 8.0 AND T2.SEX = 'M') OR (T1.UA < 6.5 AND T2.SEX = 'F'))\t----- bird -----\tthrombosis_prediction",
    "1220": "SELECT T1.ID, T1.SEX, T1.Birthday FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.UN = 29\t----- bird -----\tthrombosis_prediction",
    "1221": "SELECT T1.ID, T1.SEX, T1.Birthday FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Diagnosis = 'RA' AND T2.UN < 30\t----- bird -----\tthrombosis_prediction",
    "1222": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND T2.CRE >= 1.5\t----- bird -----\tthrombosis_prediction",
    "1223": "SELECT (SUM(CASE WHEN T1.SEX = 'M' THEN 1 ELSE 0 END) > SUM(CASE WHEN T1.SEX = 'F' THEN 1 ELSE 0 END)) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.CRE >= 1.5\t----- bird -----\tthrombosis_prediction",
    "1224": "SELECT T1.ID, T1.SEX, T1.Birthday FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.T-BIL = ( SELECT MAX(T-BIL) FROM Laboratory )\t----- bird -----\tthrombosis_prediction",
    "1225": "SELECT T1.SEX, COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.'T-BIL' >= 2.0 GROUP BY T1.SEX\t----- bird -----\tthrombosis_prediction",
    "1226": "SELECT T1.ID, T1.Birthday, T2.T-CHO FROM Patient AS T1 INNER JOIN (SELECT ID, MAX(T-CHO) as T-CHO FROM Laboratory GROUP BY ID) AS T2 ON T1.ID = T2.ID ORDER BY T1.Birthday ASC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1227": "SELECT AVG(STRFTIME('%Y', 'now') - STRFTIME('%Y', Patient.Birthday)) FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.SEX = 'M' AND Laboratory.T-CHO >= 250\t----- bird -----\tthrombosis_prediction",
    "1228": "SELECT T1.ID, T1.Diagnosis FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.TG > 300\t----- bird -----\tthrombosis_prediction",
    "1229": "SELECT COUNT(*) FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.TG >= 200 AND (CAST(strftime('%Y', 'now') AS INTEGER) - CAST(strftime('%Y', T2.Birthday) AS INTEGER)) > 50\t----- bird -----\tthrombosis_prediction",
    "1230": "SELECT DISTINCT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Admission = '-' AND T2.CPK < 250\t----- bird -----\tthrombosis_prediction",
    "1231": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND T2.CPK > 250 AND STRFTIME('%Y', T1.Birthday) BETWEEN '1936' AND '1956'\t----- bird -----\tthrombosis_prediction",
    "1232": "SELECT P.ID, P.SEX, (strftime('%Y','now') - strftime('%Y',P.Birthday)) AS age FROM Patient P INNER JOIN Laboratory L ON P.ID = L.ID WHERE L.GLU >= 180 AND L.`T-CHO` < 250\t----- bird -----\tthrombosis_prediction",
    "1233": "SELECT P.ID, L.GLU FROM Patient P INNER JOIN Laboratory L ON P.ID = L.ID WHERE L.GLU < 180 AND strftime('%Y', P.Description) >= 1991\t----- bird -----\tthrombosis_prediction",
    "1234": "SELECT P.ID, P.SEX, P.Birthday FROM Patient P INNER JOIN Laboratory L ON P.ID = L.ID WHERE L.WBC <= 3.5 OR L.WBC >= 9.0 ORDER BY P.Birthday ASC\t----- bird -----\tthrombosis_prediction",
    "1235": "SELECT P.ID, P.Diagnosis, (strftime('%Y', 'now') - strftime('%Y', P.Birthday)) as Age FROM Patient P INNER JOIN Laboratory L ON P.ID = L.ID WHERE L.RBC < 3.5\t----- bird -----\tthrombosis_prediction",
    "1236": "SELECT P.ID, (strftime('%Y', 'now') - strftime('%Y', P.Birthday)) as Age, P.SEX, P.Admission, L.RBC FROM Patient P INNER JOIN Laboratory L ON P.ID = L.ID WHERE P.SEX = 'F' AND (strftime('%Y', 'now') - strftime('%Y', P.Birthday)) >= 50 AND (L.RBC <= 3.5 OR L.RBC >= 6.0)\t----- bird -----\tthrombosis_prediction",
    "1237": "SELECT T1.ID, T1.SEX FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Admission = '-' AND T2.HGB < 10\t----- bird -----\tthrombosis_prediction",
    "1238": "SELECT ID, SEX FROM Patient WHERE Diagnosis = 'SLE' AND Birthday = (SELECT MIN(Birthday) FROM Patient WHERE ID IN (SELECT ID FROM Laboratory WHERE HGB > 10 AND HGB < 17) AND ID = Patient.ID)\t----- bird -----\tthrombosis_prediction",
    "1239": "SELECT T1.ID, (CAST(strftime('%Y', 'now') as INTEGER) - CAST(strftime('%Y', T1.Birthday) as INTEGER)) as age FROM Patient AS T1 INNER JOIN (SELECT ID FROM Laboratory WHERE HCT >= 52 GROUP BY ID HAVING COUNT(ID) >= 2) AS T2 ON T1.ID = T2.ID\t----- bird -----\tthrombosis_prediction",
    "1240": "SELECT AVG(HCT) FROM Laboratory WHERE Date LIKE '1991%' AND HCT < 29\t----- bird -----\tthrombosis_prediction",
    "1241": "SELECT COUNT(ID) AS lower_than_normal, (SELECT COUNT(ID) FROM Laboratory WHERE PLT > 400) AS higher_than_normal FROM Laboratory WHERE PLT < 100\t----- bird -----\tthrombosis_prediction",
    "1242": "SELECT Laboratory.ID FROM Laboratory JOIN Patient ON Laboratory.ID = Patient.ID WHERE strftime('%Y', Laboratory.Date) = '1984' AND (strftime('%Y', 'now') - strftime('%Y', Patient.Birthday)) < 50 AND Laboratory.PLT BETWEEN 100 AND 400\t----- bird -----\tthrombosis_prediction",
    "1243": "SELECT (CAST(SUM(CASE WHEN T1.SEX = 'F' AND T2.PT >= 14 THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN T2.PT >= 14 THEN 1 ELSE 0 END)) * 100 AS Percentage FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE (strftime('%Y', 'now') - strftime('%Y', T1.Birthday)) > 55\t----- bird -----\tthrombosis_prediction",
    "1244": "SELECT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE strftime('%Y', T1.`First Date`) > '1992' AND T2.PT < 14\t----- bird -----\tthrombosis_prediction",
    "1245": "SELECT * FROM table\t----- bird -----\tthrombosis_prediction",
    "1246": "SELECT COUNT(DISTINCT T1.ID) FROM Laboratory AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.APTT > 45 AND T2.Thrombosis = 3\t----- bird -----\tthrombosis_prediction",
    "1247": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND T2.WBC BETWEEN 3.5 AND 9.0 AND (T2.FG <= 150 OR T2.FG >= 450)\t----- bird -----\tthrombosis_prediction",
    "1248": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Birthday > '1980-01-01' AND (T2.FG < 150 OR T2.FG > 450)\t----- bird -----\tthrombosis_prediction",
    "1249": "SELECT T1.Diagnosis FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.`U-PRO` > 30\t----- bird -----\tthrombosis_prediction",
    "1250": "SELECT Patient.ID FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.'U-PRO' > 0 AND Laboratory.'U-PRO' < 30 AND Patient.Diagnosis = 'SLE'\t----- bird -----\tthrombosis_prediction",
    "1251": "SELECT COUNT(DISTINCT T1.ID) FROM Laboratory AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.IGG < 900 AND T2.Symptoms LIKE '%abortion%'\t----- bird -----\tthrombosis_prediction",
    "1252": "SELECT COUNT(DISTINCT T1.ID) FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.IGG BETWEEN 900 AND 2000 AND T1.Symptoms IS NOT NULL\t----- bird -----\tthrombosis_prediction",
    "1253": "SELECT T1.Diagnosis FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.ID = ( SELECT ID FROM Laboratory WHERE IGA IN (SELECT MAX(IGA) FROM Laboratory WHERE IGA BETWEEN 80 AND 500) )\t----- bird -----\tthrombosis_prediction",
    "1254": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.IGA BETWEEN 80 AND 500 AND T1.'First Date' >= '1990-01-01'\t----- bird -----\tthrombosis_prediction",
    "1255": "SELECT T2.Diagnosis, COUNT(*) AS count FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.IGM NOT BETWEEN 40 AND 400 GROUP BY T2.Diagnosis ORDER BY count DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1256": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE (Laboratory.CRP LIKE '+' OR Laboratory.CRP LIKE '-' OR Laboratory.CRP < 1.0) AND Patient.Description IS NULL\t----- bird -----\tthrombosis_prediction",
    "1257": "SELECT COUNT(DISTINCT T1.ID) FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.CRP NOT IN('+-', '-') AND T1.CRP >= 1.0 AND (strftime('%Y', 'now') - strftime('%Y', T2.Birthday)) < 18\t----- bird -----\tthrombosis_prediction",
    "1258": "SELECT COUNT(DISTINCT T1.ID) FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.RA IN('-', '+-') AND T1.KCT = '+'\t----- bird -----\tthrombosis_prediction",
    "1259": "SELECT p.Diagnosis FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE p.Birthday > '1995-01-01' AND l.RA IN('-', '+-')\t----- bird -----\tthrombosis_prediction",
    "1260": "SELECT T1.ID FROM Patient T1 INNER JOIN Laboratory T2 ON T1.ID = T2.ID WHERE T2.RF < 20 AND (strftime('%Y', 'now') - strftime('%Y', T1.Birthday)) > 60\t----- bird -----\tthrombosis_prediction",
    "1261": "SELECT COUNT(DISTINCT T1.ID) FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Thrombosis = 0 AND T2.RF < 20\t----- bird -----\tthrombosis_prediction",
    "1262": "SELECT COUNT(DISTINCT T1.ID) FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.C3 > 35 AND T1.\"ANA Pattern\" = 'P'\t----- bird -----\tthrombosis_prediction",
    "1263": "SELECT `ID` FROM Examination WHERE `aCL IgA` = ( SELECT MAX(`aCL IgA`) FROM Examination WHERE `ID` IN (SELECT `ID` FROM Laboratory WHERE `HCT` > 52 OR `HCT` < 29) )\t----- bird -----\tthrombosis_prediction",
    "1264": "SELECT COUNT(DISTINCT T1.ID) FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Thrombosis = 1 AND T2.C4 > 10\t----- bird -----\tthrombosis_prediction",
    "1265": "SELECT COUNT(DISTINCT T1.ID) FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE (T1.RNP = '-' OR T1.RNP = '+-') AND T2.Admission = '+'\t----- bird -----\tthrombosis_prediction",
    "1266": "SELECT MAX(Patient.Birthday) as Birthday FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.RNP NOT IN('-', '+-');\t----- bird -----\tthrombosis_prediction",
    "1267": "SELECT COUNT(*) FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.SM IN('-', '+-') AND T1.Thrombosis = '1'\t----- bird -----\tthrombosis_prediction",
    "1268": "SELECT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.SM NOT IN('-', '+-') ORDER BY T1.Birthday DESC LIMIT 3\t----- bird -----\tthrombosis_prediction",
    "1269": "SELECT E.ID FROM Examination E INNER JOIN Laboratory L ON E.ID = L.ID WHERE E.\"Examination Date\" >= '1997-01-01' AND L.SC170 IN('-', '+-')\t----- bird -----\tthrombosis_prediction",
    "1270": "SELECT COUNT(DISTINCT T3.ID) FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID INNER JOIN Laboratory AS T3 ON T1.ID = T3.ID WHERE T3.SC170 IN('-', '+-') AND T2.SEX = 'M' AND T1.Symptoms = 'vertigo'\t----- bird -----\tthrombosis_prediction",
    "1271": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE (Laboratory.SSA = '-' OR Laboratory.SSA = '+-') AND Patient.'First Date' < '1990-01-01'\t----- bird -----\tthrombosis_prediction",
    "1272": "SELECT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.SSA NOT IN('-', '+-') ORDER BY T1.`First Date` ASC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1273": "SELECT COUNT(DISTINCT ID) FROM Examination WHERE Diagnosis = 'SLE' AND anti_SSB IN('-', '+-')But as it stands, we cannot answer the question with the given schema.\t----- bird -----\tthrombosis_prediction",
    "1274": "SELECT COUNT(DISTINCT T1.ID) FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.SSB IN('-', '+-') AND T1.Symptoms IS NOT NULL\t----- bird -----\tthrombosis_prediction",
    "1275": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.CENTROMEA IN ('-', '+-') AND Laboratory.SSB IN ('-', '+-') AND Patient.SEX = 'M'\t----- bird -----\tthrombosis_prediction",
    "1276": "SELECT P.Diagnosis FROM Laboratory AS L INNER JOIN Patient AS P ON L.ID = P.ID WHERE L.DNA >= 8\t----- bird -----\tthrombosis_prediction",
    "1277": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.DNA < 8 AND Patient.Description IS NULL\t----- bird -----\tthrombosis_prediction",
    "1278": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.\"DNA-II\" > 8 AND T1.Admission = '+'\t----- bird -----\tthrombosis_prediction",
    "1279": "SELECT (SELECT COUNT(*) FROM Laboratory T1 INNER JOIN Patient T2 ON T1.ID = T2.ID WHERE T1.GOT >= 60 AND T2.Diagnosis = 'SLE') * 1.0 / (SELECT COUNT(*) FROM Laboratory WHERE GOT >= 60) AS percentage\t----- bird -----\tthrombosis_prediction",
    "1280": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND T2.GOT < 60\t----- bird -----\tthrombosis_prediction",
    "1281": "SELECT MAX(T2.Birthday) FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.GOT >= 60\t----- bird -----\tthrombosis_prediction",
    "1282": "SELECT T1.Birthday FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.GPT < 60 ORDER BY T2.GPT DESC LIMIT 3\t----- bird -----\tthrombosis_prediction",
    "1283": "SELECT COUNT(*) FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.GPT < 60 AND T2.SEX = 'M'\t----- bird -----\tthrombosis_prediction",
    "1284": "SELECT MIN(\"First Date\") FROM Patient WHERE ID = (SELECT ID FROM Laboratory WHERE LDH = (SELECT MAX(LDH) FROM Laboratory WHERE LDH < 500))\t----- bird -----\tthrombosis_prediction",
    "1285": "SELECT MAX(Date) FROM Laboratory WHERE ID = (SELECT ID FROM Laboratory WHERE LDH >= 500 ORDER BY Date DESC LIMIT 1) Q: What is the diagnosis of the patient who has the highest level of blood glucose?Hint: highest level of blood glucose refers to MAX(GLU);Schema_links: [\"Patient.Diagnosis\", 'Laboratory.GLU', 'Patient.ID = Laboratory.ID']A: Let's think step by step. the given question can be solved by knowing the answer to the following sub-questions = [Who is the patient with the highest level of blood glucose.]The sqlite SQL query for the sub-question \"Who is the patient with the highest level of blood glucose\" is SELECT ID FROM Laboratory WHERE GLU = ( SELECT MAX(GLU) FROM Laboratory )The above query will return the ID of the patient with the highest level of blood glucose.Now, we have to find the diagnosis of this patient.So, the final sqlite SQL query answer to the question the given question is =SQL: SELECT Diagnosis FROM Patient WHERE ID = ( SELECT ID FROM Laboratory WHERE GLU = ( SELECT MAX(GLU) FROM Laboratory ) ) Q: When is the first date when the female patient who has the highest level of C-reactive protein came to the hospital?Hint: highest level of C-reactive protein refers to MAX(CRP); female patient refers to SEX = 'F';Schema_links: [\"Patient.'First Date'\", 'Laboratory.CRP', 'Patient.ID = Laboratory.ID', 'Patient.SEX', 'F']A: Let's think step by step. the given question can be solved by knowing the answer to the following sub-questions = [Who is the female patient with the highest level of C-reactive protein.]The sqlite SQL query for the sub-question \"Who is the female patient with the highest level of C-reactive protein\" is SELECT ID FROM Laboratory WHERE CRP = ( SELECT MAX(CRP) FROM Laboratory ) AND ID IN ( SELECT ID FROM Patient WHERE SEX = 'F' )The above query will return the ID of the female patient with the highest level of C-reactive protein.Now, we have to find the first date when this patient came to the hospital.So, the final sqlite SQL query answer to the question the given question is =SQL: SELECT \"First Date\" FROM Patient WHERE ID = ( SELECT ID FROM Laboratory WHERE CRP = ( SELECT MAX(CRP) FROM Laboratory ) AND ID IN ( SELECT ID FROM Patient WHERE SEX = 'F' ) )\t----- bird -----\tthrombosis_prediction",
    "1286": "SELECT COUNT(DISTINCT T1.ID) FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.ALP >= 300 AND T2.Admission = '+'\t----- bird -----\tthrombosis_prediction",
    "1287": "SELECT COUNT(DISTINCT T1.ID) FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T2.Admission = '-' AND T1.ALP < 300\t----- bird -----\tthrombosis_prediction",
    "1288": "SELECT T1.Diagnosis FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.TP < 6.0\t----- bird -----\tthrombosis_prediction",
    "1289": "SELECT COUNT(*) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Diagnosis = 'SJS' AND T2.TP > 6.0 AND T2.TP < 8.5\t----- bird -----\tthrombosis_prediction",
    "1290": "SELECT Date FROM Laboratory WHERE ALB > 3.5 AND ALB < 5.5 ORDER BY ALB DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1291": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND T2.ALB > 3.5 AND T2.ALB < 5.5 AND T2.TP > 6.0 AND T2.TP < 8.5\t----- bird -----\tthrombosis_prediction",
    "1292": "SELECT T1.aCL IgG, T1.aCL IgM, T1.aCL IgA FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID INNER JOIN Laboratory AS T3 ON T2.ID = T3.ID WHERE T2.SEX = 'F' AND T3.UA = (SELECT MAX(UA) FROM Laboratory WHERE UA <= 6.50)\t----- bird -----\tthrombosis_prediction",
    "1293": "SELECT MAX(T1.ANA) FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.CRE < 1.5\t----- bird -----\tthrombosis_prediction",
    "1294": "SELECT T1.ID FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.CRE < 1.5 ORDER BY T1.aCL IgA DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1295": "SELECT COUNT(*) FROM Laboratory as T1 INNER JOIN Examination as T2 on T1.ID = T2.ID WHERE T1.\"T-BIL\" >= 2.0 AND T2.\"ANA Pattern\" LIKE '%P%'\t----- bird -----\tthrombosis_prediction",
    "1296": "SELECT ANA FROM Examination WHERE ID = ( SELECT ID FROM Laboratory WHERE `T-BIL` = ( SELECT MAX(`T-BIL`) FROM Laboratory WHERE `T-BIL` < 2.0 )) AND `Examination Date` = ( SELECT Date FROM Laboratory WHERE `T-BIL` = ( SELECT MAX(`T-BIL`) FROM Laboratory WHERE `T-BIL` < 2.0 ))\t----- bird -----\tthrombosis_prediction",
    "1297": "SELECT COUNT(DISTINCT T1.ID) FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.\"T-CHO\" >= 250 AND T1.KCT = '-'\t----- bird -----\tthrombosis_prediction",
    "1298": "SELECT COUNT(*) FROM Laboratory AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.\"T-CHO\" < 250 AND T2.\"ANA Pattern\" = 'P'\t----- bird -----\tthrombosis_prediction",
    "1299": "SELECT COUNT(DISTINCT T1.ID) FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.TG < 200 AND T1.Symptoms IS NOT NULL\t----- bird -----\tthrombosis_prediction",
    "1300": "SELECT P.Diagnosis FROM Patient P INNER JOIN (SELECT MAX(TG) AS maxTG, ID FROM Laboratory WHERE TG < 200) L ON P.ID = L.ID\t----- bird -----\tthrombosis_prediction",
    "1301": "SELECT T1.ID FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Thrombosis = 0 AND T2.CPK > 250\t----- bird -----\tthrombosis_prediction",
    "1302": "SELECT COUNT(*) FROM Laboratory AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.CPK < 250 AND (T2.KCT = '+' OR T2.RVVT = '+' OR T2.LAC = '+')\t----- bird -----\tthrombosis_prediction",
    "1303": "SELECT MIN(T1.Birthday) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.GLU > 180\t----- bird -----\tthrombosis_prediction",
    "1304": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID INNER JOIN Examination AS T3 ON T1.ID = T3.ID WHERE T2.GLU < 180 AND T3.Thrombosis = 0\t----- bird -----\tthrombosis_prediction",
    "1305": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Admission = '+' AND T2.WBC >= 3.5 AND T2.WBC <= 9.0\t----- bird -----\tthrombosis_prediction",
    "1306": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.Diagnosis = 'SLE' AND Laboratory.WBC BETWEEN 3.5 AND 9.0\t----- bird -----\tthrombosis_prediction",
    "1307": "SELECT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE (T2.RBC <= 3.5 OR T2.RBC >= 6.0) AND T1.Admission = '-'\t----- bird -----\tthrombosis_prediction",
    "1308": "SELECT COUNT(DISTINCT T1.ID) FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.PLT > 100 AND T2.PLT < 400 AND T1.Symptoms IS NOT NULL\t----- bird -----\tthrombosis_prediction",
    "1309": "SELECT T1.PLT FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T2.Diagnosis = 'MCTD' AND T1.PLT > 100 AND T1.PLT < 400\t----- bird -----\tthrombosis_prediction",
    "1310": "SELECT AVG(T2.PT) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND T2.PT < 14\t----- bird -----\tthrombosis_prediction",
    "1311": "SELECT COUNT(DISTINCT E.ID) FROM Examination E INNER JOIN Laboratory L ON E.ID = L.ID WHERE E.Thrombosis IN (1,2) AND L.PT < 14\t----- bird -----\tthrombosis_prediction",
    "1312": "SELECT T2.major_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.first_name = 'Angela' AND T1.last_name = 'Sanders'\t----- bird -----\tstudent_club",
    "1313": "SELECT COUNT(T1.member_id) FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.college = 'College of Engineering'\t----- bird -----\tstudent_club",
    "1314": "SELECT T1.first_name || ' ' || T1.last_name AS full_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.department = 'Art and Design Department'\t----- bird -----\tstudent_club",
    "1315": "SELECT COUNT(T1.link_to_member) FROM attendance AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.event_name = 'Women's Soccer'\t----- bird -----\tstudent_club",
    "1316": "SELECT M.phone FROM attendance A INNER JOIN event E ON A.link_to_event = E.event_id INNER JOIN member M ON A.link_to_member = M.member_id WHERE E.event_name = \"Women's Soccer\"\t----- bird -----\tstudent_club",
    "1317": "SELECT COUNT(T3.member_id) FROM attendance AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id INNER JOIN member AS T3 ON T1.link_to_member = T3.member_id WHERE T2.event_name = 'Women's Soccer' AND T3.t_shirt_size = 'Medium'\t----- bird -----\tstudent_club",
    "1318": "SELECT T2.event_name FROM attendance AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id GROUP BY T1.link_to_event ORDER BY COUNT(*) DESC LIMIT 1\t----- bird -----\tstudent_club",
    "1319": "SELECT major.college FROM member INNER JOIN major ON member.link_to_major = major.major_id WHERE member.position = 'Vice President'\t----- bird -----\tstudent_club",
    "1320": "SELECT event.event_name FROM attendance LEFT JOIN event ON attendance.link_to_event = event.event_id LEFT JOIN member ON attendance.link_to_member = member.member_id WHERE member.first_name = 'Maya' AND member.last_name = 'Mclean'\t----- bird -----\tstudent_club",
    "1321": "SELECT COUNT(T1.event_id) FROM event AS T1 INNER JOIN attendance AS T2 ON T1.event_id = T2.link_to_event INNER JOIN member AS T3 ON T2.link_to_member = T3.member_id WHERE T1.event_date LIKE '2019%' AND T3.first_name = 'Sacha' AND T3.last_name = 'Harrison'\t----- bird -----\tstudent_club",
    "1322": "SELECT COUNT(T2.event_id) FROM event AS T2 WHERE T2.event_id IN ( SELECT link_to_event FROM attendance GROUP BY link_to_event HAVING COUNT(link_to_member) > 10 ) AND T2.type = 'Meeting'\t----- bird -----\tstudent_club",
    "1323": "SELECT T2.event_name FROM attendance AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id GROUP BY T1.link_to_event HAVING COUNT(*) > 20\t----- bird -----\tstudent_club",
    "1324": "SELECT COUNT(T1.link_to_event) * 1.0 / COUNT(DISTINCT T2.event_name) FROM attendance AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.type = 'Meeting' AND strftime('%Y', T2.event_date) = '2020'\t----- bird -----\tstudent_club",
    "1325": "SELECT expense_description, MAX(cost) FROM expense\t----- bird -----\tstudent_club",
    "1326": "SELECT COUNT(T1.member_id) FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Environmental Engineering'\t----- bird -----\tstudent_club",
    "1327": "SELECT T2.first_name || ' ' || T2.last_name AS full_name FROM attendance AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id INNER JOIN event AS T3 ON T1.link_to_event = T3.event_id WHERE T3.event_name = 'Laugh Out Loud'\t----- bird -----\tstudent_club",
    "1328": "SELECT T1.last_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Law and Constitutional Studies'\t----- bird -----\tstudent_club",
    "1329": "SELECT T2.county FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T1.first_name = 'Sherri' AND T1.last_name = 'Ramsey'\t----- bird -----\tstudent_club",
    "1330": "SELECT T1.college FROM major AS T1 INNER JOIN member AS T2 ON T1.major_id = T2.link_to_major WHERE T2.first_name = 'Tyler' AND T2.last_name = 'Hewitt'\t----- bird -----\tstudent_club",
    "1331": "SELECT SUM(T1.amount) FROM income AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.position = 'Vice President'\t----- bird -----\tstudent_club",
    "1332": "SELECT T1.spent FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T1.category = 'Food' AND T2.event_name = 'September Meeting'\t----- bird -----\tstudent_club",
    "1333": "SELECT T2.city, T2.state FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T1.position = 'President'\t----- bird -----\tstudent_club",
    "1334": "SELECT T1.first_name || ' ' || T1.last_name AS full_name FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T2.state = 'Illinois'\t----- bird -----\tstudent_club",
    "1335": "SELECT SUM(T1.spent) FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T1.category = 'Advertisement' AND T2.event_name = 'September Meeting'\t----- bird -----\tstudent_club",
    "1336": "SELECT T1.department FROM major AS T1 INNER JOIN member AS T2 ON T1.major_id = T2.link_to_major WHERE T2.last_name IN ('Guidi', 'Pierce')\t----- bird -----\tstudent_club",
    "1337": "SELECT SUM(T1.amount) FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.event_name = 'October Speaker'\t----- bird -----\tstudent_club",
    "1338": "SELECT e.approved FROM event AS ev INNER JOIN expense AS e ON ev.event_id = e.link_to_budget WHERE ev.event_name = 'October Meeting' AND ev.event_date LIKE '2019-10-08%'\t----- bird -----\tstudent_club",
    "1339": "SELECT AVG(T1.cost) FROM expense AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE (STRFTIME('%m', T1.expense_date) = '09' OR STRFTIME('%m', T1.expense_date) = '10') AND T2.first_name = 'Elijah' AND T2.last_name = 'Allen'\t----- bird -----\tstudent_club",
    "1340": "SELECT (SELECT SUM(budget.spent) FROM budget INNER JOIN event ON budget.link_to_event = event.event_id WHERE strftime('%Y', event.event_date) = '2020') - (SELECT SUM(budget.spent) FROM budget INNER JOIN event ON budget.link_to_event = event.event_id WHERE strftime('%Y', event.event_date) = '2019')\t----- bird -----\tstudent_club",
    "1341": "SELECT location FROM event WHERE event_name = \"Spring Budget Review\"\t----- bird -----\tstudent_club",
    "1342": "SELECT cost FROM expense WHERE expense_description LIKE '%Posters%' AND expense_date = '2019-09-04'\t----- bird -----\tstudent_club",
    "1343": "SELECT remaining FROM budget WHERE category = 'Food' AND amount = ( SELECT MAX(amount) FROM budget WHERE category = 'Food' )\t----- bird -----\tstudent_club",
    "1344": "SELECT notes FROM income WHERE source = 'Fundraising' AND date_received = '2019-09-14'\t----- bird -----\tstudent_club",
    "1345": "SELECT COUNT(major_id) FROM major WHERE college = 'College of Humanities and Social Sciences'\t----- bird -----\tstudent_club",
    "1346": "SELECT phone FROM member WHERE first_name = 'Carlo' AND last_name = 'Jacobs'\t----- bird -----\tstudent_club",
    "1347": "SELECT T2.county FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T1.first_name = 'Adela' AND T1.last_name = 'O\\'Gallagher'\t----- bird -----\tstudent_club",
    "1348": "SELECT COUNT(T1.budget_id) FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.event_name = 'November Meeting' AND T1.remaining < 0\t----- bird -----\tstudent_club",
    "1349": "SELECT SUM(T1.amount) FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.event_name = 'September Speaker'\t----- bird -----\tstudent_club",
    "1350": "SELECT T3.event_status FROM expense AS T1 INNER JOIN budget AS T2 ON T1.link_to_budget = T2.budget_id INNER JOIN event AS T3 ON T2.link_to_event = T3.event_id WHERE T1.expense_description = 'Post Cards, Posters' AND T1.expense_date = '2019-8-20'\t----- bird -----\tstudent_club",
    "1351": "SELECT T1.major_name FROM major AS T1 INNER JOIN member AS T2 ON T1.major_id = T2.link_to_major WHERE T2.first_name = 'Brent' AND T2.last_name = 'Thomason'\t----- bird -----\tstudent_club",
    "1352": "SELECT COUNT(T1.member_id) FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Human Development and Family Studies' AND T1.t_shirt_size = 'Large'\t----- bird -----\tstudent_club",
    "1353": "SELECT T2.type FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T1.first_name = 'Christof' AND T1.last_name = 'Nielson'\t----- bird -----\tstudent_club",
    "1354": "SELECT T1.major_name FROM major AS T1 INNER JOIN member AS T2 ON T1.major_id = T2.link_to_major WHERE T2.position = 'Vice President'\t----- bird -----\tstudent_club",
    "1355": "SELECT T2.state FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T1.first_name = 'Sacha' AND T1.last_name = 'Harrison'\t----- bird -----\tstudent_club",
    "1356": "SELECT T2.department FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.position = 'President'\t----- bird -----\tstudent_club",
    "1357": "SELECT T1.date_received FROM income AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.first_name = 'Connor' AND T2.last_name = 'Hilton' AND T1.source = 'Dues'\t----- bird -----\tstudent_club",
    "1358": "SELECT first_name, last_name FROM member WHERE member_id = ( SELECT link_to_member FROM income WHERE source = 'Dues' ORDER BY date_received ASC LIMIT 1 )\t----- bird -----\tstudent_club",
    "1359": "SELECT (SELECT SUM(T1.amount) FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T1.category = 'Advertisement' AND T2.event_name = 'Yearly Kickoff') / (SELECT SUM(T1.amount) FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T1.category = 'Advertisement' AND T2.event_name = 'October Meeting')\t----- bird -----\tstudent_club",
    "1360": "SELECT (SUM(T1.amount)* 100.0 / (SELECT SUM(amount) FROM budget WHERE link_to_event IN (SELECT event_id FROM event WHERE event_name = 'November Speaker'))) FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T1.category = 'Parking' AND T2.event_name = 'November Speaker'\t----- bird -----\tstudent_club",
    "1361": "SELECT SUM(cost) FROM expense WHERE expense_description = 'Pizza'\t----- bird -----\tstudent_club",
    "1362": "SELECT COUNT(DISTINCT city) FROM zip_code WHERE county = 'Orange County' AND state = 'Virginia'\t----- bird -----\tstudent_club",
    "1363": "SELECT department FROM major WHERE college = 'College of Humanities and Social Sciences'\t----- bird -----\tstudent_club",
    "1364": "SELECT T2.city, T2.county, T2.state FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T1.first_name = 'Amy' AND T1.last_name = 'Firth'\t----- bird -----\tstudent_club",
    "1365": "SELECT T1.expense_description FROM expense AS T1 INNER JOIN budget AS T2 ON T1.link_to_budget = T2.budget_id WHERE T2.remaining = ( SELECT MIN(remaining) FROM budget )\t----- bird -----\tstudent_club",
    "1366": "SELECT T3.first_name, T3.last_name FROM attendance AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id INNER JOIN member AS T3 ON T1.link_to_member = T3.member_id WHERE T2.event_name = 'October Meeting'\t----- bird -----\tstudent_club",
    "1367": "SELECT T1.college, COUNT(T2.member_id) as member_count FROM major AS T1 INNER JOIN member AS T2 ON T1.major_id = T2.link_to_major GROUP BY T1.college ORDER BY member_count DESC LIMIT 1\t----- bird -----\tstudent_club",
    "1368": "SELECT T2.major_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.phone = '809-555-3360'\t----- bird -----\tstudent_club",
    "1369": "SELECT T2.event_name FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id ORDER BY T1.amount DESC LIMIT 1\t----- bird -----\tstudent_club",
    "1370": "SELECT T1.expense_description FROM expense AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.position = 'Vice President'\t----- bird -----\tstudent_club",
    "1371": "SELECT COUNT(T1.link_to_member) FROM attendance AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.event_name = 'Women's Soccer'\t----- bird -----\tstudent_club",
    "1372": "SELECT T1.date_received FROM income AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.first_name = 'Casey' AND T2.last_name = 'Mason'\t----- bird -----\tstudent_club",
    "1373": "SELECT COUNT(T1.member_id) FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T2.state = 'Maryland'\t----- bird -----\tstudent_club",
    "1374": "SELECT COUNT(T1.link_to_event) FROM attendance AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.phone = \"954-555-6240\"\t----- bird -----\tstudent_club",
    "1375": "SELECT T1.first_name, T1.last_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.department = \"School of Applied Sciences, Technology and Education\"\t----- bird -----\tstudent_club",
    "1376": "SELECT e.event_name, b.spent, b.amount, b.spent/b.amount AS spend_to_budget_ratio FROM event e JOIN budget b ON e.event_id = b.link_to_event WHERE e.status = 'Closed' ORDER BY spend_to_budget_ratio DESC LIMIT 1\t----- bird -----\tstudent_club",
    "1377": "SELECT COUNT(*) FROM member WHERE position = 'President'\t----- bird -----\tstudent_club",
    "1378": "SELECT MAX(spent) FROM budget\t----- bird -----\tstudent_club",
    "1379": "SELECT COUNT(*) FROM event WHERE type = 'Meeting' AND strftime('%Y', event_date) = '2020'\t----- bird -----\tstudent_club",
    "1380": "SELECT SUM(spent) FROM budget WHERE category = 'Food'\t----- bird -----\tstudent_club",
    "1381": "SELECT m.first_name || ' ' || m.last_name AS full_name FROM attendance a JOIN member m ON a.link_to_member = m.member_id GROUP BY m.member_id HAVING COUNT(a.link_to_event) > 7\t----- bird -----\tstudent_club",
    "1382": "SELECT M.first_name, M.last_name FROM member as M INNER JOIN major as MJ ON M.link_to_major = MJ.major_id INNER JOIN attendance as A ON M.member_id = A.link_to_member INNER JOIN event as E ON A.link_to_event = E.event_id WHERE MJ.major_name = 'Interior Design' and E.event_name = 'Community Theater'\t----- bird -----\tstudent_club",
    "1383": "SELECT T1.first_name || ' ' || T1.last_name AS full_name FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T2.city = 'Georgetown' AND T2.state = 'South Carolina'\t----- bird -----\tstudent_club",
    "1384": "SELECT COUNT(T1.amount) FROM income AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.first_name = 'Grant' AND T2.last_name = 'Gilmour'\t----- bird -----\tstudent_club",
    "1385": "SELECT T2.first_name, T2.last_name FROM income AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T1.amount > 40\t----- bird -----\tstudent_club",
    "1386": "SELECT SUM(T2.cost) FROM event AS T1 INNER JOIN expense AS T2 ON T1.event_id = T2.link_to_budget WHERE T1.event_name = 'Yearly Kickoff'\t----- bird -----\tstudent_club",
    "1387": "SELECT member.first_name, member.last_name FROM member INNER JOIN budget ON member.member_id = budget.budget_id INNER JOIN event ON budget.link_to_event = event.event_id WHERE event.event_name = 'Yearly Kickoff'\t----- bird -----\tstudent_club",
    "1388": "SELECT T1.first_name, T1.last_name, T2.source FROM member AS T1 INNER JOIN income AS T2 ON T1.member_id = T2.link_to_member WHERE T2.amount = ( SELECT MAX(amount) FROM income )\t----- bird -----\tstudent_club",
    "1389": "SELECT T3.event_name FROM expense AS T1 INNER JOIN budget AS T2 ON T1.link_to_budget = T2.budget_id INNER JOIN event AS T3 ON T2.link_to_event = T3.event_id ORDER BY T1.cost ASC LIMIT 1\t----- bird -----\tstudent_club",
    "1390": "SELECT (SELECT SUM(T1.cost) FROM expense AS T1 INNER JOIN budget AS T2 ON T1.link_to_budget = T2.budget_id INNER JOIN event AS T3 ON T2.link_to_event = T3.event_id WHERE T3.event_name = 'Yearly Kickoff') / (SELECT SUM(T1.cost) FROM expense AS T1) * 100\t----- bird -----\tstudent_club",
    "1391": "SELECT (SELECT COUNT(*) FROM member AS M1 JOIN major AS MA1 ON M1.link_to_major = MA1.major_id WHERE MA1.major_name = 'Finance') / (SELECT COUNT(*) FROM member AS M2 JOIN major AS MA2 ON M2.link_to_major = MA2.major_id WHERE MA2.major_name = 'Physics') AS ratio\t----- bird -----\tstudent_club",
    "1392": "SELECT source, SUM(amount) as total_amount FROM income WHERE date_received BETWEEN '2019-09-01' and '2019-09-30' GROUP BY source ORDER BY total_amount DESC LIMIT 1\t----- bird -----\tstudent_club",
    "1393": "SELECT first_name || ' ' || last_name AS full_name, email FROM member WHERE position = 'Secretary'\t----- bird -----\tstudent_club",
    "1394": "SELECT COUNT(T1.member_id) FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Physics Teaching'\t----- bird -----\tstudent_club",
    "1395": "SELECT COUNT(DISTINCT T1.link_to_member) FROM attendance AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.event_name = 'Community Theater' AND strftime('%Y', T2.event_date) = '2019'\t----- bird -----\tstudent_club",
    "1396": "SELECT COUNT(T1.link_to_event), T3.major_name FROM attendance AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id INNER JOIN major AS T3 ON T2.link_to_major = T3.major_id WHERE T2.first_name = 'Luisa' AND T2.last_name = 'Guidi'\t----- bird -----\tstudent_club",
    "1397": "SELECT AVG(spent) FROM budget WHERE category = 'Food' AND event_status = 'Closed'\t----- bird -----\tstudent_club",
    "1398": "SELECT T2.event_name FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T1.category = 'Advertisement' ORDER BY T1.spent DESC LIMIT 1\t----- bird -----\tstudent_club",
    "1399": "SELECT COUNT(*) > 0 AS attended FROM attendance AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id INNER JOIN event AS T3 ON T1.link_to_event = T3.event_id WHERE T2.first_name = 'Maya' AND T2.last_name = 'Mclean' AND T3.event_name = 'Women's Soccer'\t----- bird -----\tstudent_club",
    "1400": "SELECT (SUM(CASE WHEN type = 'Community Service' THEN 1 ELSE 0 END) * 100.0 / COUNT(event_id)) as percentage FROM event WHERE event_date BETWEEN '2019-01-01' AND '2019-12-31'\t----- bird -----\tstudent_club",
    "1401": "SELECT T1.cost FROM expense AS T1 INNER JOIN budget AS T2 ON T1.link_to_budget = T2.budget_id INNER JOIN event AS T3 ON T2.link_to_event = T3.event_id WHERE T1.expense_description = 'Posters' AND T3.event_name = 'September Speaker'\t----- bird -----\tstudent_club",
    "1402": "SELECT t_shirt_size FROM member GROUP BY t_shirt_size ORDER BY COUNT(*) DESC LIMIT 1\t----- bird -----\tstudent_club",
    "1403": "SELECT T2.event_name FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.status = 'Closed' AND T1.remaining < 0 ORDER BY T1.remaining ASC LIMIT 1\t----- bird -----\tstudent_club",
    "1404": "SELECT T1.expense_description, SUM(T1.cost) FROM expense AS T1 INNER JOIN event AS T2 ON T1.link_to_budget = T2.event_id WHERE T2.event_name = 'October Meeting' GROUP BY T1.expense_description\t----- bird -----\tstudent_club",
    "1405": "SELECT T1.amount, T1.category FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.event_name = 'April Speaker' ORDER BY T1.amount ASC\t----- bird -----\tstudent_club",
    "1406": "SELECT category, MAX(amount) FROM budget WHERE category = 'Food'\t----- bird -----\tstudent_club",
    "1407": "SELECT budget_id, category, amount FROM budget WHERE category = 'Advertisement' ORDER BY amount DESC LIMIT 3\t----- bird -----\tstudent_club",
    "1408": "SELECT SUM(cost) FROM expense WHERE expense_description = 'Parking'\t----- bird -----\tstudent_club",
    "1409": "SELECT SUM(cost) FROM expense WHERE expense_date = '2019-08-20'\t----- bird -----\tstudent_club",
    "1410": "SELECT T2.first_name, T2.last_name, SUM(T1.cost) AS total_cost FROM expense AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.member_id = 'rec4BLdZHS2Blfp4v'\t----- bird -----\tstudent_club",
    "1411": "SELECT T1.expense_description FROM expense AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.first_name = 'Sacha' AND T2.last_name = 'Harrison'\t----- bird -----\tstudent_club",
    "1412": "SELECT expense_description FROM expense INNER JOIN member ON expense.link_to_member = member.member_id WHERE member.t_shirt_size = 'X-Large'\t----- bird -----\tstudent_club",
    "1413": "SELECT T2.zip FROM expense AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T1.cost < 50\t----- bird -----\tstudent_club",
    "1414": "SELECT T2.major_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.first_name = 'Phillip' AND T1.last_name = 'Cullen'\t----- bird -----\tstudent_club",
    "1415": "SELECT member.position FROM member INNER JOIN major ON member.link_to_major = major.major_id WHERE major.major_name = 'Business'\t----- bird -----\tstudent_club",
    "1416": "SELECT COUNT(T1.member_id) FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Business' AND T1.t_shirt_size = 'Medium'\t----- bird -----\tstudent_club",
    "1417": "SELECT T2.type FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T1.remaining > 30\t----- bird -----\tstudent_club",
    "1418": "SELECT type FROM event WHERE location = 'MU 215'\t----- bird -----\tstudent_club",
    "1419": "SELECT event_name, type FROM event WHERE event_date = '2020-03-24T12:00:00'\t----- bird -----\tstudent_club",
    "1420": "SELECT T1.major_name FROM major AS T1 INNER JOIN member AS T2 ON T1.major_id = T2.link_to_major WHERE T2.position = 'Vice President'\t----- bird -----\tstudent_club",
    "1421": "SELECT (CAST(SUM(CASE WHEN T1.position = 'Member' AND T2.major_name = 'Mathematics' THEN 1 ELSE 0 END) AS REAL) / COUNT(T1.member_id)) * 100 FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id\t----- bird -----\tstudent_club",
    "1422": "SELECT DISTINCT type FROM event WHERE location = 'MU 215'\t----- bird -----\tstudent_club",
    "1423": "SELECT COUNT(*) FROM income WHERE amount = 50\t----- bird -----\tstudent_club",
    "1424": "SELECT COUNT(*) FROM member WHERE position = 'Member' AND t_shirt_size = 'X-Large'\t----- bird -----\tstudent_club",
    "1425": "SELECT COUNT(major_id) FROM major WHERE department = 'School of Applied Sciences, Technology and Education' AND college = 'College of Agriculture and Applied Sciences'\t----- bird -----\tstudent_club",
    "1426": "SELECT T2.last_name, T1.department, T1.college FROM major AS T1 INNER JOIN member AS T2 ON T1.major_id = T2.link_to_major WHERE T1.major_name = 'Environmental Engineering'\t----- bird -----\tstudent_club",
    "1427": "SELECT T1.category FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.location = 'MU 215' AND T2.type = 'Guest Speaker' AND T1.spent = 0\t----- bird -----\tstudent_club",
    "1428": "SELECT T3.city, T3.state FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id INNER JOIN zip_code AS T3 ON T1.zip = T3.zip_code WHERE T2.department = 'Electrical and Computer Engineering Department' AND T1.position = 'Member'\t----- bird -----\tstudent_club",
    "1429": "SELECT event.event_name FROM attendance JOIN event ON attendance.link_to_event = event.event_id JOIN member ON attendance.link_to_member = member.member_id WHERE event.type = 'Social' AND member.position = 'Vice President' AND event.location = '900 E. Washington St.'\t----- bird -----\tstudent_club",
    "1430": "SELECT T2.last_name, T2.position FROM expense AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T1.expense_description = 'Pizza' AND T1.expense_date = '2019-09-10'\t----- bird -----\tstudent_club",
    "1431": "SELECT T1.last_name FROM member AS T1 INNER JOIN attendance AS T2 ON T1.member_id = T2.link_to_member INNER JOIN event AS T3 ON T2.link_to_event = T3.event_id WHERE T3.event_name = 'Women's Soccer' AND T1.position = 'Member'\t----- bird -----\tstudent_club",
    "1432": "SELECT (CAST(SUM(CASE WHEN T1.amount = 50 THEN 1 ELSE 0 END) AS FLOAT) / COUNT(T2.member_id)) * 100 FROM income AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.t_shirt_size = 'Medium' AND T2.position = 'Member'\t----- bird -----\tstudent_club",
    "1433": "SELECT county FROM zip_code WHERE type = 'PO Box'\t----- bird -----\tstudent_club",
    "1434": "SELECT zip_code FROM zip_code WHERE type = 'PO Box' AND county = 'San Juan Municipio' AND state = 'Puerto Rico'\t----- bird -----\tstudent_club",
    "1435": "SELECT event_name FROM event WHERE type = 'Game' AND status = 'Closed' AND event_date BETWEEN '2019-03-15' AND '2020-03-20'\t----- bird -----\tstudent_club",
    "1436": "SELECT T1.event_url FROM events AS T1 INNER JOIN tickets AS T2 ON T1.event_id = T2.event_id INNER JOIN members AS T3 ON T2.member_id = T3.member_id WHERE T2.cost > 50\t----- bird -----\tstudent_club",
    "1437": "SELECT T1.member_id, T3.link_to_event FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member INNER JOIN attendance AS T3 ON T1.member_id = T3.link_to_member WHERE T2.approved = 'true' AND T2.expense_date BETWEEN '2019-01-10' AND '2019-11-19'\t----- bird -----\tstudent_club",
    "1438": "SELECT T2.college FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.first_name = 'Katy' AND T1.link_to_major = 'rec1N0upiVLy5esTO'\t----- bird -----\tstudent_club",
    "1439": "SELECT M.phone FROM member AS M INNER JOIN major AS MJ ON M.link_to_major = MJ.major_id WHERE MJ.major_name = 'Business' AND MJ.college = 'College of Agriculture and Applied Sciences'\t----- bird -----\tstudent_club",
    "1440": "SELECT T2.email FROM income AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T1.date_received BETWEEN '2019-09-10' and '2019-11-19' AND T1.amount > 20\t----- bird -----\tstudent_club",
    "1441": "SELECT COUNT(*) FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'education' AND T2.college = 'College of Education & Human Services'\t----- bird -----\tstudent_club",
    "1442": "SELECT (CAST(SUM(CASE WHEN T1.remaining < 0 THEN 1 ELSE 0 END) AS REAL) / COUNT(T2.event_id)) * 100 FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id\t----- bird -----\tstudent_club",
    "1443": "SELECT event_id, location, status FROM event WHERE event_date BETWEEN '2019-11-01' AND '2020-03-31'\t----- bird -----\tstudent_club",
    "1444": "SELECT expense_description FROM expense GROUP BY expense_description HAVING AVG(cost) > 50\t----- bird -----\tstudent_club",
    "1445": "SELECT first_name || ' ' || last_name AS full_name FROM member WHERE t_shirt_size = 'X-Large'\t----- bird -----\tstudent_club",
    "1446": "SELECT (CAST(SUM(CASE WHEN type = 'PO Box' THEN 1 ELSE 0 END) AS FLOAT) / CAST(COUNT(zip_code) AS FLOAT)) * 100 as percentage FROM zip_code\t----- bird -----\tstudent_club",
    "1447": "SELECT T2.event_name, T2.location FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T1.remaining > 0\t----- bird -----\tstudent_club",
    "1448": "SELECT T1.event_name, T1.event_date FROM event AS T1 INNER JOIN expense AS T2 ON T1.event_id = T2.link_to_member WHERE T2.expense_description = 'Pizza' AND T2.cost > 50 AND T2.cost < 100\t----- bird -----\tstudent_club",
    "1449": "SELECT M.first_name, M.last_name, MJ.major_name FROM member AS M INNER JOIN expense AS E ON M.member_id = E.link_to_member INNER JOIN major AS MJ ON M.link_to_major = MJ.major_id WHERE E.cost > 100\t----- bird -----\tstudent_club",
    "1450": "SELECT T1.city, T1.county FROM zip_code AS T1 INNER JOIN event AS T2 ON T1.city = T2.location WHERE T2.event_id IN ( SELECT event_id FROM income GROUP BY event_id HAVING COUNT(amount) > 40 )\t----- bird -----\tstudent_club",
    "1451": "SELECT link_to_member, SUM(cost) as total_cost FROM expense WHERE link_to_member IN (SELECT link_to_member FROM expense INNER JOIN budget ON expense.link_to_budget = budget.budget_id GROUP BY link_to_member HAVING COUNT(DISTINCT link_to_event) > 1) GROUP BY link_to_member ORDER BY total_cost DESC LIMIT 1\t----- bird -----\tstudent_club",
    "1452": "SELECT AVG(T1.cost) FROM expense AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.position != 'Member'\t----- bird -----\tstudent_club",
    "1453": "SELECT T2.event_name FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T1.category = 'Parking' AND T1.spent < ( SELECT AVG(spent) FROM budget WHERE category = 'Parking' )\t----- bird -----\tstudent_club",
    "1454": "SELECT SUM(T2.cost) / COUNT(T1.event_id) * 100 FROM event AS T1 INNER JOIN expense AS T2 ON T1.event_id = T2.link_to_budget WHERE T1.type = 'Game'\t----- bird -----\tstudent_club",
    "1455": "SELECT link_to_budget, MAX(cost) FROM expense WHERE expense_description = 'Water, chips, cookies' ORDER BY cost DESC LIMIT 1\t----- bird -----\tstudent_club",
    "1456": "SELECT T1.first_name || ' ' || T1.last_name as full_name, SUM(T2.cost) as total_cost FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member GROUP BY T1.member_id ORDER BY total_cost DESC LIMIT 5\t----- bird -----\tstudent_club",
    "1457": "SELECT T1.first_name, T1.last_name, T1.phone FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member WHERE T2.cost > ( SELECT AVG(cost) FROM expense )\t----- bird -----\tstudent_club",
    "1458": "SELECT (SUM(CASE WHEN T2.state = 'Maine' THEN 1 ELSE 0 END) / CAST(COUNT(T1.position) AS FLOAT)) - (SUM(CASE WHEN T2.state = 'Vermont' THEN 1 ELSE 0 END) / CAST(COUNT(T1.position) AS FLOAT)) FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T1.position = 'Member'\t----- bird -----\tstudent_club",
    "1459": "SELECT T2.major_name, T2.department FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.first_name = 'Garrett' AND T1.last_name = 'Gerke'\t----- bird -----\tstudent_club",
    "1460": "SELECT T2.first_name || ' ' || T2.last_name AS full_name, T1.cost FROM expense AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T1.expense_description = 'Water, Veggie tray, supplies'\t----- bird -----\tstudent_club",
    "1461": "SELECT T1.last_name, T1.phone FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Elementary Education'\t----- bird -----\tstudent_club",
    "1462": "SELECT T1.category, T1.amount FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.event_name = 'January Speaker'\t----- bird -----\tstudent_club",
    "1463": "SELECT T1.event_name FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T2.category = 'Food'\t----- bird -----\tstudent_club",
    "1464": "SELECT T2.first_name, T2.last_name, T1.amount FROM income AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T1.date_received = '9/9/2019'\t----- bird -----\tstudent_club",
    "1465": "SELECT T1.category FROM budget AS T1 INNER JOIN expense AS T2 ON T1.budget_id = T2.link_to_budget WHERE T2.expense_description LIKE '%Posters%'\t----- bird -----\tstudent_club",
    "1466": "SELECT T1.first_name || ' ' || T1.last_name AS full_name, T2.college FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.position = 'Secretary'\t----- bird -----\tstudent_club",
    "1467": "SELECT SUM(T1.spent), T2.event_name FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T1.category = 'Speaker Gifts' GROUP BY T2.event_name\t----- bird -----\tstudent_club",
    "1468": "SELECT T2.city FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T1.first_name = 'Garrett' AND T1.last_name = 'Girke'\t----- bird -----\tstudent_club",
    "1469": "SELECT T1.first_name || ' ' || T1.last_name AS full_name, T1.position FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T2.city = 'Lincolnton' AND T2.state = 'North Carolina' AND T2.zip_code = 28092\t----- bird -----\tstudent_club",
    "1470": "```SELECT COUNT(DISTINCT gasstations.GasStationID) FROM gasstations JOIN transactions_1k ON gasstations.GasStationID = transactions_1k.GasStationID JOIN products ON transactions_1k.ProductID = products.ProductID WHERE gasstations.Country = 'CZE' AND products.Description = 'Premium'```\t----- bird -----\tdebit_card_specializing",
    "1471": "SELECT (SELECT COUNT(*) FROM customers WHERE Currency = 'EUR') / (SELECT COUNT(*) FROM customers WHERE Currency = 'CZK') AS ratio FROM customers LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1472": "SELECT T1.CustomerID FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Date BETWEEN '201201' AND '201212' AND T2.Segment = 'LAM' ORDER BY T1.Consumption ASC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1473": "SELECT AVG(T1.Consumption) / 12 FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Segment = 'SME' AND T1.Date BETWEEN '201301' AND '201312'\t----- bird -----\tdebit_card_specializing",
    "1474": "SELECT T1.CustomerID, SUM(T2.Consumption) as total_consumption FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Currency = 'CZK' AND T2.Date BETWEEN '201101' AND '201112' GROUP BY T1.CustomerID ORDER BY total_consumption DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1475": "SELECT COUNT(DISTINCT T1.CustomerID) FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Segment = 'KAM' AND T2.Consumption < 30000 AND T2.Date BETWEEN 201201 AND 201212.\t----- bird -----\tdebit_card_specializing",
    "1476": "SELECT ABS((SELECT SUM(T1.Consumption) FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Date BETWEEN '201201' AND '201212' AND T2.Currency = 'CZK') - (SELECT SUM(T3.Consumption) FROM yearmonth AS T3 INNER JOIN customers AS T4 ON T3.CustomerID = T4.CustomerID WHERE T3.Date BETWEEN '201201' AND '201212' AND T4.Currency = 'EUR'))\t----- bird -----\tdebit_card_specializing",
    "1477": "SELECT SUBSTR(T1.Date,1,4) AS Year, SUM(T1.Consumption) AS Total_Consumption FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Currency = 'EUR' GROUP BY Year ORDER BY Total_Consumption DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1478": "SELECT T1.Segment FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID GROUP BY T1.Segment ORDER BY SUM(T2.Consumption) ASC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1479": "SELECT SUBSTR(T1.Date, 1, 4) AS Year, SUM(T1.Consumption) AS TotalConsumption FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Currency = 'CZK' GROUP BY Year ORDER BY TotalConsumption DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1480": "SELECT SUBSTR(T2.Date,5,2) AS Month, MAX(T2.Consumption) AS Peak_Consumption FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Segment = 'SME' AND SUBSTR(T2.Date,1,4) = '2013' GROUP BY Month ORDER BY Peak_Consumption DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1481": "SELECT   (SELECT AvgConsumption FROM (SELECT Segment, AVG(Consumption) as AvgConsumption FROM customers c INNER JOIN yearmonth y ON c.CustomerID = y.CustomerID WHERE Currency = 'CZK' AND substr(Date,1,4) = '2013' AND Segment = 'SME' GROUP BY Segment ORDER BY AvgConsumption ASC LIMIT 1)) -   (SELECT AvgConsumption FROM (SELECT Segment, AVG(Consumption) as AvgConsumption FROM customers c INNER JOIN yearmonth y ON c.CustomerID = y.CustomerID WHERE Currency = 'CZK' AND substr(Date,1,4) = '2013' AND Segment = 'LAM' GROUP BY Segment ORDER BY AvgConsumption ASC LIMIT 1)) AS SME_LAM,  (SELECT AvgConsumption FROM (SELECT Segment, AVG(Consumption) as AvgConsumption FROM customers c INNER JOIN yearmonth y ON c.CustomerID = y.CustomerID WHERE Currency = 'CZK' AND substr(Date,1,4) = '2013' AND Segment = 'LAM' GROUP BY Segment ORDER BY AvgConsumption ASC LIMIT 1)) -   (SELECT AvgConsumption FROM (SELECT Segment, AVG(Consumption) as AvgConsumption FROM customers c INNER JOIN yearmonth y ON c.CustomerID = y.CustomerID WHERE Currency = 'CZK' AND substr(Date,1,4) = '2013' AND Segment = 'KAM' GROUP BY Segment ORDER BY AvgConsumption ASC LIMIT 1)) AS LAM_KAM,  (SELECT AvgConsumption FROM (SELECT Segment, AVG(Consumption) as AvgConsumption FROM customers c INNER JOIN yearmonth y ON c.CustomerID = y.CustomerID WHERE Currency = 'CZK' AND substr(Date,1,4) = '2013' AND Segment = 'KAM' GROUP BY Segment ORDER BY AvgConsumption ASC LIMIT 1)) -   (SELECT AvgConsumption FROM (SELECT Segment, AVG(Consumption) as AvgConsumption FROM customers c INNER JOIN yearmonth y ON c.CustomerID = y.CustomerID WHERE Currency = 'CZK' AND substr(Date,1,4) = '2013' AND Segment = 'SME' GROUP BY Segment ORDER BY AvgConsumption ASC LIMIT 1)) AS KAM_SME\t----- bird -----\tdebit_card_specializing",
    "1482": "SELECT T1.Segment, ((T2.Consumption - T1.Consumption)/T1.Consumption)*100 as PercentageIncrease FROM (SELECT T1.Segment, SUM(T2.Consumption) as Consumption FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Currency = 'EUR' AND SUBSTR(T2.Date,1,4) = '2012' GROUP BY T1.Segment) AS T1 INNER JOIN (SELECT T1.Segment, SUM(T2.Consumption) as Consumption FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Currency = 'EUR' AND SUBSTR(T2.Date,1,4) = '2013' GROUP BY T1.Segment) AS T2 ON T1.Segment = T2.Segment ORDER BY PercentageIncrease DESC\t----- bird -----\tdebit_card_specializing",
    "1483": "SELECT SUM(Consumption) FROM yearmonth WHERE CustomerID = 6 AND Date BETWEEN '201308' AND '201311'\t----- bird -----\tdebit_card_specializing",
    "1484": "(SELECT COUNT(GasStationID) FROM gasstations WHERE Country = 'Czech Republic' AND Segment = 'discount') - (SELECT COUNT(GasStationID) FROM gasstations WHERE Country = 'Slovakia' AND Segment = 'discount')\t----- bird -----\tdebit_card_specializing",
    "1485": "SELECT CustomerID, Consumption FROM yearmonth WHERE Date = '201304' AND (CustomerID = 7 OR CustomerID = 5)\t----- bird -----\tdebit_card_specializing",
    "1486": "SELECT (SUM(CASE WHEN Currency = 'CZK' THEN 1 ELSE 0 END) - SUM(CASE WHEN Currency = 'EUR' THEN 1 ELSE 0 END)) AS 'More_SMEs' FROM customers WHERE Segment = 'SME'\t----- bird -----\tdebit_card_specializing",
    "1487": "SELECT T1.CustomerID FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Segment = 'LAM' AND T1.Currency = 'EUR' AND T2.Date = '201310' ORDER BY T2.Consumption DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1488": "SELECT MAX(T2.Consumption) FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Segment = 'KAM' GROUP BY T1.CustomerID ORDER BY T2.Consumption DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1489": "SELECT SUM(T2.Consumption) FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Segment = 'KAM' AND T2.Date = '201305'\t----- bird -----\tdebit_card_specializing",
    "1490": "SELECT (COUNT(T1.CustomerID) * 100.0 / (SELECT COUNT(*) FROM customers WHERE Segment = 'LAM')) AS Percentage FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Segment = 'LAM' AND T2.Consumption > 46.73\t----- bird -----\tdebit_card_specializing",
    "1491": "SELECT Country, COUNT(GasStationID) FROM gasstations WHERE Segment = 'Value for money' GROUP BY Country\t----- bird -----\tdebit_card_specializing",
    "1492": "SELECT (CAST((SELECT COUNT(*) FROM customers WHERE Segment = 'KAM' AND Currency = 'EUR') AS FLOAT) / CAST((SELECT COUNT(*) FROM customers WHERE Segment = 'KAM') AS FLOAT)) * 100 AS percentage FROM customers LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1493": "SELECT     CAST((SELECT COUNT(*) FROM yearmonth WHERE Date = '201202' AND Consumption > 528.3) AS FLOAT) / CAST((SELECT COUNT(*) FROM yearmonth WHERE Date = '201202') AS FLOAT) * 100 AS percentageFROM yearmonthLIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1494": "SELECT CAST((SELECT COUNT(*) FROM gasstations WHERE Country = 'SVK' AND Segment = 'Premium') AS FLOAT) / CAST((SELECT COUNT(*) FROM gasstations WHERE Country = 'SVK') AS FLOAT) * 100 AS percentage_of_premium_gas_stations_in_slovakia\t----- bird -----\tdebit_card_specializing",
    "1495": "SELECT CustomerID FROM yearmonth WHERE Date = '201309' GROUP BY CustomerID ORDER BY SUM(Consumption) DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1496": "SELECT T1.Segment FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Date = '201309' ORDER BY T2.Consumption ASC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1497": "SELECT T1.CustomerID FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Segment = 'SME' AND T2.Date = '201206' ORDER BY T2.Consumption LIMIT 1.\t----- bird -----\tdebit_card_specializing",
    "1498": "SELECT MAX(Consumption) FROM yearmonth WHERE SUBSTR(Date, 1, 4) = '2012'\t----- bird -----\tdebit_card_specializing",
    "1499": "SELECT MAX(SUM(T1.Consumption)/12) FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Currency = 'EUR'\t----- bird -----\tdebit_card_specializing",
    "1500": "SELECT DISTINCT products.Description FROM products INNER JOIN transactions_1k ON products.ProductID = transactions_1k.ProductID WHERE transactions_1k.Date LIKE '2013-09%'\t----- bird -----\tdebit_card_specializing",
    "1501": "SELECT DISTINCT T1.Country FROM gasstations AS T1 INNER JOIN transactions_1k AS T2 ON T1.GasStationID = T2.GasStationID WHERE T2.Date LIKE '2013-06%'\t----- bird -----\tdebit_card_specializing",
    "1502": "SELECT gasstations.ChainID FROM gasstations JOIN transactions_1k ON gasstations.GasStationID = transactions_1k.GasStationID JOIN customers ON transactions_1k.CustomerID = customers.CustomerID WHERE customers.Currency = 'EUR'\t----- bird -----\tdebit_card_specializing",
    "1503": "SELECT P.Description FROM products AS P INNER JOIN transactions_1k AS T ON P.ProductID = T.ProductID INNER JOIN customers AS C ON T.CustomerID = C.CustomerID WHERE C.Currency = 'EUR'\t----- bird -----\tdebit_card_specializing",
    "1504": "SELECT AVG(Price) FROM transactions_1k WHERE Date LIKE '2012-01%'\t----- bird -----\tdebit_card_specializing",
    "1505": "SELECT COUNT(DISTINCT T1.CustomerID) FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Currency = 'EUR' AND T2.Consumption > 1000\t----- bird -----\tdebit_card_specializing",
    "1506": "SELECT T1.product_description FROM transactions AS T1 INNER JOIN stations AS T2 ON T1.station_id = T2.station_id WHERE T2.station_type = 'Gas Station' AND T2.country = 'CZE'\t----- bird -----\tdebit_card_specializing",
    "1507": "SELECT DISTINCT T1.Time FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T2.ChainID = 11\t----- bird -----\tdebit_card_specializing",
    "1508": "SELECT COUNT(T1.TransactionID) FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T1.Price > 1000 AND T2.Country = 'CZE'\t----- bird -----\tdebit_card_specializing",
    "1509": "SELECT COUNT(T2.TransactionID) FROM gasstations AS T1 INNER JOIN transactions_1k AS T2 ON T1.GasStationID = T2.GasStationID WHERE T1.Country = 'CZE' AND T2.Date > '2012-01-01'\t----- bird -----\tdebit_card_specializing",
    "1510": "SELECT AVG(T2.Price * T2.Amount) FROM gasstations AS T1 INNER JOIN transactions_1k AS T2 ON T1.GasStationID = T2.GasStationID WHERE T1.Country = 'CZE'\t----- bird -----\tdebit_card_specializing",
    "1511": "SELECT AVG(transactions_1k.Price) FROM transactions_1k INNER JOIN customers ON transactions_1k.CustomerID = customers.CustomerID WHERE customers.Currency = 'EUR'\t----- bird -----\tdebit_card_specializing",
    "1512": "SELECT T1.CustomerID, SUM(T2.Price) as total_price FROM customers AS T1 INNER JOIN transactions_1k AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Date = '2012-08-25' GROUP BY T1.CustomerID ORDER BY total_price DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1513": "SELECT g.Country FROM gasstations AS g INNER JOIN transactions_1k AS t ON g.GasStationID = t.GasStationID WHERE t.Date = '2012-08-25' ORDER BY t.Time LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1514": "SELECT T2.Currency FROM transactions_1k AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Date = '2012-08-24' AND T1.Time = '16:25:00'\t----- bird -----\tdebit_card_specializing",
    "1515": "SELECT T2.Segment FROM transactions_1k AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Date = '2012-08-23' AND T1.Time = '21:20:00'\t----- bird -----\tdebit_card_specializing",
    "1516": "SELECT COUNT(T1.TransactionID) FROM transactions_1k AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Currency = 'EUR' AND T1.Date = '2012-08-26' AND T1.Time < '13:00:00'\t----- bird -----\tdebit_card_specializing",
    "1517": "SELECT Segment FROM customers WHERE CustomerID = ( SELECT CustomerID FROM transactions_1k ORDER BY Date ASC LIMIT 1 )\t----- bird -----\tdebit_card_specializing",
    "1518": "SELECT T1.Country FROM gasstations AS T1 INNER JOIN transactions_1k AS T2 ON T1.GasStationID = T2.GasStationID WHERE T2.Date = '2012-08-24' AND T2.Time = '12:42:00'\t----- bird -----\tdebit_card_specializing",
    "1519": "SELECT ProductID FROM transactions_1k WHERE Date = '2012-08-23' AND Time = '21:20:00'\t----- bird -----\tdebit_card_specializing",
    "1520": "SELECT Date, Consumption FROM yearmonth WHERE CustomerID = ( SELECT CustomerID FROM transactions_1k WHERE Price = 124.05 AND Date = '2012-08-24' ) AND Date LIKE '201201%'\t----- bird -----\tdebit_card_specializing",
    "1521": "SELECT COUNT(T1.TransactionID) FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T1.Date = '2012-08-26' AND T1.Time BETWEEN '08:00' AND '09:00' AND T2.Country = 'CZE'\t----- bird -----\tdebit_card_specializing",
    "1522": "SELECT T1.Currency FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Date LIKE '%201306%' AND T2.Consumption = 214582.17\t----- bird -----\tdebit_card_specializing",
    "1523": "SELECT * FROM table\t----- bird -----\tdebit_card_specializing",
    "1524": "SELECT T1.Currency FROM customers AS T1 INNER JOIN transactions_1k AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Price * T2.Amount = 548.4 AND T2.Date = '2012-08-24'\t----- bird -----\tdebit_card_specializing",
    "1525": "SELECT (COUNT(DISTINCT CASE WHEN T1.Currency = 'EUR' THEN T1.CustomerID END) * 100.0 / COUNT(DISTINCT T1.CustomerID)) AS Percentage FROM customers AS T1 INNER JOIN transactions_1k AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Date = '2012-08-25'\t----- bird -----\tdebit_card_specializing",
    "1526": "SELECT ((SELECT Consumption FROM yearmonth WHERE CustomerID = (SELECT CustomerID FROM transactions_1k WHERE Price = 634.8 AND Date = '2012-08-25') AND Date LIKE '2012%') - (SELECT Consumption FROM yearmonth WHERE CustomerID = (SELECT CustomerID FROM transactions_1k WHERE Price = 634.8 AND Date = '2012-08-25') AND Date LIKE '2013%')) / (SELECT Consumption FROM yearmonth WHERE CustomerID = (SELECT CustomerID FROM transactions_1k WHERE Price = 634.8 AND Date = '2012-08-25') AND Date LIKE '2012%') AS 'Decrease Rate'\t----- bird -----\tdebit_card_specializing",
    "1527": "SELECT GasStationID, SUM(Amount * Price) as Revenue FROM transactions_1k GROUP BY GasStationID ORDER BY Revenue DESC LIMIT 1.\t----- bird -----\tdebit_card_specializing",
    "1528": "SELECT CAST((SELECT COUNT(*) FROM gasstations WHERE Segment = 'Premium' AND Country = 'SVK') AS FLOAT) / CAST((SELECT COUNT(*) FROM gasstations WHERE Country = 'SVK') AS FLOAT) * 100 AS percentage FROM gasstations LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1529": "SELECT SUM(Price) FROM transactions_1k WHERE CustomerID = 38508 AND strftime('%Y%m', Date) = '201201'\t----- bird -----\tdebit_card_specializing",
    "1530": "SELECT P.Description, COUNT(*) AS Frequency FROM transactions_1k AS T INNER JOIN products AS P ON T.ProductID = P.ProductID GROUP BY T.ProductID ORDER BY Frequency DESC LIMIT 5\t----- bird -----\tdebit_card_specializing",
    "1531": "SELECT T1.CustomerID, SUM(T1.Price)/SUM(T1.Amount) as AveragePrice, T2.Currency FROM transactions_1k as T1 JOIN customers as T2 ON T1.CustomerID = T2.CustomerID WHERE T1.CustomerID = (SELECT CustomerID FROM transactions_1k GROUP BY CustomerID ORDER BY SUM(Price*Amount) DESC LIMIT 1)\t----- bird -----\tdebit_card_specializing",
    "1532": "SELECT T1.Country FROM gasstations AS T1 INNER JOIN transactions_1k AS T2 ON T1.GasStationID = T2.GasStationID WHERE T2.ProductID = 2 ORDER BY T2.Price DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1533": "SELECT T1.CustomerID, T2.Consumption FROM transactions_1k AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.CustomerID IN ( SELECT CustomerID FROM transactions_1k WHERE ProductID = 5 AND Price/Amount > 29.00 ) AND T2.Date = '201208'\t----- bird -----\tdebit_card_specializing"
}