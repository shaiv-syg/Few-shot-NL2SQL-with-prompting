{
    "0": "SELECT MAX(\"Free Meal Count (K-12)\" / \"Enrollment (K-12)\") as 'Highest Eligible Free Rate (K-12)' FROM frpm JOIN schools ON frpm.\"CDSCode\" = schools.\"CDSCode\" WHERE \"County Name\" = 'Alameda'\t----- bird -----\tcalifornia_schools",
    "1": "SELECT (T1.\"Free Meal Count (Ages 5-17)\"/T1.\"Enrollment (Ages 5-17)\") as free_meal_rate FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.\"CDSCode\" = T2.\"CDSCode\" WHERE T2.SOC = 'CON' ORDER BY free_meal_rate ASC LIMIT 3\t----- bird -----\tcalifornia_schools",
    "2": "SELECT MailZip FROM schools WHERE Charter = 1 AND DOC = '00' AND MailCity = 'Fresno'\t----- bird -----\tcalifornia_schools",
    "3": "SELECT T2.MailStreet FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.\"FRPM Count (K-12)\" = ( SELECT MAX(\"FRPM Count (K-12)\") FROM frpm )\t----- bird -----\tcalifornia_schools",
    "4": "SELECT Phone FROM schools WHERE FundingType = 'Directly funded' AND Charter = 1 AND OpenDate > '2000-01-01'\t----- bird -----\tcalifornia_schools",
    "5": "SELECT COUNT(*) FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T1.AvgScrMath < 400 AND T2.Virtual = 'F'\t----- bird -----\tcalifornia_schools",
    "6": "SELECT T1.sname FROM satscores AS T1 INNER JOIN frpm AS T2 ON T1.cds = T2.CDSCode WHERE T1.NumTstTakr > 500 AND T2.Educational Option Type = 'Magnet'\t----- bird -----\tcalifornia_schools",
    "7": "SELECT T2.Phone FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T1.NumGE1500 = (SELECT MAX(NumGE1500) FROM satscores)\t----- bird -----\tcalifornia_schools",
    "8": "SELECT NumTstTakr FROM satscores WHERE cds = ( SELECT \"CDSCode\" FROM frpm ORDER BY \"FRPM Count (K-12)\" DESC LIMIT 1 )\t----- bird -----\tcalifornia_schools",
    "9": "SELECT COUNT(T1.sname) FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T1.AvgScrMath > 560 AND T2.FundingType = 'Directly funded'\t----- bird -----\tcalifornia_schools",
    "10": "SELECT T1.\"FRPM Count (Ages 5-17)\" FROM frpm AS T1 INNER JOIN satscores AS T2 ON T1.\"CDSCode\" = T2.cds WHERE T2.sname = ( SELECT sname FROM satscores WHERE AvgScrRead = ( SELECT MAX(AvgScrRead) FROM satscores ) )\t----- bird -----\tcalifornia_schools",
    "11": "SELECT CDSCode FROM frpm WHERE (Enrollment (K-12) + Enrollment (Ages 5-17)) > 500\t----- bird -----\tcalifornia_schools",
    "12": "SELECT MAX(T2.\"Free Meal Count (Ages 5-17)\" / T2.\"Enrollment (Ages 5-17)\") FROM satscores AS T1 INNER JOIN frpm AS T2 ON T1.cds = T2.\"CDSCode\" WHERE T1.\"NumGE1500\" / T1.\"NumTstTakr\" > 0.3\t----- bird -----\tcalifornia_schools",
    "13": "SELECT T1.Phone FROM schools AS T1 INNER JOIN (SELECT cds, NumGE1500 / NumTstTakr as rate FROM satscores) AS T2 ON T1.CDSCode = T2.cds ORDER BY T2.rate DESC LIMIT 3\t----- bird -----\tcalifornia_schools",
    "14": "SELECT T1.\"School Name\", T2.\"NCESSchool\" FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.\"CDSCode\" = T2.\"CDSCode\" ORDER BY T1.\"Enrollment (Ages 5-17)\" DESC LIMIT 5\t----- bird -----\tcalifornia_schools",
    "15": "SELECT T2.District, MAX(T1.AvgScrRead) FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T2.StatusType = 'Active'\t----- bird -----\tcalifornia_schools",
    "16": "SELECT COUNT(T1.sname) FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T1.cname = 'Alameda' AND T1.NumTstTakr < 100\t----- bird -----\tcalifornia_schools",
    "17": "SELECT frpm.\"Charter School Number\" FROM frpm INNER JOIN satscores ON frpm.\"CDSCode\" = satscores.cds WHERE satscores.\"AvgScrWrite\" = 499\t----- bird -----\tcalifornia_schools",
    "18": "SELECT COUNT(*) FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T1.cname = 'Contra Costa' AND T2.FundingType = 'directly funded' AND T1.NumTstTakr <= 250\t----- bird -----\tcalifornia_schools",
    "19": "SELECT T2.Phone FROM schools AS T2 INNER JOIN satscores AS T1 ON T1.cds = T2.CDSCode WHERE T1.cds = ( SELECT cds FROM satscores WHERE AvgScrMath = (SELECT MAX(AvgScrMath) FROM satscores) )\t----- bird -----\tcalifornia_schools",
    "20": "SELECT COUNT(*) FROM schools WHERE (GSoffered = '9-12' OR GSserved = '9-12')However, without knowing what field \"Amador\" refers to, this query may not be correct. The question needs to provide more context.\t----- bird -----\tcalifornia_schools",
    "21": "SELECT COUNT(*) FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.School LIKE '%Los Angeles%' AND T2.\"Free Meal Count (K-12)\" > 500 AND T2.\"FRPM Count (K-12)\" < 700Note: This assumes that the city name is part of the 'School' column, which may not be the case. The actual query may differ based on the actual structure of the database.\t----- bird -----\tcalifornia_schools",
    "22": "SELECT sname FROM satscores WHERE cname = 'Contra Costa' ORDER BY NumTstTakr DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "23": "SELECT T1.\"School Name\", T2.StreetAbr FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.\"CDSCode\" = T2.\"CDSCode\" WHERE ABS(T1.\"Enrollment (K-12)\" - T1.\"Enrollment (Ages 5-17)\") > 30\t----- bird -----\tcalifornia_schools",
    "24": "SELECT T2.sname FROM frpm AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T1.\"Percent (%) Eligible Free (K-12)\" > 0.1 AND T2.NumGE1500 >= 1500\t----- bird -----\tcalifornia_schools",
    "25": "SELECT s.School, s.FundingTypeFROM satscores saJOIN schools s ON sa.cds = s.CDSCodeWHERE sa.cname = 'Riverside'GROUP BY s.SchoolHAVING AVG(sa.AvgScrMath) > 400\t----- bird -----\tcalifornia_schools",
    "26": "SELECT T1.\"School Name\", T1.MailStreet, T1.MailZip, T1.MailCity, 'California' AS State FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.\"FRPM Count (Ages 5-17)\" > 800 AND T1.NCESDist LIKE '%Monterey%' AND T1.GSserved LIKE '%12%'\t----- bird -----\tcalifornia_schools",
    "27": "SELECT T1.School, T2.AvgScrWrite, T1.Ext FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T1.OpenDate > '1991' OR T1.ClosedDate < '2000'\t----- bird -----\tcalifornia_schools",
    "28": "SELECT frpm.\"School Name\", schools.\"DOC\" FROM frpm INNER JOIN schools ON frpm.\"CDSCode\" = schools.\"CDSCode\" WHERE (frpm.\"Enrollment (K-12)\" - frpm.\"Enrollment (Ages 5-17)\") > ( SELECT AVG(\"Enrollment (K-12)\" - \"Enrollment (Ages 5-17)\") FROM frpm INNER JOIN schools ON frpm.\"CDSCode\" = schools.\"CDSCode\" WHERE schools.\"FundingType\" = 'locally funded' ) AND schools.\"FundingType\" = 'locally funded'\t----- bird -----\tcalifornia_schools",
    "29": "SELECT T1.OpenDate FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T1.GSoffered = 'K-12' ORDER BY T2.enroll12 DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "30": "SELECT cname, enroll12 FROM satscores ORDER BY enroll12 ASC LIMIT 5\t----- bird -----\tcalifornia_schools",
    "31": "SELECT \"School Name\", \"Free Meal Count (K-12)\" / \"Enrollment (K-12)\" AS Eligible_Free_Rate FROM frpm ORDER BY \"Enrollment (K-12)\" DESC LIMIT 2 OFFSET 9\t----- bird -----\tcalifornia_schools",
    "32": "SELECT frpm.\"School Name\", frpm.\"FRPM Count (K-12)\" / frpm.\"Enrollment (K-12)\" AS Eligible_FRPM_Rate FROM frpm INNER JOIN schools ON frpm.\"CDSCode\" = schools.\"CDSCode\" WHERE schools.SOC = '66' ORDER BY frpm.\"FRPM Count (K-12)\" DESC LIMIT 5\t----- bird -----\tcalifornia_schools",
    "33": "SELECT T1.Website, T1.School FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.\"Free Meal Count (Ages 5-17)\" BETWEEN 1900 AND 2000\t----- bird -----\tcalifornia_schools",
    "34": "SELECT T1.\"Free Meal Count (Ages 5-17)\" / T1.\"Enrollment (Ages 5-17)\" FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.\"CDSCode\" = T2.\"CDSCode\" WHERE T2.AdmFName1 = 'Kacey Gibson'\t----- bird -----\tcalifornia_schools",
    "35": "SELECT AdmEmail1 FROM schools WHERE CDSCode = ( SELECT cds FROM satscores WHERE enroll12 = ( SELECT MIN(enroll12) FROM satscores WHERE cds IN ( SELECT CDSCode FROM schools WHERE Charter = 1 ) ) )\t----- bird -----\tcalifornia_schools",
    "36": "SELECT T2.AdmFName1, T2.AdmLName1 FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T1.NumGE1500 = (SELECT MAX(NumGE1500) FROM satscores)\t----- bird -----\tcalifornia_schools",
    "37": "SELECT * FROM table\t----- bird -----\tcalifornia_schools",
    "38": "SELECT T2.Website FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T1.cname = 'Los Angeles' AND T1.NumTstTakr BETWEEN 2000 AND 3000\t----- bird -----\tcalifornia_schools",
    "39": "SELECT AVG(T1.NumTstTakr) FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T1.cname = 'Fresno' AND T2.OpenDate BETWEEN '1980-01-01' AND '1980-12-31'\t----- bird -----\tcalifornia_schools",
    "40": "SELECT T2.Ext FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.\"CDSCode\" WHERE T1.cds = ( SELECT cds FROM satscores WHERE dname = 'Fresno Unified' ORDER BY AvgScrRead ASC LIMIT 1 )\t----- bird -----\tcalifornia_schools",
    "41": "SELECT T1.School, T2.AvgScrRead FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T1.Virtual = 'F' ORDER BY T2.AvgScrRead DESC LIMIT 5\t----- bird -----\tcalifornia_schools",
    "42": "SELECT T2.EdOpsCode FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.\"CDSCode\" WHERE T1.cds = ( SELECT cds FROM satscores WHERE AvgScrMath = (SELECT MAX(AvgScrMath) FROM satscores) )\t----- bird -----\tcalifornia_schools",
    "43": "SELECT T1.AvgScrMath, T1.cname FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T1.cds = ( SELECT cds FROM satscores ORDER BY (AvgScrMath + AvgScrRead + AvgScrWrite)/3 ASC LIMIT 1 )\t----- bird -----\tcalifornia_schools",
    "44": "SELECT T1.AvgScrWrite, T2.City FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T1.cds = ( SELECT cds FROM satscores WHERE NumGE1500 = ( SELECT MAX(NumGE1500) FROM satscores ) )\t----- bird -----\tcalifornia_schools",
    "45": "SELECT T2.School, AVG(T1.AvgScrWrite) FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T2.AdmFName1 = 'Ricci' AND T2.AdmLName1 = 'Ulrich' GROUP BY T2.School\t----- bird -----\tcalifornia_schools",
    "46": "SELECT sname, MAX(enroll12) FROM satscores; This query would return the name of the school with the highest number of enrollees from grades 1 through 12. However, it doesn't filter for state special schools due to lack of information.\t----- bird -----\tcalifornia_schools",
    "47": "SELECT COUNT(*)/12.0 AS Average_Number_Of_Schools FROM schools WHERE DOC = '52' AND STRFTIME('%Y', OpenDate) = '1980' AND County = 'Alameda'\t----- bird -----\tcalifornia_schools",
    "48": "SELECT     CAST((SELECT COUNT(*) FROM schools WHERE DOC = '54' AND StatusType = 'Merged') AS REAL) /     CAST((SELECT COUNT(*) FROM schools WHERE DOC = '52' AND StatusType = 'Merged') AS REAL) AS Ratio;\t----- bird -----\tcalifornia_schools",
    "49": "SELECT s1.School, s1.ClosedDate FROM schools s1 WHERE s1.StatusType = 'Closed' AND s1.County = ( SELECT s2.County FROM schools s2 WHERE s2.StatusType = 'Closed' GROUP BY s2.County ORDER BY COUNT(*) DESC LIMIT 1)\t----- bird -----\tcalifornia_schools",
    "50": "SELECT T1.MailStreet, T1.School FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T2.AvgScrMath = ( SELECT AvgScrMath FROM satscores ORDER BY AvgScrMath DESC LIMIT 5, 1 )\t----- bird -----\tcalifornia_schools",
    "51": "SELECT T1.MailStreet, T2.sname FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T2.AvgScrRead = ( SELECT MIN(AvgScrRead) FROM satscores )\t----- bird -----\tcalifornia_schools",
    "52": "SELECT COUNT(*) FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T2.MailCity = 'Lakeport' AND (T1.AvgScrRead + T1.AvgScrMath + T1.AvgScrWrite) >= 1500\t----- bird -----\tcalifornia_schools",
    "53": "SELECT SUM(T1.NumTstTakr) FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.\"CDSCode\" WHERE T2.MailCity = 'Fresno'\t----- bird -----\tcalifornia_schools",
    "54": "SELECT School, MailZip FROM schools WHERE AdmLName1 = 'Atoian'\t----- bird -----\tcalifornia_schools",
    "55": "SELECT (SELECT COUNT(*) FROM schools WHERE MailState = 'CA' AND DOC = '52') / (SELECT COUNT(*) FROM schools WHERE MailState = 'CA' AND DOC = '54') AS ratio\t----- bird -----\tcalifornia_schools",
    "56": "SELECT COUNT(*) FROM schools WHERE MailState = 'CA' AND StatusType = 'Active' AND MailCity = 'San Joaquin'\t----- bird -----\tcalifornia_schools",
    "57": "SELECT T1.Phone, T1.Ext FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T2.cds = ( SELECT cds FROM satscores ORDER BY AvgScrWrite DESC LIMIT 332, 1 )\t----- bird -----\tcalifornia_schools",
    "58": "SELECT School, Ext FROM schools WHERE MailZip = '95203-3704'\t----- bird -----\tcalifornia_schools",
    "59": "SELECT School, Website FROM schools WHERE AdmLName1 IN ('Mike Larson', 'Dante Alvarez')\t----- bird -----\tcalifornia_schools",
    "60": "SELECT Website FROM schools WHERE Virtual = 'P' AND Charter = 1But this query will not provide the exact desired result as there is no information about the location of the schools.\t----- bird -----\tcalifornia_schools",
    "61": "SELECT COUNT(*) FROM schools WHERE DOC = '52' AND Charter = 1 AND City = 'Hickman'\t----- bird -----\tcalifornia_schools",
    "62": "SELECT COUNT(*) FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.Charter = 0 AND T2.\"Percent (%) Eligible Free (K-12)\" < 0.18\t----- bird -----\tcalifornia_schools",
    "63": "SELECT T2.School, T2.AdmFName1 || ' ' || T2.AdmLName1 as 'Administrator Name' FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.Charter = 1 AND T2.CharterNum = '00D2'\t----- bird -----\tcalifornia_schools",
    "64": "SELECT COUNT(School) FROM schools WHERE MailCity = 'Hickman' AND CharterNum = '00D4'\t----- bird -----\tcalifornia_schools",
    "65": "SELECT (SELECT COUNT(*) FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.\"County Name\" = 'Santa Clara' AND T2.FundingType = 'locally funded') / (SELECT COUNT(*) FROM frpm WHERE \"County Name\" = 'Santa Clara') * 100.0 AS Ratio_in_percentage\t----- bird -----\tcalifornia_schools",
    "66": "SELECT COUNT(*) FROM schools WHERE OpenDate BETWEEN '2000-01-01' AND '2005-12-31' AND FundingType = 'Directly funded' AND DOC = '00'\t----- bird -----\tcalifornia_schools",
    "67": "SELECT COUNT(*) FROM schools WHERE City = 'San Francisco' AND strftime('%Y', ClosedDate) = '1989';\t----- bird -----\tcalifornia_schools",
    "68": "SELECT DOC, COUNT(*) as closure_count FROM schools WHERE SOC = '11' AND ClosedDate BETWEEN '1980-01-01' AND '1989-12-31' GROUP BY DOC ORDER BY closure_count DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "69": "SELECT NCESDist FROM schools WHERE SOC = 31\t----- bird -----\tcalifornia_schools",
    "70": "SELECT COUNT(*) FROM schools WHERE StatusType IN ('Active', 'Closed') AND District = 'Alpine' AND School LIKE '%Community Day%'\t----- bird -----\tcalifornia_schools",
    "71": "SELECT T1.\"District Code\" FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.Magnet = 0 AND T1.\"County Name\" = 'Fresno'\t----- bird -----\tcalifornia_schools",
    "72": "SELECT SUM(T1.\"Enrollment (Ages 5-17)\") FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.\"CDSCode\" = T2.\"CDSCode\" WHERE T2.\"EdOpsCode\" = 'SSS'\t----- bird -----\tcalifornia_schools",
    "73": "SELECT T1.\"FRPM Count (Ages 5-17)\" FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.\"CDSCode\" = T2.\"CDSCode\" WHERE T2.SOC = '11' AND T2.MailStreet = 'PO Box 1040'\t----- bird -----\tcalifornia_schools",
    "74": "SELECT GSoffered FROM schools WHERE NCESDist = '613360' AND EdOpsCode = 'SPECON'\t----- bird -----\tcalifornia_schools",
    "75": "SELECT T1.EILName, T1.School FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.\"County Code\" = '37'\t----- bird -----\tcalifornia_schools",
    "76": "SELECT T2.\"MailCity\" FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.\"CDSCode\" = T2.\"CDSCode\" WHERE T2.\"EILCode\" = 'HS' AND T1.\"Low Grade\" = '9' AND T1.\"High Grade\" = '12' AND T1.\"County Code\" = 'Merced'\t----- bird -----\tcalifornia_schools",
    "77": "SELECT T1.\"School Name\", T2.\"Percent (%) Eligible FRPM (Ages 5-17)\" FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.\"CDSCode\" = T2.\"CDSCode\" WHERE T1.\"GSserved\" = 'K-9' AND T1.\"DOC\" = '00'\t----- bird -----\tcalifornia_schools",
    "78": "SELECT GSserved, COUNT(*) as count FROM schools WHERE MailCity = 'Adelanto' GROUP BY GSserved ORDER BY count DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "79": "SELECT COUNT(*) AS Number_of_Schools, MailCity FROM schools WHERE Virtual = 'F' AND (MailCity = 'San Diego' OR MailCity = 'Santa Barbara') GROUP BY MailCity ORDER BY Number_of_Schools DESCLIMIT 1;\t----- bird -----\tcalifornia_schools",
    "80": "SELECT School, EILName, MAX(Latitude) FROM schools\t----- bird -----\tcalifornia_schools",
    "81": "SELECT School, MailCity, GSoffered FROM schools WHERE Latitude = (SELECT MIN(Latitude) FROM schools)\t----- bird -----\tcalifornia_schools",
    "82": "SELECT GSoffered FROM schools ORDER BY Longitude DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "83": "SELECT COUNT(*) FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.MailCity = 'Los Angeles' AND T1.\"Percent (%) Eligible FRPM (K-12)\" > 0.7\t----- bird -----\tcalifornia_schools",
    "84": "SELECT AdmFName1, NCESDist, COUNT(*) as count FROM schools GROUP BY AdmFName1 ORDER BY count DESC LIMIT 2\t----- bird -----\tcalifornia_schools",
    "85": "SELECT T1.\"Percent (%) Eligible Free (K-12)\", T2.CDSCode FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.\"CDSCode\" = T2.\"CDSCode\" WHERE T2.AdmFName1 = 'Alusine'\t----- bird -----\tcalifornia_schools",
    "86": "SELECT S.AdmLName1, S.DOC, F.\"County Name\", F.\"School Name\" FROM schools AS S INNER JOIN frpm AS F ON S.CDSCode = F.CDSCode WHERE S.CharterNum = '40'\t----- bird -----\tcalifornia_schools",
    "87": "SELECT * FROM table\t----- bird -----\tcalifornia_schools",
    "88": "SELECT T1.AdmEmail1, T2.sname FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T2.NumGE1500 = (SELECT MAX(NumGE1500) FROM satscores)\t----- bird -----\tcalifornia_schools",
    "89": "SELECT COUNT(account.account_id) FROM account JOIN district ON account.district_id = district.district_id WHERE account.frequency = 'POPLATEK PO OBRATU' AND district.A3 = 'East Bohemia'\t----- bird -----\tfinancial",
    "90": "SELECT COUNT(DISTINCT T1.account_id) FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id INNER JOIN loan AS T3 ON T1.account_id = T3.account_id WHERE T2.A3 = 'Prague'\t----- bird -----\tfinancial",
    "91": "SELECT CASE WHEN AVG(A12) > AVG(A13) THEN '1995 has higher unemployment ratio' ELSE '1996 has higher unemployment ratio' END AS Result FROM district\t----- bird -----\tfinancial",
    "92": "SELECT COUNT(DISTINCT T1.district_id) FROM district AS T1 INNER JOIN client AS T2 ON T1.district_id = T2.district_id WHERE T2.gender = 'F' AND T1.A11 BETWEEN 6000 AND 10000\t----- bird -----\tfinancial",
    "93": "SELECT COUNT(*) FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.gender = 'M' AND T2.A3 = 'North Bohemia' AND T2.A11 > 8000\t----- bird -----\tfinancial",
    "94": "SELECT D.account_id, (SELECT MAX(A11) FROM district) - (SELECT MIN(A11) FROM district) AS gap FROM disp AS D JOIN client AS C ON D.client_id = C.client_id JOIN account AS A ON D.account_id = A.account_id JOIN district AS P ON A.district_id = P.district_id WHERE C.gender = 'F' AND C.birth_date = (SELECT MIN(birth_date) FROM client WHERE gender = 'F') AND P.A11 = (SELECT MIN(A11) FROM district)\t----- bird -----\tfinancial",
    "95": "SELECT T1.account_id FROM disp AS T1 INNER JOIN client AS T2 ON T1.client_id = T2.client_id INNER JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T2.birth_date = ( SELECT MAX(birth_date) FROM client ) AND T3.A11 = ( SELECT MAX(A11) FROM district )\t----- bird -----\tfinancial",
    "96": "SELECT COUNT(DISTINCT T1.client_id) FROM disp AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T2.frequency = 'POPLATEK TYDNE' AND T1.type = 'OWNER'\t----- bird -----\tfinancial",
    "97": "SELECT client_id FROM disp WHERE type = 'DISPONENT'\t----- bird -----\tfinancial",
    "98": "SELECT T1.account_id FROM account AS T1 INNER JOIN loan AS T2 ON T1.account_id = T2.account_id WHERE T2.date LIKE '1997%' AND T1.frequency = 'POPLATEK TYDNE' ORDER BY T2.amount ASC LIMIT 1\t----- bird -----\tfinancial",
    "99": "SELECT T1.account_id FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T1.amount = (SELECT MAX(amount) FROM loan WHERE duration > 12) AND T2.date LIKE '1993%'\t----- bird -----\tfinancial",
    "100": "SELECT COUNT(DISTINCT A.account_id) FROM account A, disp D, client C, district Di WHERE A.account_id = D.account_id AND D.client_id = C.client_id AND C.district_id = Di.district_id AND C.gender = 'F' AND C.birth_date < '1950-01-01' AND Di.A2 = 'Sokolov'\t----- bird -----\tfinancial",
    "101": "SELECT account_id FROM trans WHERE date = ( SELECT MIN(date) FROM trans WHERE strftime('%Y', date) = '1995' )\t----- bird -----\tfinancial",
    "102": "SELECT DISTINCT T1.account_id FROM account AS T1 INNER JOIN trans AS T2 ON T1.account_id = T2.account_id WHERE T1.date < '1997-01-01' AND T2.amount > 3000\t----- bird -----\tfinancial",
    "103": "SELECT disp.client_id FROM disp INNER JOIN card ON disp.disp_id = card.disp_id WHERE card.issued = '1994-03-03'\t----- bird -----\tfinancial",
    "104": "SELECT T2.date FROM trans AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T1.amount = 840 and T1.date = '1998-10-14'\t----- bird -----\tfinancial",
    "105": "SELECT T1.district_id FROM account AS T1 INNER JOIN loan AS T2 ON T1.account_id = T2.account_id WHERE T2.date = '1994-08-25'\t----- bird -----\tfinancial",
    "106": "SELECT MAX(T2.amount) FROM trans AS T2 INNER JOIN disp AS T1 ON T1.account_id = T2.account_id WHERE T1.client_id = ( SELECT client_id FROM disp WHERE disp_id IN (SELECT disp_id FROM card WHERE issued = '1996/10/21') )\t----- bird -----\tfinancial",
    "107": "SELECT T1.gender FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN account AS T3 ON T2.account_id = T3.account_id INNER JOIN district AS T4 ON T3.district_id = T4.district_id WHERE T4.district_id = ( SELECT district_id FROM district WHERE A11 = ( SELECT MAX(A11) FROM district ) ) ORDER BY T1.birth_date ASC LIMIT 1\t----- bird -----\tfinancial",
    "108": "SELECT MIN(amount) FROM trans WHERE account_id = (SELECT account_id FROM disp WHERE client_id = (SELECT client_id FROM disp WHERE account_id = (SELECT account_id FROM loan WHERE amount = (SELECT MAX(amount) FROM loan))))\t----- bird -----\tfinancial",
    "109": "SELECT COUNT(DISTINCT T1.client_id) FROM disp AS T1 INNER JOIN client AS T2 ON T1.client_id = T2.client_id INNER JOIN account AS T3 ON T1.account_id = T3.account_id INNER JOIN district AS T4 ON T3.district_id = T4.district_id WHERE T2.gender = 'F' AND T4.A2 = 'Jesenik'\t----- bird -----\tfinancial",
    "110": "SELECT T1.disp_id FROM disp AS T1 INNER JOIN trans AS T2 ON T1.account_id = T2.account_id WHERE T2.amount = 5100 AND T2.date = '1998-09-02'\t----- bird -----\tfinancial",
    "111": "SELECT COUNT(account.account_id) FROM account INNER JOIN district ON account.district_id = district.district_id WHERE district.A2 = 'Litomerice' AND account.date LIKE '1996%'\t----- bird -----\tfinancial",
    "112": "SELECT T4.A2 FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN account AS T3 ON T2.account_id = T3.account_id INNER JOIN district AS T4 ON T3.district_id = T4.district_id WHERE T1.gender = 'F' AND T1.birth_date = '1976-01-29'\t----- bird -----\tfinancial",
    "113": "SELECT T3.birth_date FROM loan AS T1 INNER JOIN disp AS T2 ON T1.account_id = T2.account_id INNER JOIN client AS T3 ON T2.client_id = T3.client_id WHERE T1.amount = 98832 AND T1.date = '1996/1/3'\t----- bird -----\tfinancial",
    "114": "SELECT account_id FROM disp WHERE client_id = ( SELECT client_id FROM disp AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T3.A3 = 'Prague' ORDER BY T2.date ASC LIMIT 1 )\t----- bird -----\tfinancial",
    "115": "SELECT ((SELECT COUNT(client_id) FROM client INNER JOIN disp ON client.client_id = disp.client_id INNER JOIN account ON disp.account_id = account.account_id WHERE account.district_id = (SELECT district_id FROM district WHERE A3 = 'south Bohemia' ORDER BY A4 DESC LIMIT 1) AND client.gender = 'M') * 100 / (SELECT COUNT(client_id) FROM client INNER JOIN disp ON client.client_id = disp.client_id INNER JOIN account ON disp.account_id = account.account_id WHERE account.district_id = (SELECT district_id FROM district WHERE A3 = 'south Bohemia' ORDER BY A4 DESC LIMIT 1))) AS percentage_of_male_clients\t----- bird -----\tfinancial",
    "116": "SELECT ((SELECT balance FROM trans WHERE account_id = (SELECT account_id FROM loan WHERE date = '1993-07-05' ORDER BY date ASC LIMIT 1) AND date = '1998-12-27') - (SELECT balance FROM trans WHERE account_id = (SELECT account_id FROM loan WHERE date = '1993-07-05' ORDER BY date ASC LIMIT 1) AND date = '1993-03-22')) / (SELECT balance FROM trans WHERE account_id = (SELECT account_id FROM loan WHERE date = '1993-07-05' ORDER BY date ASC LIMIT 1) AND date = '1993-03-22') * 100 AS increase_rate\t----- bird -----\tfinancial",
    "117": "SELECT (CAST(SUM(amount) as float) / (SELECT SUM(amount) FROM loan) * 100) as percentage FROM loan WHERE status = 'A'\t----- bird -----\tfinancial",
    "118": "SELECT (CAST(COUNT(*) AS REAL) / (SELECT COUNT(*) FROM loan WHERE amount < 100000)) * 100 AS percentage FROM loan WHERE amount < 100000 AND status = 'C'\t----- bird -----\tfinancial",
    "119": "SELECT T1.account_id, T2.A2, T2.A3 FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.date LIKE '1993%' AND T1.frequency = 'POPLATEK PO OBRATU'\t----- bird -----\tfinancial",
    "120": "SELECT T1.account_id, T1.frequency FROM account AS T1 INNER JOIN disp AS T2 ON T1.account_id = T2.account_id INNER JOIN district AS T3 ON T1.district_id = T3.district_id WHERE T3.A3 = 'east Bohemia' AND T2.type = 'OWNER' AND T1.date BETWEEN '1995-01-01' AND '2000-12-31'\t----- bird -----\tfinancial",
    "121": "SELECT account.account_id, account.date FROM account INNER JOIN district ON account.district_id = district.district_id WHERE district.A2 = 'Prachatice'\t----- bird -----\tfinancial",
    "122": "SELECT T3.A2, T3.A3 FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T1.loan_id = 4990\t----- bird -----\tfinancial",
    "123": "SELECT T1.account_id, T3.A2 AS district, T3.A3 AS region FROM account AS T1 INNER JOIN loan AS T2 ON T1.account_id = T2.account_id INNER JOIN district AS T3 ON T1.district_id = T3.district_id WHERE T2.amount > 300000\t----- bird -----\tfinancial",
    "124": "SELECT loan.loan_id, district.A3, district.A11 FROM loan INNER JOIN account ON loan.account_id = account.account_id INNER JOIN district ON account.district_id = district.district_id WHERE loan.duration = 60\t----- bird -----\tfinancial",
    "125": "SELECT district.A2, ((district.A13 - district.A12) / district.A12)*100 AS 'Unemployment Rate Increment' FROM loan INNER JOIN disp ON loan.account_id = disp.account_id INNER JOIN client ON disp.client_id = client.client_id INNER JOIN district ON client.district_id = district.district_id WHERE loan.status = 'D'\t----- bird -----\tfinancial",
    "126": "SELECT (CAST(COUNT(*) AS REAL) / (SELECT COUNT(*) FROM account WHERE date LIKE '1993%')) * 100 FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.A2 = 'Decin' AND T1.date LIKE '1993%'\t----- bird -----\tfinancial",
    "127": "SELECT account_id FROM account WHERE frequency = 'POPLATEK MESICNE'\t----- bird -----\tfinancial",
    "128": "SELECT T1.district_id, COUNT(*) as female_account_holders FROM account AS T1 INNER JOIN disp AS T2 ON T1.account_id = T2.account_id INNER JOIN client AS T3 ON T2.client_id = T3.client_id WHERE T3.gender = 'F' GROUP BY T1.district_id ORDER BY female_account_holders DESC LIMIT 10\t----- bird -----\tfinancial",
    "129": "SELECT T3.A2, SUM(T1.amount) AS total_withdrawals FROM trans AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T1.type = 'VYDAJ' AND T1.date LIKE '1996-01%' GROUP BY T3.A2 ORDER BY total_withdrawals DESC LIMIT 10\t----- bird -----\tfinancial",
    "130": "SELECT (SELECT COUNT(account_id) FROM account WHERE district_id IN ( SELECT district_id FROM district WHERE A3 = 'South Bohemia' )) - ( SELECT COUNT(DISTINCT account_id) FROM disp WHERE disp_id IN ( SELECT disp_id FROM card ) AND account_id IN ( SELECT account_id FROM account WHERE district_id IN ( SELECT district_id FROM district WHERE A3 = 'South Bohemia') ) )\t----- bird -----\tfinancial",
    "131": "SELECT T3.A3, COUNT(*) FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T1.status IN ('C', 'D') GROUP BY T3.A3 ORDER BY COUNT(*) DESC LIMIT 1\t----- bird -----\tfinancial",
    "132": "SELECT AVG(loan.amount) FROM client INNER JOIN disp ON client.client_id = disp.client_id INNER JOIN loan ON disp.account_id = loan.account_id WHERE client.gender = 'M'\t----- bird -----\tfinancial",
    "133": "SELECT A2, A13 FROM district ORDER BY A13 DESC LIMIT 1\t----- bird -----\tfinancial",
    "134": "SELECT COUNT(account_id) FROM account WHERE district_id = (SELECT district_id FROM district WHERE A16 = (SELECT MAX(A16) FROM district))\t----- bird -----\tfinancial",
    "135": "SELECT COUNT(DISTINCT T1.account_id) FROM account AS T1 INNER JOIN trans AS T2 ON T1.account_id = T2.account_id WHERE T1.frequency = 'POPLATEK MESICNE' AND T2.operation = 'VYBER KARTOU' AND T2.balance < 0\t----- bird -----\tfinancial",
    "136": "SELECT COUNT(T1.loan_id) FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T1.date BETWEEN '1995-01-01' AND '1997-12-31' AND T1.amount >= 250000 AND T2.frequency = 'POPLATEK MESICNE'\t----- bird -----\tfinancial",
    "137": "SELECT COUNT(DISTINCT T1.account_id) FROM account AS T1 INNER JOIN loan AS T2 ON T1.account_id = T2.account_id WHERE T1.district_id = 1 AND (T2.status = 'C' OR T2.status = 'D')\t----- bird -----\tfinancial",
    "138": "SELECT COUNT(DISTINCT T1.client_id) FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN account AS T3 ON T2.account_id = T3.account_id WHERE T3.district_id = ( SELECT district_id FROM district ORDER BY A15 DESC LIMIT 1 OFFSET 1 ) AND T1.gender = 'M'\t----- bird -----\tfinancial",
    "139": "SELECT COUNT(*) FROM card AS T1 INNER JOIN disp AS T2 ON T1.disp_id = T2.disp_id WHERE T1.type = 'gold' AND T2.type = 'DISPONENT'\t----- bird -----\tfinancial",
    "140": "SELECT COUNT(T1.account_id) FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.A2 = 'Pisek'\t----- bird -----\tfinancial",
    "141": "SELECT DISTINCT T3.A2 FROM trans AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T1.amount > 10000 AND T1.date LIKE '1997%'\t----- bird -----\tfinancial",
    "142": "SELECT T1.account_id FROM \"order\" AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T1.k_symbol = 'SIPO' AND T3.A2 = 'Pisek'\t----- bird -----\tfinancial",
    "143": "SELECT account_id FROM disp WHERE disp_id IN ( SELECT disp_id FROM card WHERE type = 'gold' ) INTERSECT SELECT account_id FROM disp WHERE disp_id IN ( SELECT disp_id FROM card WHERE type = 'junior' )\t----- bird -----\tfinancial",
    "144": "SELECT AVG(T1.amount) FROM trans AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T1.operation = 'VYBER KARTOU' AND T1.date LIKE '2021%'\t----- bird -----\tfinancial",
    "145": "SELECT T1.client_id FROM disp AS T1 INNER JOIN card AS T2 ON T1.disp_id = T2.disp_id WHERE T1.account_id IN (SELECT account_id FROM (SELECT account_id, strftime('%Y-%m', date) as month, SUM(amount) as total_amount FROM trans WHERE operation = 'VYBER KARTOU' AND strftime('%Y', date) = '1998' GROUP BY account_id, month) WHERE total_amount < (SELECT AVG(total_amount) as avg_amount FROM (SELECT account_id, strftime('%Y-%m', date) as month, SUM(amount) as total_amount FROM trans WHERE operation = 'VYBER KARTOU' AND strftime('%Y', date) = '1998' GROUP BY account_id, month) GROUP BY month))\t----- bird -----\tfinancial",
    "146": "SELECT T1.client_id FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN card AS T3 ON T2.disp_id = T3.disp_id INNER JOIN loan AS T4 ON T2.account_id = T4.account_id WHERE T1.gender = 'F'\t----- bird -----\tfinancial",
    "147": "SELECT COUNT(D.account_id) FROM client C JOIN disp D ON C.client_id = D.client_id JOIN account A ON D.account_id = A.account_id JOIN district DI ON A.district_id = DI.district_id WHERE C.gender = 'F' AND DI.A3 = 'south Bohemia'\t----- bird -----\tfinancial",
    "148": "SELECT T1.account_id FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.A2 = 'Tabor'\t----- bird -----\tfinancial",
    "149": "SELECT DISTINCT T1.frequency FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.account_id NOT IN (SELECT account_id FROM loan) AND 8000 < T2.A11 AND T2.A11 <= 9000\t----- bird -----\tfinancial",
    "150": "SELECT COUNT(DISTINCT T1.account_id) FROM account T1 INNER JOIN district T2 ON T1.district_id = T2.district_id INNER JOIN trans T3 ON T1.account_id = T3.account_id WHERE T2.A3 = 'North Bohemia' AND T3.bank = 'AB'\t----- bird -----\tfinancial",
    "151": "SELECT DISTINCT T2.A2 FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id INNER JOIN trans AS T3 ON T1.account_id = T3.account_id WHERE T3.type LIKE 'VYDAJ'\t----- bird -----\tfinancial",
    "152": "SELECT AVG(A15) FROM district WHERE A15 > 4000 AND district_id IN ( SELECT district_id FROM account WHERE date >= '1997-01-01' )\t----- bird -----\tfinancial",
    "153": "SELECT COUNT(*) FROM card AS T1 INNER JOIN disp AS T2 ON T1.disp_id = T2.disp_id WHERE T1.type = 'classic' AND T2.type = 'OWNER'\t----- bird -----\tfinancial",
    "154": "SELECT COUNT(T1.client_id) FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.gender = 'M' AND T2.A2 = 'Hl.m. Praha'\t----- bird -----\tfinancial",
    "155": "SELECT (CAST(SUM(CASE WHEN type = 'gold' AND issued < '1998-01-01' THEN 1 ELSE 0 END) AS FLOAT) / COUNT(*) * 100) AS percent FROM card\t----- bird -----\tfinancial",
    "156": "SELECT T1.client_id FROM disp AS T1 INNER JOIN client AS T2 ON T1.client_id = T2.client_id WHERE T1.account_id = ( SELECT account_id FROM loan ORDER BY amount DESC LIMIT 1 ) AND T1.type = 'OWNER'\t----- bird -----\tfinancial",
    "157": "SELECT T2.A15 FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.account_id = 532\t----- bird -----\tfinancial",
    "158": "SELECT T1.district_id FROM account AS T1 INNER JOIN \"order\" AS T2 ON T1.account_id = T2.account_id WHERE T2.order_id = 33333\t----- bird -----\tfinancial",
    "159": "SELECT * FROM trans AS T1 INNER JOIN disp AS T2 ON T1.account_id = T2.account_id WHERE T1.operation = 'VYBER' AND T2.client_id = 3356\t----- bird -----\tfinancial",
    "160": "SELECT COUNT(*) FROM account AS T1 INNER JOIN loan AS T2 ON T1.account_id = T2.account_id WHERE T1.frequency = 'POPLATEK TYDNE' AND T2.amount < 200000\t----- bird -----\tfinancial",
    "161": "SELECT T2.type FROM disp AS T1 INNER JOIN card AS T2 ON T1.disp_id = T2.disp_id WHERE T1.client_id = 13539\t----- bird -----\tfinancial",
    "162": "SELECT T2.A3 FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.client_id = 3541\t----- bird -----\tfinancial",
    "163": "SELECT T1.A2 FROM district AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id INNER JOIN loan AS T3 ON T2.account_id = T3.account_id WHERE T3.status = 'A' GROUP BY T1.A2 ORDER BY COUNT(*) DESC LIMIT 1\t----- bird -----\tfinancial",
    "164": "SELECT T1.client_id FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN \"order\" AS T3 ON T2.account_id = T3.account_id WHERE T3.order_id = 32423\t----- bird -----\tfinancial",
    "165": "SELECT T1.trans_id, T1.date, T1.type, T1.operation, T1.amount, T1.balance FROM trans AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T2.district_id = 5\t----- bird -----\tfinancial",
    "166": "SELECT COUNT(T1.account_id) FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.A2 = 'Jesenik'\t----- bird -----\tfinancial",
    "167": "SELECT T2.client_id FROM card AS T1 INNER JOIN disp AS T2 ON T1.disp_id = T2.disp_id WHERE T1.type = 'junior' AND T1.issued >= '1997-01-01'\t----- bird -----\tfinancial",
    "168": "SELECT (SELECT CAST(COUNT(*) AS FLOAT) FROM client WHERE district_id IN (SELECT district_id FROM district WHERE A11 > 10000) AND gender = 'F') / (SELECT CAST(COUNT(*) AS FLOAT) FROM client WHERE district_id IN (SELECT district_id FROM district WHERE A11 > 10000)) * 100\t----- bird -----\tfinancial",
    "169": "SELECT (( (SELECT SUM(T2.amount) FROM client AS T1 INNER JOIN disp AS T3 ON T1.client_id = T3.client_id INNER JOIN loan AS T2 ON T3.account_id = T2.account_id WHERE T1.gender = 'M' AND T2.date LIKE '1997%') - (SELECT SUM(T2.amount) FROM client AS T1 INNER JOIN disp AS T3 ON T1.client_id = T3.client_id INNER JOIN loan AS T2 ON T3.account_id = T2.account_id WHERE T1.gender = 'M' AND T2.date LIKE '1996%') ) / (SELECT SUM(T2.amount) FROM client AS T1 INNER JOIN disp AS T3 ON T1.client_id = T3.client_id INNER JOIN loan AS T2 ON T3.account_id = T2.account_id WHERE T1.gender = 'M' AND T2.date LIKE '1996%') ) * 100 AS growth_rate\t----- bird -----\tfinancial",
    "170": "SELECT COUNT(*) FROM trans WHERE operation = 'VYBER KARTOU' AND date > '1995-12-31'\t----- bird -----\tfinancial",
    "171": "SELECT SUM(CASE WHEN A3 = 'East Bohemia' THEN A16 ELSE 0 END) - SUM(CASE WHEN A3 = 'North Bohemia' THEN A16 ELSE 0 END) AS difference_in_crimes FROM district\t----- bird -----\tfinancial",
    "172": "SELECT type, COUNT(type) FROM disp WHERE account_id BETWEEN 1 AND 10 AND type IN ('OWNER', 'DISPONENT') GROUP BY type\t----- bird -----\tfinancial",
    "173": "SELECT COUNT(*), k_symbol FROM trans WHERE account_id = 3 AND amount = 3539\t----- bird -----\tfinancial",
    "174": "SELECT STRFTIME('%Y', T1.birth_date) FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id WHERE T2.account_id = 130 AND T2.type = 'OWNER'\t----- bird -----\tfinancial",
    "175": "SELECT COUNT(DISTINCT T1.account_id) FROM disp AS T1 INNER JOIN trans AS T2 ON T1.account_id = T2.account_id WHERE T1.type = 'OWNER' AND T2.operation = 'POPLATEK PO OBRATU'\t----- bird -----\tfinancial",
    "176": "SELECT loan.amount, loan.status FROM loan INNER JOIN disp ON loan.account_id = disp.account_id WHERE disp.client_id = 992\t----- bird -----\tfinancial",
    "177": "SELECT SUM(T3.balance), T1.gender FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN trans AS T3 ON T2.account_id = T3.account_id WHERE T1.client_id = 4 AND T3.trans_id > 851 AND T2.type = 'OWNER'\t----- bird -----\tfinancial",
    "178": "SELECT T1.type FROM card AS T1 INNER JOIN disp AS T2 ON T1.disp_id = T2.disp_id WHERE T2.client_id = 9\t----- bird -----\tfinancial",
    "179": "SELECT SUM(T3.amount) FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN trans AS T3 ON T2.account_id = T3.account_id WHERE T1.client_id = 617 AND T3.date LIKE '1998%'\t----- bird -----\tfinancial",
    "180": "SELECT client.client_id FROM client INNER JOIN account ON client.district_id = account.district_id INNER JOIN district ON account.district_id = district.district_id WHERE client.birth_date BETWEEN '1983-01-01' AND '1987-12-31' AND district.A3 = 'East Bohemia'\t----- bird -----\tfinancial",
    "181": "SELECT T1.client_id FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN loan AS T3 ON T2.account_id = T3.account_id WHERE T1.gender='F' ORDER BY T3.amount DESC LIMIT 3\t----- bird -----\tfinancial",
    "182": "SELECT * FROM table\t----- bird -----\tfinancial",
    "183": "SELECT COUNT(account.account_id) FROM account JOIN district ON account.district_id = district.district_id WHERE district.A3 = 'Beroun' AND account.date > '1996'\t----- bird -----\tfinancial",
    "184": "SELECT COUNT(*) FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN card AS T3 ON T2.disp_id = T3.disp_id WHERE T1.gender = 'F' AND T3.type = 'junior'\t----- bird -----\tfinancial",
    "185": "SELECT (COUNT(DISTINCT CASE WHEN client.gender = 'F' THEN client.client_id END) * 100.0) / COUNT(DISTINCT client.client_id) FROM client JOIN disp ON client.client_id = disp.client_id JOIN account ON disp.account_id = account.account_id JOIN district ON account.district_id = district.district_id WHERE district.A3 = 'Prague'\t----- bird -----\tfinancial",
    "186": "SELECT (COUNT(DISTINCT CASE WHEN T1.gender = 'M' THEN T1.client_id END) * 100.0 / COUNT(DISTINCT T1.client_id)) as male_percentage FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN account AS T3 ON T2.account_id = T3.account_id WHERE T3.frequency = 'POPLATEK TYDNE'\t----- bird -----\tfinancial",
    "187": "SELECT COUNT(DISTINCT T2.client_id) FROM account AS T1 INNER JOIN disp AS T2 ON T1.account_id = T2.account_id WHERE T1.frequency = 'POPLATEK TYDNE' AND T2.type = 'USER'\t----- bird -----\tfinancial",
    "188": "SELECT T1.account_id, MIN(T1.amount) FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T1.duration > 24 AND T2.date < '1997-01-01'\t----- bird -----\tfinancial",
    "189": "SELECT T1.account_id FROM disp AS T1 INNER JOIN client AS T2 ON T1.client_id = T2.client_id INNER JOIN account AS T3 ON T1.account_id = T3.account_id INNER JOIN district AS T4 ON T2.district_id = T4.district_id WHERE T2.gender = 'F' AND T2.birth_date = ( SELECT MIN(birth_date) FROM client WHERE gender = 'F' ) AND T4.A11 = ( SELECT MIN(A11) FROM district )\t----- bird -----\tfinancial",
    "190": "SELECT COUNT(T1.client_id) FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.birth_date LIKE '1920%' AND T2.A3 = 'east Bohemia'\t----- bird -----\tfinancial",
    "191": "SELECT COUNT(account_id) FROM loan WHERE duration = 24\t----- bird -----\tfinancial",
    "192": "SELECT AVG(T1.amount) FROM loan AS T1 INNER JOIN trans AS T2 ON T1.account_id = T2.account_id WHERE T1.status IN ('C', 'D') AND T2.operation = 'POPLATEK PO OBRATU'\t----- bird -----\tfinancial",
    "193": "SELECT T1.client_id, T3.A2 AS district FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN district AS T3 ON T1.district_id = T3.district_id WHERE T2.type = 'OWNER'\t----- bird -----\tfinancial",
    "194": "SELECT T1.client_id, DATE('now') - T1.birth_date AS age FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN loan AS T3 ON T2.account_id = T3.account_id WHERE T1.client_id IN (SELECT client_id FROM disp WHERE disp_id IN (SELECT disp_id FROM card WHERE type = 'gold'))\t----- bird -----\tfinancial",
    "195": "SELECT bond_type, COUNT(bond_type) AS count FROM bond GROUP BY bond_type ORDER BY count DESC LIMIT 1\t----- bird -----\ttoxicology",
    "196": "SELECT COUNT(*) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '-' AND T1.element = 'cl'\t----- bird -----\ttoxicology",
    "197": "SELECT AVG(count) FROM (SELECT COUNT(*) as count FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T1.element = 'o' AND T3.bond_type = '-' GROUP BY T1.molecule_id)\t----- bird -----\ttoxicology",
    "198": "SELECT COUNT(DISTINCT(T1.molecule_id)) FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '-' AND T2.label = '+'\t----- bird -----\ttoxicology",
    "199": "SELECT COUNT(*) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'na' AND T2.label = '-'\t----- bird -----\ttoxicology",
    "200": "SELECT T1.molecule_id FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '#' AND T2.label = '+'\t----- bird -----\ttoxicology",
    "201": "SELECT     (COUNT(case when a.element = 'c' then 1 end) * 1.0 / COUNT(a.atom_id)) * 100 as percentage_of_carbon FROM     atom a JOIN     bond b on a.molecule_id = b.molecule_id WHERE     b.bond_type = '=';\t----- bird -----\ttoxicology",
    "202": "SELECT COUNT(*) FROM bond WHERE bond_type = '#'\t----- bird -----\ttoxicology",
    "203": "SELECT COUNT(*) FROM atom WHERE element != 'br'\t----- bird -----\ttoxicology",
    "204": "SELECT COUNT(*) FROM molecule WHERE molecule_id BETWEEN 'TR000' AND 'TR099' AND label = '+'\t----- bird -----\ttoxicology",
    "205": "SELECT molecule.molecule_id FROM molecule JOIN atom ON molecule.molecule_id = atom.molecule_id WHERE atom.element = 'si'\t----- bird -----\ttoxicology",
    "206": "SELECT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id OR T1.atom_id = T2.atom_id2 WHERE T2.bond_id = 'TR004_8_9'\t----- bird -----\ttoxicology",
    "207": "SELECT DISTINCT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_type = '='\t----- bird -----\ttoxicology",
    "208": "SELECT T2.label FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'h' GROUP BY T2.label ORDER BY COUNT(*) DESC LIMIT 1\t----- bird -----\ttoxicology",
    "209": "SELECT T2.bond_type FROM elements AS T1 INNER JOIN bonds AS T2 ON T1.element_id = T2.element_id WHERE T1.element = 'te'\t----- bird -----\ttoxicology",
    "210": "SELECT T1.atom_id, T1.atom_id2 FROM connected AS T1 INNER JOIN bond AS T2 ON T1.bond_id = T2.bond_id WHERE T2.bond_type = '-'\t----- bird -----\ttoxicology",
    "211": "SELECT T1.atom_id, T1.atom_id2 FROM connected AS T1 INNER JOIN atom AS T2 ON T1.atom_id = T2.atom_id INNER JOIN molecule AS T3 ON T2.molecule_id = T3.molecule_id WHERE T3.label = '-'\t----- bird -----\ttoxicology",
    "212": "SELECT T1.element FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '-' GROUP BY T1.element ORDER BY COUNT(*) ASC LIMIT 1\t----- bird -----\ttoxicology",
    "213": "SELECT T2.bond_type FROM connected AS T1 INNER JOIN bond AS T2 ON T1.bond_id = T2.bond_id WHERE T1.atom_id = 'TR004_8' AND T1.atom_id2 = 'TR004_20'\t----- bird -----\ttoxicology",
    "214": "SELECT DISTINCT T2.label FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'sn'\t----- bird -----\ttoxicology",
    "215": "SELECT COUNT(DISTINCT atom_id) FROM atom WHERE element IN ('i', 's') AND atom_id IN (SELECT atom_id FROM connected WHERE bond_id IN (SELECT bond_id FROM bond WHERE bond_type = '-'))\t----- bird -----\ttoxicology",
    "216": "SELECT T1.atom_id, T1.atom_id2 FROM connected AS T1 INNER JOIN bond AS T2 ON T1.bond_id = T2.bond_id WHERE T2.bond_type = '#'\t----- bird -----\ttoxicology",
    "217": "SELECT T2.atom_id2 FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T1.molecule_id = 'TR181'\t----- bird -----\ttoxicology",
    "218": "SELECT (SELECT COUNT(DISTINCT molecule_id) FROM molecule WHERE label = '+') - (SELECT COUNT(DISTINCT T1.molecule_id) FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '+' AND T2.element = 'f') * 100.0 / (SELECT COUNT(DISTINCT molecule_id) FROM molecule WHERE label = '+') AS percentage\t----- bird -----\ttoxicology",
    "219": "SELECT (CAST(SUM(CASE WHEN T1.bond_type = '#' THEN 1 ELSE 0 END) AS REAL) / COUNT(T1.bond_id)) * 100 AS percent FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+'\t----- bird -----\ttoxicology",
    "220": "SELECT element FROM atom WHERE molecule_id = 'TR000' ORDER BY element ASC LIMIT 3\t----- bird -----\ttoxicology",
    "221": "SELECT T2.atom_id, T2.atom_id2 FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id WHERE T1.molecule_id = 'TR001' AND T1.bond_id = 'TR001_2_6'\t----- bird -----\ttoxicology",
    "222": "SELECT (SELECT COUNT(*) FROM molecule WHERE label = '+') - (SELECT COUNT(*) FROM molecule WHERE label = '-') AS difference\t----- bird -----\ttoxicology",
    "223": "SELECT atom_id, atom_id2 FROM connected WHERE bond_id = 'TR_000_2_5'\t----- bird -----\ttoxicology",
    "224": "SELECT bond_id FROM connected WHERE atom_id2 = 'TR000_2'\t----- bird -----\ttoxicology",
    "225": "SELECT T1.molecule_id FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.bond_type = '=' ORDER BY T1.molecule_id ASC LIMIT 5\t----- bird -----\ttoxicology",
    "226": "SELECT (SUM(bond_type = '=') * 100.0 / COUNT(bond_id)) as percentage FROM bond WHERE molecule_id = 'TR008'\t----- bird -----\ttoxicology",
    "227": "SELECT CAST(SUM(CASE WHEN label = '+' THEN 1 ELSE 0 END) AS FLOAT) / COUNT(molecule_id) * 100 as percent FROM molecule\t----- bird -----\ttoxicology",
    "228": "SELECT (COUNT(case when element = 'h' then 1 else null end) * 100.0 / COUNT(*)) as percent FROM atom WHERE molecule_id = 'TR206'\t----- bird -----\ttoxicology",
    "229": "SELECT bond_type FROM bond WHERE molecule_id = 'TR000'\t----- bird -----\ttoxicology",
    "230": "SELECT T1.element, T2.label FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.molecule_id = 'TR060'\t----- bird -----\ttoxicology",
    "231": "SELECT T1.bond_type, T2.label FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.molecule_id = 'TR018' GROUP BY T1.bond_type ORDER BY COUNT(*) DESC LIMIT 1\t----- bird -----\ttoxicology",
    "232": "SELECT T1.molecule_id FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.bond_type = '-' AND T1.label = '-' ORDER BY T1.molecule_id ASC LIMIT 3\t----- bird -----\ttoxicology",
    "233": "SELECT bond_id, bond_type FROM bond WHERE molecule_id = 'TR006' ORDER BY bond_id ASC LIMIT 2\t----- bird -----\ttoxicology",
    "234": "SELECT COUNT(*) FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id WHERE T1.molecule_id = 'TR009' AND (T2.atom_id = 'TR009_12' OR T2.atom_id2 = 'TR009_12')\t----- bird -----\ttoxicology",
    "235": "SELECT COUNT(DISTINCT T1.molecule_id) FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '+' AND T2.element = 'br'\t----- bird -----\ttoxicology",
    "236": "SELECT T1.bond_type, T2.atom_id, T2.atom_id2 FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id WHERE T1.bond_id = 'TR001_6_9'\t----- bird -----\ttoxicology",
    "237": "SELECT T1.molecule_id, T2.label FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.atom_id = 'TR001_10'\t----- bird -----\ttoxicology",
    "238": "SELECT count(DISTINCT molecule_id) FROM bond WHERE bond_type = '#'\t----- bird -----\ttoxicology",
    "239": "SELECT COUNT(*) FROM connected WHERE atom_id LIKE 'TR%_19' OR atom_id2 LIKE 'TR%_19'\t----- bird -----\ttoxicology",
    "240": "SELECT element FROM atom WHERE molecule_id = 'TR004'\t----- bird -----\ttoxicology",
    "241": "SELECT COUNT(molecule_id) FROM molecule WHERE label = '-'\t----- bird -----\ttoxicology",
    "242": "SELECT T2.molecule_id FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE CAST(SUBSTR(T1.atom_id, 7, 2) AS INTEGER) BETWEEN 21 AND 25 AND T2.label = '+'\t----- bird -----\ttoxicology",
    "243": "SELECT T3.bond_id FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T1.element IN ('p', 'n') GROUP BY T3.bond_id HAVING COUNT(DISTINCT T1.element) = 2\t----- bird -----\ttoxicology",
    "244": "SELECT label FROM molecule WHERE molecule_id = (SELECT molecule_id FROM bond WHERE bond_type = '=' GROUP BY molecule_id ORDER BY COUNT(bond_id) DESC LIMIT 1)\t----- bird -----\ttoxicology",
    "245": "SELECT COUNT(T2.bond_id) / COUNT(T1.atom_id) FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T1.element = 'i'\t----- bird -----\ttoxicology",
    "246": "SELECT T1.bond_type, T1.bond_id FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id WHERE CAST(SUBSTR(T2.atom_id, 7, 2) AS INTEGER) = 45\t----- bird -----\ttoxicology",
    "247": "SELECT element FROM atom WHERE atom_id NOT IN (SELECT atom_id FROM connected)\t----- bird -----\ttoxicology",
    "248": "SELECT T1.atom_id, T1.atom_id2 FROM connected AS T1 INNER JOIN bond AS T2 ON T1.bond_id = T2.bond_id WHERE T2.molecule_id = 'TR447' AND T2.bond_type = '#'\t----- bird -----\ttoxicology",
    "249": "SELECT element FROM atom WHERE atom_id = 'TR144_8_19'\t----- bird -----\ttoxicology",
    "250": "SELECT T1.molecule_id, COUNT(*) as cnt FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '+' AND T2.bond_type = '=' GROUP BY T1.molecule_id ORDER BY cnt DESC LIMIT 1\t----- bird -----\ttoxicology",
    "251": "SELECT T1.element FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+' GROUP BY T1.element ORDER BY COUNT(*) ASC LIMIT 1\t----- bird -----\ttoxicology",
    "252": "SELECT atom_id2 FROM connected WHERE atom_id = ( SELECT atom_id FROM atom WHERE element = 'pb' )\t----- bird -----\ttoxicology",
    "253": "SELECT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_type = '#'\t----- bird -----\ttoxicology",
    "254": "SELECT (SELECT COUNT(*) FROM (SELECT COUNT(*) AS num FROM (SELECT a1.element, a2.element FROM connected INNER JOIN atom AS a1 ON connected.atom_id = a1.atom_id INNER JOIN atom AS a2 ON connected.atom_id2 = a2.atom_id) GROUP BY element ORDER BY num DESC LIMIT 1)) / CAST((SELECT COUNT(*) FROM connected) AS FLOAT) * 100 AS percentage\t----- bird -----\ttoxicology",
    "255": "SELECT (CAST(SUM(CASE WHEN T1.label = '+' THEN 1 ELSE 0 END) AS REAL) / COUNT(*)) * 100 FROM bond AS T2 INNER JOIN molecule AS T1 ON T2.molecule_id = T1.molecule_id WHERE T2.bond_type = '-'\t----- bird -----\ttoxicology",
    "256": "SELECT COUNT(*) FROM atom WHERE element IN ('c', 'h')\t----- bird -----\ttoxicology",
    "257": "SELECT connected.atom_id2 FROM atom INNER JOIN connected ON atom.atom_id = connected.atom_id WHERE atom.element = 's'\t----- bird -----\ttoxicology",
    "258": "SELECT T2.bond_type FROM atom AS T1 INNER JOIN connected AS T3 ON T1.atom_id = T3.atom_id INNER JOIN bond AS T2 ON T3.bond_id = T2.bond_id WHERE T1.element = 'sn'\t----- bird -----\ttoxicology",
    "259": "SELECT COUNT(DISTINCT T1.element) FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.bond_type = '-'\t----- bird -----\ttoxicology",
    "260": "SELECT COUNT(*) FROM atom WHERE atom_id IN ( SELECT atom_id FROM connected WHERE bond_id IN ( SELECT bond_id FROM bond WHERE bond_type = '#' ) ) AND ( element = 'p' OR element = 'br' )\t----- bird -----\ttoxicology",
    "261": "SELECT T1.bond_id FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+'\t----- bird -----\ttoxicology",
    "262": "SELECT T1.molecule_id FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '-' AND T2.label = '-'\t----- bird -----\ttoxicology",
    "263": "SELECT (COUNT(T1.element = 'cl') * 100 / COUNT(T1.atom_id)) as percent FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_type = '-' AND T1.element = 'cl'\t----- bird -----\ttoxicology",
    "264": "SELECT label FROM molecule WHERE molecule_id IN ('TR000', 'TR001', 'TR002')\t----- bird -----\ttoxicology",
    "265": "SELECT molecule_id FROM molecule WHERE label = '-'\t----- bird -----\ttoxicology",
    "266": "SELECT COUNT(*) FROM molecule WHERE molecule_id BETWEEN 'TR000' AND 'TR030' AND label = '+'\t----- bird -----\ttoxicology",
    "267": "SELECT bond_type FROM bond WHERE molecule_id BETWEEN 'TR000' AND 'TR050'\t----- bird -----\ttoxicology",
    "268": "SELECT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T2.bond_id = 'TR001_10_11' UNION SELECT T3.element FROM atom AS T3 INNER JOIN connected AS T4 ON T3.atom_id = T4.atom_id2 WHERE T4.bond_id = 'TR001_10_11'\t----- bird -----\ttoxicology",
    "269": "SELECT COUNT(DISTINCT connected.bond_id) FROM atom INNER JOIN connected ON atom.atom_id = connected.atom_id OR atom.atom_id = connected.atom_id2 WHERE atom.element = 'i'\t----- bird -----\ttoxicology",
    "270": "SELECT label, COUNT(*) as count FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'ca' GROUP BY label ORDER BY count DESC LIMIT 1\t----- bird -----\ttoxicology",
    "271": "SELECT (SELECT COUNT(*) FROM atom INNER JOIN connected ON atom.atom_id = connected.atom_id WHERE connected.bond_id = 'TR001_1_8' AND atom.element = 'cl') > 0 AND (SELECT COUNT(*) FROM atom INNER JOIN connected ON atom.atom_id = connected.atom_id WHERE connected.bond_id = 'TR001_1_8' AND atom.element = 'c') > 0\t----- bird -----\ttoxicology",
    "272": "SELECT T1.molecule_id FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN atom AS T3 ON T1.molecule_id = T3.molecule_id WHERE T2.bond_type = '#' AND T1.label = '-' AND T3.element = 'c' LIMIT 2\t----- bird -----\ttoxicology",
    "273": "SELECT (CAST(SUM(CASE WHEN T1.element = 'cl' THEN 1 ELSE 0 END) AS REAL) / COUNT(*)) * 100 AS percentage FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+'\t----- bird -----\ttoxicology",
    "274": "SELECT atom.element FROM atom INNER JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.molecule_id = 'TR001'\t----- bird -----\ttoxicology",
    "275": "SELECT molecule_id FROM bond WHERE bond_type = '='\t----- bird -----\ttoxicology",
    "276": "SELECT atom_id, atom_id2 FROM molecule_table WHERE bond_type = '#'\t----- bird -----\ttoxicology",
    "277": "SELECT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id OR T1.atom_id = T2.atom_id2 WHERE T2.bond_id = 'TR005_16_26'\t----- bird -----\ttoxicology",
    "278": "SELECT COUNT(DISTINCT molecule_id) FROM bond INNER JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE bond.bond_type = '-' AND molecule.label = '-'\t----- bird -----\ttoxicology",
    "279": "SELECT T2.label FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_id = 'TR001_10_11'\t----- bird -----\ttoxicology",
    "280": "SELECT bond.bond_id, molecule.label FROM bond INNER JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE bond.bond_type = '#'\t----- bird -----\ttoxicology",
    "281": "SELECT element, COUNT(*) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+' AND SUBSTR(T1.atom_id, 7, 1) = '4' GROUP BY element\t----- bird -----\ttoxicology",
    "282": "SELECT T2.label, CAST(SUM(CASE WHEN T1.element = 'h' THEN 1 ELSE 0 END) AS REAL) / COUNT(*) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.molecule_id = 'TR006'\t----- bird -----\ttoxicology",
    "283": "SELECT T2.label FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'ca'\t----- bird -----\ttoxicology",
    "284": "SELECT bond.bond_type FROM atom INNER JOIN connected ON atom.atom_id = connected.atom_id INNER JOIN bond ON connected.bond_id = bond.bond_id WHERE atom.element = 'te'\t----- bird -----\ttoxicology",
    "285": "SELECT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id OR T1.atom_id = T2.atom_id2 WHERE T2.bond_id = 'TR001_10_11'\t----- bird -----\ttoxicology",
    "286": "SELECT CAST(SUM(CASE WHEN bond_type = '#' THEN 1 ELSE 0 END) AS float) / CAST(COUNT(*) AS float) * 100 AS percentage FROM bond\t----- bird -----\ttoxicology",
    "287": "SELECT 100.0 * SUM(CASE WHEN bond_type = '=' THEN 1 ELSE 0 END) / COUNT(*) as percent FROM bond WHERE molecule_id = 'TR047'\t----- bird -----\ttoxicology",
    "288": "SELECT T2.label FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.atom_id = 'TR001_1'\t----- bird -----\ttoxicology",
    "289": "SELECT label FROM molecule WHERE molecule_id = 'TR151'\t----- bird -----\ttoxicology",
    "290": "SELECT element FROM atom WHERE molecule_id = 'TR151'\t----- bird -----\ttoxicology",
    "291": "SELECT COUNT(*) FROM molecule WHERE label = '+'\t----- bird -----\ttoxicology",
    "292": "SELECT atom_id, molecule_id, element FROM atom JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE element = 'c' AND substr(molecule_id, 3, 3) >= '010' AND substr(molecule_id, 3, 3) <= '050'\t----- bird -----\ttoxicology",
    "293": "SELECT COUNT(T1.atom_id) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+'\t----- bird -----\ttoxicology",
    "294": "SELECT bond.bond_id FROM bond INNER JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE bond.bond_type = '=' AND molecule.label = '+'\t----- bird -----\ttoxicology",
    "295": "SELECT COUNT(T1.atom_id) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'h' AND T2.label = '+'\t----- bird -----\ttoxicology",
    "296": "SELECT T1.molecule_id FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id WHERE T1.bond_id = 'TR00_1_2' AND T2.atom_id = 'TR00_1'\t----- bird -----\ttoxicology",
    "297": "SELECT atom.atom_id FROM atom JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE atom.element = 'c' AND molecule.label = '-'\t----- bird -----\ttoxicology",
    "298": "SELECT CAST(SUM(CASE WHEN T1.label = '+' AND T2.element = 'h' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id\t----- bird -----\ttoxicology",
    "299": "SELECT label FROM molecule WHERE molecule_id='TR124'\t----- bird -----\ttoxicology",
    "300": "SELECT atom_id FROM atom WHERE molecule_id = 'TR186'\t----- bird -----\ttoxicology",
    "301": "SELECT bond_type FROM bond WHERE bond_id = 'TR007_4_19'\t----- bird -----\ttoxicology",
    "302": "SELECT T1.element FROM atom AS T1 WHERE T1.atom_id IN (SELECT T2.atom_id FROM connected AS T2 WHERE T2.bond_id = 'TR001_2_4')\t----- bird -----\ttoxicology",
    "303": "SELECT COUNT(T1.bond_id), T2.label FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '=' AND T1.molecule_id = 'TR006'\t----- bird -----\ttoxicology",
    "304": "SELECT T1.molecule_id, T2.element FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '+'\t----- bird -----\ttoxicology",
    "305": "SELECT T1.bond_id, T2.atom_id, T2.atom_id2 FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id WHERE T1.bond_type = '-'\t----- bird -----\ttoxicology",
    "306": "SELECT T1.molecule_id, GROUP_CONCAT(T1.element) FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.bond_type = '#' GROUP BY T1.molecule_id\t----- bird -----\ttoxicology",
    "307": "SELECT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id OR T1.atom_id = T2.atom_id2 WHERE T2.bond_id = 'TR000_2_3'\t----- bird -----\ttoxicology",
    "308": "SELECT COUNT(DISTINCT T2.bond_id) FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T1.element = 'cl'\t----- bird -----\ttoxicology",
    "309": "SELECT atom.atom_id, COUNT(bond.bond_type) FROM atom INNER JOIN bond ON atom.molecule_id = bond.molecule_id WHERE atom.molecule_id = 'TR346' GROUP BY atom.atom_id\t----- bird -----\ttoxicology",
    "310": "SELECT COUNT(DISTINCT T1.molecule_id) FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.bond_type = '=' AND T1.label = '+'\t----- bird -----\ttoxicology",
    "311": "SELECT COUNT(DISTINCT molecule_id) FROM bond WHERE molecule_id NOT IN (SELECT DISTINCT molecule_id FROM atom WHERE element = 's') AND bond_type != '='\t----- bird -----\ttoxicology",
    "312": "SELECT T2.label FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_id = 'TR001_2_4'\t----- bird -----\ttoxicology",
    "313": "SELECT COUNT(*) FROM atom WHERE molecule_id = 'TR005'\t----- bird -----\ttoxicology",
    "314": "SELECT count(*) FROM bond WHERE bond_type = '-'\t----- bird -----\ttoxicology",
    "315": "SELECT T2.molecule_id FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'cl' AND T2.label = '+'\t----- bird -----\ttoxicology",
    "316": "SELECT T1.molecule_id FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.element = 'c' AND T1.label = '-'\t----- bird -----\ttoxicology",
    "317": "SELECT (SELECT COUNT(DISTINCT T1.molecule_id) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+' AND T1.element = 'cl') * 100.0 / (SELECT COUNT(*) FROM molecule) AS percentage\t----- bird -----\ttoxicology",
    "318": "SELECT molecule_id FROM bond WHERE bond_id = 'TR001_1_7'\t----- bird -----\ttoxicology",
    "319": "None. The question does not provide enough information to write a precise SQL query. The table schema and data do not contain any column for the element. Therefore, it's impossible to answer the question with the given data.\t----- bird -----\ttoxicology",
    "320": "SELECT T1.bond_type FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id WHERE T2.atom_id = 'TR000_1' AND T2.atom_id2 = 'TR000_2'\t----- bird -----\ttoxicology",
    "321": "SELECT molecule_id FROM atom WHERE atom_id IN (\"TR000_2\", \"TR000_4\")\t----- bird -----\ttoxicology",
    "322": "SELECT element FROM atom WHERE atom_id = 'TR000_1'\t----- bird -----\ttoxicology",
    "323": "SELECT label FROM molecule WHERE molecule_id = 'TR000'\t----- bird -----\ttoxicology",
    "324": "SELECT CAST(SUM(CASE WHEN T1.bond_type = '-' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id INNER JOIN atom AS T3 ON T2.atom_id = T3.atom_id\t----- bird -----\ttoxicology",
    "325": "SELECT COUNT(DISTINCT T1.molecule_id) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'n' AND T2.label = '+'\t----- bird -----\ttoxicology",
    "326": "SELECT T1.molecule_id FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T1.atom_id IN ( SELECT atom_id FROM atom WHERE element = 's' ) AND T3.bond_type = '='\t----- bird -----\ttoxicology",
    "327": "SELECT T1.molecule_id FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '-' GROUP BY T1.molecule_id HAVING COUNT(*) > 5\t----- bird -----\ttoxicology",
    "328": "SELECT A.element FROM atom A INNER JOIN bond B ON A.molecule_id = B.molecule_id INNER JOIN molecule M ON A.molecule_id = M.molecule_id WHERE B.bond_type = '=' AND M.molecule_id = 'TR024'\t----- bird -----\ttoxicology",
    "329": "SELECT T1.molecule_id, COUNT(T2.atom_id) AS NumOfAtoms FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '+' GROUP BY T1.molecule_id ORDER BY NumOfAtoms DESC LIMIT 1\t----- bird -----\ttoxicology",
    "330": "SELECT (SELECT COUNT(DISTINCT molecule_id) FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE a.element = 'h' AND b.bond_type = '#' AND m.label = '+') * 100.0 / COUNT(DISTINCT molecule_id) FROM molecule WHERE label = '+'\t----- bird -----\ttoxicology",
    "331": "SELECT COUNT(*) FROM molecule WHERE label = '+'\t----- bird -----\ttoxicology",
    "332": "SELECT COUNT(DISTINCT T1.molecule_id) FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '-' AND T1.molecule_id BETWEEN 'TR004' AND 'TR010'\t----- bird -----\ttoxicology",
    "333": "SELECT COUNT(*) AS Carbon_count FROM atom JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE atom.molecule_id = 'TR008' AND atom.element = 'c'\t----- bird -----\ttoxicology",
    "334": "SELECT T1.element FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.atom_id = 'TR004_7' AND T2.label = '-'\t----- bird -----\ttoxicology",
    "335": "SELECT COUNT(DISTINCT atom.molecule_id) FROM atom JOIN bond ON atom.molecule_id = bond.molecule_id WHERE atom.element = 'o' AND bond.bond_type = '='.\t----- bird -----\ttoxicology",
    "336": "SELECT COUNT(DISTINCT T1.molecule_id) FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '#' AND T2.label = '-'\t----- bird -----\ttoxicology",
    "337": "SELECT atom.element, bond.bond_type FROM atom JOIN bond ON atom.molecule_id = bond.molecule_id WHERE atom.molecule_id = 'TR016'\t----- bird -----\ttoxicology",
    "338": "SELECT atom.atom_id FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE atom.element = 'c' AND bond.bond_type = '=' AND molecule.molecule_id = 'TR012'\t----- bird -----\ttoxicology",
    "339": "SELECT atom.atom_id FROM atom INNER JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.label = '+' AND atom.element = 'o'\t----- bird -----\ttoxicology",
    "340": "SELECT id, cardKingdomFoilId FROM cards WHERE cardKingdomFoilId = cardKingdomId AND cardKingdomId IS NOT NULL\t----- bird -----\tcard_games",
    "341": "SELECT * FROM cards WHERE borderColor = 'borderless' AND (cardKingdomFoilId IS NULL OR cardKingdomId IS NULL)\t----- bird -----\tcard_games",
    "342": "SELECT name FROM cards WHERE faceConvertedManaCost = (SELECT MAX(faceConvertedManaCost) FROM cards)\t----- bird -----\tcard_games",
    "343": "SELECT name FROM cards WHERE frameVersion = '2015' AND edhrecRank < 100\t----- bird -----\tcard_games",
    "344": "SELECT T1.* FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.rarity = 'mythic' AND T2.status = 'Banned' AND T2.format = 'gladiator'\t----- bird -----\tcard_games",
    "345": "SELECT T2.status FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.types LIKE '%Artifact%' AND T1.isAlternative = 0 AND T2.format = 'vintage'\t----- bird -----\tcard_games",
    "346": "SELECT T1.id FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE (T1.power = '*' OR T1.power IS NULL) AND T2.format = 'commander' AND T2.status = 'Legal'\t----- bird -----\tcard_games",
    "347": "SELECT T2.text FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.uuid = T2.uuid WHERE T1.artist = 'Stephen Daniele' AND T1.hasContentWarning = 1\t----- bird -----\tcard_games",
    "348": "SELECT R1.text FROM cards AS C1 INNER JOIN rulings AS R1 ON C1.uuid = R1.uuid WHERE C1.name = 'Sublime Epiphany' AND C1.number = '74s'\t----- bird -----\tcard_games",
    "349": "SELECT T1.text, T1.isPromo FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.uuid = T2.uuid WHERE T1.uuid = ( SELECT uuid FROM rulings GROUP BY uuid ORDER BY COUNT(uuid) DESC LIMIT 1 )\t----- bird -----\tcard_games",
    "350": "SELECT T2.language FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.name = 'Annul' AND T1.number = '29'\t----- bird -----\tcard_games",
    "351": "SELECT T1.name FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.language = 'Japanese'\t----- bird -----\tcard_games",
    "352": "SELECT (SELECT COUNT(*) FROM foreign_data WHERE language = 'Chinese Simplified')*100.0 / COUNT(*) as percentage FROM foreign_data\t----- bird -----\tcard_games",
    "353": "SELECT T2.name, T2.totalSetSize FROM foreign_data AS T1 INNER JOIN sets AS T2 ON T1.uuid = T2.code WHERE T1.language = 'Italian'\t----- bird -----\tcard_games",
    "354": "SELECT COUNT(DISTINCT type) FROM cards WHERE artist = 'Aaron Boyd'\t----- bird -----\tcard_games",
    "355": "SELECT keywords FROM cards WHERE name = 'Angel of Mercy'\t----- bird -----\tcard_games",
    "356": "SELECT COUNT(*) FROM cards WHERE power = '*'\t----- bird -----\tcard_games",
    "357": "SELECT promoTypes FROM cards WHERE name = 'Duress'\t----- bird -----\tcard_games",
    "358": "SELECT borderColor FROM cards WHERE name = 'Ancestor's Chosen'\t----- bird -----\tcard_games",
    "359": "SELECT originalType FROM cards WHERE name = 'Ancestor''s Chosen'\t----- bird -----\tcard_games",
    "360": "SELECT sets.language FROM cards JOIN sets ON cards.setCode = sets.code WHERE cards.name = 'Angel of Mercy'\t----- bird -----\tcard_games",
    "361": "SELECT COUNT(T1.id) FROM legalities AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T1.status = 'restricted' AND T2.isTextless = 0\t----- bird -----\tcard_games",
    "362": "SELECT T2.text FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.uuid = T2.uuid WHERE T1.name = 'Condemn'\t----- bird -----\tcard_games",
    "363": "SELECT COUNT(*) FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T2.status = 'restricted' AND T1.isStarter = 1\t----- bird -----\tcard_games",
    "364": "SELECT T2.status FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.name = 'Cloudchaser Eagle'\t----- bird -----\tcard_games",
    "365": "SELECT type FROM cards WHERE name = 'Benalish Knight'\t----- bird -----\tcard_games",
    "366": "SELECT rulings.text FROM cards INNER JOIN rulings ON cards.uuid = rulings.uuid WHERE cards.name = 'Benalish Knight'\t----- bird -----\tcard_games",
    "367": "SELECT * FROM table\t----- bird -----\tcard_games",
    "368": "SELECT (CAST(COUNT(id) AS FLOAT) WHERE borderColor = 'borderless') / COUNT(id) * 100 FROM cards\t----- bird -----\tcard_games",
    "369": "SELECT COUNT(T1.id) FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.language = 'German' AND T1.isReprint = 1\t----- bird -----\tcard_games",
    "370": "SELECT COUNT(*) FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.borderColor = 'borderless' AND T2.language = 'Russian'\t----- bird -----\tcard_games",
    "371": "SELECT (SELECT COUNT(*) FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.isStorySpotlight = 1 AND T2.language = 'French') * 100.0 / (SELECT COUNT(*) FROM cards WHERE isStorySpotlight = 1)\t----- bird -----\tcard_games",
    "372": "SELECT COUNT(id) FROM cards WHERE toughness = '99'\t----- bird -----\tcard_games",
    "373": "SELECT name FROM cards WHERE artist = 'Aaron Boyd'\t----- bird -----\tcard_games",
    "374": "SELECT COUNT(*) FROM cards WHERE borderColor = 'black' AND availability = 'mtgo'\t----- bird -----\tcard_games",
    "375": "SELECT id FROM cards WHERE convertedManaCost = 0\t----- bird -----\tcard_games",
    "376": "SELECT layout FROM cards WHERE keywords = 'Flying';\t----- bird -----\tcard_games",
    "377": "SELECT COUNT(*) FROM cards WHERE originalType = 'Summon - Angel' AND subtypes != 'Angel';\t----- bird -----\tcard_games",
    "378": "SELECT id FROM cards WHERE cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL\t----- bird -----\tcard_games",
    "379": "SELECT id FROM cards WHERE duelDeck = 'a'\t----- bird -----\tcard_games",
    "380": "SELECT edhrecRank FROM cards WHERE frameVersion = '2015'\t----- bird -----\tcard_games",
    "381": "SELECT T1.artist FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.language = 'Chinese Simplified'\t----- bird -----\tcard_games",
    "382": "SELECT T1.name FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.availability = 'paper' AND T2.language = 'Japanese'\t----- bird -----\tcard_games",
    "383": "SELECT COUNT(*) FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T2.status = 'Banned' AND T1.borderColor = 'white'\t----- bird -----\tcard_games",
    "384": "SELECT T1.uuid, T2.language FROM legalities AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.format = 'legacy'\t----- bird -----\tcard_games",
    "385": "SELECT T1.text FROM rulings AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T2.name = 'Beacon of Immortality'\t----- bird -----\tcard_games",
    "386": "SELECT COUNT(T1.id), T2.status FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.frameVersion = 'future' AND T2.status = 'legal'\t----- bird -----\tcard_games",
    "387": "SELECT cards.id FROM cards INNER JOIN sets ON cards.setCode = sets.code WHERE sets.code = 'OGW'\t----- bird -----\tcard_games",
    "388": "SELECT T1.text, T3.language FROM cards AS T1 INNER JOIN foreign_data AS T3 ON T1.uuid = T3.uuid WHERE T1.setCode = '10E' AND T1.convertedManaCost = 5\t----- bird -----\tcard_games",
    "389": "SELECT T1.name, T2.date FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.uuid = T2.uuid WHERE T1.originalType = 'Creature - Elf'\t----- bird -----\tcard_games",
    "390": "SELECT T1.colors, T2.format FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.id BETWEEN 1 AND 20\t----- bird -----\tcard_games",
    "391": "SELECT fd.name FROM cards AS c INNER JOIN foreign_data AS fd ON c.uuid = fd.uuid WHERE c.originalType LIKE 'Artifact' AND fd.language IS NOT NULL\t----- bird -----\tcard_games",
    "392": "SELECT T1.name FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.uuid = T2.uuid WHERE T1.rarity = 'uncommon' ORDER BY T2.date ASC LIMIT 3\t----- bird -----\tcard_games",
    "393": "SELECT COUNT(*) FROM cards WHERE artist = 'John Avon' AND hasFoil = 1 AND power NOT IN (NULL, '*')\t----- bird -----\tcard_games",
    "394": "SELECT COUNT(*) FROM cards WHERE borderColor = 'white' AND cardKingdomFoilId = cardKingdomId AND cardKingdomId is not null\t----- bird -----\tcard_games",
    "395": "SELECT COUNT(*) FROM cards WHERE artist = 'UDON' AND availability = 'mtgo' AND hand = '-1'\t----- bird -----\tcard_games",
    "396": "SELECT COUNT(*) FROM cards WHERE hasContentWarning = 1 AND availability LIKE '%paper%' AND frameVersion = '1993'\t----- bird -----\tcard_games",
    "397": "SELECT manaCost FROM cards WHERE availability LIKE '%paper%' AND availability LIKE '%mtgo%' AND frameVersion = '2003' AND borderColor = 'black'\t----- bird -----\tcard_games",
    "398": "SELECT SUM(CAST(SUBSTR(manaCost, 2, LENGTH(manaCost) - 2) AS INTEGER)) FROM cards WHERE artist = 'Rob Alexander'\t----- bird -----\tcard_games",
    "399": "SELECT subtypes, supertypes FROM cards WHERE availability = 'arena'\t----- bird -----\tcard_games",
    "400": "SELECT sets.code FROM foreign_data JOIN sets ON foreign_data.multiverseid = sets.id WHERE foreign_data.language = 'Spanish'\t----- bird -----\tcard_games",
    "401": "SELECT 100.0 * COUNT(CASE WHEN hand = '+3' THEN 1 END) / COUNT(id) AS percentage FROM cards WHERE frameEffects = 'legendary'\t----- bird -----\tcard_games",
    "402": "SELECT id, CAST(SUM(CASE WHEN isStorySpotlight = 1 AND isTextless = 0 THEN 1 ELSE 0 END) AS FLOAT) / COUNT(*) * 100 AS percentage FROM cards\t----- bird -----\tcard_games",
    "403": "SELECT name, (COUNT(id) WHERE language = 'Spanish') / COUNT(id) * 100 as percentage FROM foreign_data\t----- bird -----\tcard_games",
    "404": "SELECT DISTINCT T2.language FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.setCode = ( SELECT code FROM sets WHERE baseSetSize = 309 )\t----- bird -----\tcard_games",
    "405": "SELECT COUNT(DISTINCT sets.code) FROM sets JOIN foreign_data ON sets.id = foreign_data.id WHERE sets.block = 'Commander' AND foreign_data.language = 'Portuguese (Brasil)'\t----- bird -----\tcard_games",
    "406": "SELECT T1.id FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.types = 'Creature' AND T2.status = 'Legal'\t----- bird -----\tcard_games",
    "407": "SELECT T2.subtypes, T2.supertypes FROM foreign_data AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T1.language = 'German' AND T2.subtypes IS NOT NULL AND T2.supertypes IS NOT NULL\t----- bird -----\tcard_games",
    "408": "SELECT COUNT(*) FROM cards WHERE power IS NULL AND text LIKE '%enters the battlefield%'\t----- bird -----\tcard_games",
    "409": "SELECT COUNT(*) FROM cards JOIN legalities ON cards.uuid = legalities.uuid JOIN rulings ON cards.uuid = rulings.uuid WHERE cards.side IS NULL AND legalities.format = 'pre-modern' AND rulings.text = 'This is a triggered mana ability'\t----- bird -----\tcard_games",
    "410": "SELECT T1.id FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.artist = 'Erica Yang' AND T2.format = 'pauper' AND T1.availability LIKE '%paper%'\t----- bird -----\tcard_games",
    "411": "SELECT T1.artist FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.text = \"Das perfekte Gegenmittel zu einer dichten Formation\"\t----- bird -----\tcard_games",
    "412": "SELECT T2.name FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.borderColor = 'black' AND T1.type LIKE '%Creature%' AND T1.artist = 'Matthew D. Wilson' AND T2.language = 'French'\t----- bird -----\tcard_games",
    "413": "SELECT COUNT(*) FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.uuid = T2.uuid WHERE T1.rarity = 'rare' AND T2.date = '2009-01-10'\t----- bird -----\tcard_games",
    "414": "SELECT language FROM foreign_data WHERE uuid = ( SELECT id FROM sets WHERE baseSetSize = 180 AND block = 'Ravnica' AND type = 'core' )\t----- bird -----\tcard_games",
    "415": "SELECT CAST(SUM(CASE WHEN T1.hasContentWarning = 0 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T2.id) FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T2.format = 'commander' AND T2.status = 'legal'\t----- bird -----\tcard_games",
    "416": "SELECT (CAST(COUNT(*) AS REAL) / (SELECT COUNT(*) FROM cards WHERE power IS NULL OR power = '*'))*100 FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE (T1.power IS NULL OR T1.power = '*') AND T2.language = 'French'\t----- bird -----\tcard_games",
    "417": "SELECT (CAST(COUNT(*) AS REAL) / (SELECT COUNT(*) FROM foreign_data WHERE language = 'Japanese')) * 100 FROM foreign_data AS T1 INNER JOIN sets AS T2 ON T1.uuid = T2.code WHERE T1.language = 'Japanese' AND T2.type = 'expansion'\t----- bird -----\tcard_games",
    "418": "SELECT availability FROM cards WHERE artist = 'Daren Bader'\t----- bird -----\tcard_games",
    "419": "SELECT COUNT(*) FROM cards WHERE borderColor = 'borderless' AND edhrecRank > 12000\t----- bird -----\tcard_games",
    "420": "SELECT COUNT(*) FROM cards WHERE isOversized = 1 AND isReprint = 1 AND isPromo = 1\t----- bird -----\tcard_games",
    "421": "SELECT id FROM cards WHERE (power IS NULL OR power = '*') AND promoTypes = 'arenaleague' ORDER BY id ASC LIMIT 3\t----- bird -----\tcard_games",
    "422": "SELECT language FROM foreign_data WHERE multiverseid = 149934\t----- bird -----\tcard_games",
    "423": "SELECT id, cardKingdomFoilId, cardKingdomId FROM cards WHERE cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL ORDER BY cardKingdomFoilId ASC LIMIT 3\t----- bird -----\tcard_games",
    "424": "SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM cards)) as proportion FROM cards WHERE isTextless = 1 AND layout = 'normal'\t----- bird -----\tcard_games",
    "425": "SELECT number FROM cards WHERE side is null AND subtypes LIKE '%Angel%' AND subtypes LIKE '%Wizard%'\t----- bird -----\tcard_games",
    "426": "SELECT id, name FROM sets WHERE mtgoCode IS NULL or mtgoCode = '' ORDER BY name ASC LIMIT 3\t----- bird -----\tcard_games",
    "427": "SELECT T1.language FROM foreign_data AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid INNER JOIN sets AS T3 ON T2.setCode = T3.code WHERE T3.mcmName = 'Archenemy' AND T3.code = 'ARC' Please note that 'setCode' should be a column in the 'cards' table that references 'code' in the 'sets' table for this query to work. If a column like this does not exist, then the query cannot be fixed without modifying the database schema.\t----- bird -----\tcard_games",
    "428": "SELECT name FROM sets WHERE id = 5\t----- bird -----\tcard_games",
    "429": "SELECT type FROM sets WHERE id = 206\t----- bird -----\tcard_games",
    "430": "SELECT s.id, s.name FROM sets AS s INNER JOIN cards AS c ON s.code = c.printings INNER JOIN foreign_data AS f ON c.uuid = f.uuid WHERE f.language = 'Italian' AND s.block = 'Shadowmoor' ORDER BY s.name ASC LIMIT 2\t----- bird -----\tcard_games",
    "431": "SELECT sets.id FROM sets JOIN cards ON sets.code = cards.setCode JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE foreign_data.language = 'Japanese' AND sets.isForeignOnly = 0 AND sets.isFoilOnly = 1\t----- bird -----\tcard_games",
    "432": "SELECT sets.name, MAX(sets.baseSetSize) FROM sets INNER JOIN cards ON sets.code = cards.setCode INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE foreign_data.language = 'Russian'\t----- bird -----\tcard_games",
    "433": "SELECT CAST(COUNT(*) AS REAL) / (SELECT COUNT(*) FROM cards) * 100 FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.language = 'Chinese Simplified' AND T1.isOnlineOnly = 1\t----- bird -----\tcard_games",
    "434": "SELECT * FROM table\t----- bird -----\tcard_games",
    "435": "SELECT COUNT(*) AS Number_of_cards, id FROM cards WHERE borderColor = 'black'\t----- bird -----\tcard_games",
    "436": "SELECT id FROM cards WHERE frameEffects = 'extendedart'\t----- bird -----\tcard_games",
    "437": "SELECT name FROM cards WHERE borderColor = 'black' AND isFullArt = 1\t----- bird -----\tcard_games",
    "438": "SELECT language FROM set_translations WHERE id = 174\t----- bird -----\tcard_games",
    "439": "SELECT name FROM sets WHERE code = 'ALL'\t----- bird -----\tcard_games",
    "440": "SELECT language FROM foreign_data WHERE name = 'A Pedra Fellwar'\t----- bird -----\tcard_games",
    "441": "SELECT code FROM sets WHERE releaseDate = '2007-07-13'\t----- bird -----\tcard_games",
    "442": "SELECT baseSetSize, code FROM sets WHERE block IN ('Masques', 'Mirage')\t----- bird -----\tcard_games",
    "443": "SELECT code FROM sets WHERE type = 'expansion'\t----- bird -----\tcard_games",
    "444": "SELECT T2.name, T2.type FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.watermark = 'Boros'\t----- bird -----\tcard_games",
    "445": "SELECT T2.language, T2.flavorText, T2.type FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.watermark = 'colorpie'\t----- bird -----\tcard_games",
    "446": "SELECT (CAST(SUM(CASE WHEN T1.convertedManaCost = 10 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*)) AS percentage FROM cards AS T1 INNER JOIN sets AS T2 ON T1.id = T2.id WHERE T2.name = 'Abyssal Horror'\t----- bird -----\tcard_games",
    "447": "SELECT code FROM sets WHERE type = 'commander'\t----- bird -----\tcard_games",
    "448": "SELECT T2.name, T2.type FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.watermark = 'abzan'\t----- bird -----\tcard_games",
    "449": "SELECT T2.language, T2.type FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.watermark = 'azorius'\t----- bird -----\tcard_games",
    "450": "SELECT * FROM table\t----- bird -----\tcard_games",
    "451": "SELECT COUNT(*) FROM cards WHERE availability LIKE '%paper%' AND hand LIKE '+%'\t----- bird -----\tcard_games",
    "452": "SELECT name FROM cards WHERE isTextless = 0\t----- bird -----\tcard_games",
    "453": "SELECT manaCost FROM cards WHERE asciiName = 'Ancestor`s Chosen'\t----- bird -----\tcard_games",
    "454": "SELECT COUNT(*) FROM cards WHERE borderColor = 'white' AND (power = '*' OR power IS NULL)\t----- bird -----\tcard_games",
    "455": "SELECT name FROM cards WHERE isPromo = 1 AND side IS NOT NULL\t----- bird -----\tcard_games",
    "456": "SELECT subtypes, supertypes FROM cards WHERE name = 'Molimo, Maro-Sorcerer'\t----- bird -----\tcard_games",
    "457": "SELECT purchaseUrls FROM cards WHERE promoTypes = 'bundle'\t----- bird -----\tcard_games",
    "458": "SELECT COUNT(DISTINCT artist) FROM cards WHERE borderColor = 'black' AND availability LIKE '%arena%' AND availability LIKE '%mtgo%'\t----- bird -----\tcard_games",
    "459": "SELECT name, convertedManaCost FROM cards WHERE name = 'Serra Angel' OR name = 'Shrine Keeper'\t----- bird -----\tcard_games",
    "460": "SELECT artist FROM cards WHERE flavorName = 'Battra, Dark Destroyer'\t----- bird -----\tcard_games",
    "461": "SELECT name FROM cards WHERE frameVersion = '2003' ORDER BY convertedManaCost DESC LIMIT 3\t----- bird -----\tcard_games",
    "462": "SELECT T1.translation FROM set_translations AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T1.language = 'Italian' AND T2.name = ( SELECT name FROM cards WHERE name = 'Ancestor's Chosen' )\t----- bird -----\tcard_games",
    "463": "SELECT COUNT(translation) FROM set_translations WHERE setCode = ( SELECT setCode FROM cards WHERE name = 'Angel of Mercy' )\t----- bird -----\tcard_games",
    "464": "SELECT T1.name FROM cards AS T1 INNER JOIN set_translations AS T2 ON T1.setCode = T2.setCode WHERE T2.translation = 'Hauptset Zehnte Edition'\t----- bird -----\tcard_games",
    "465": "SELECT COUNT(*) FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.name = 'Ancestor's Chosen' AND T2.language = 'Korean'\t----- bird -----\tcard_games",
    "466": "SELECT COUNT(*) FROM cards WHERE artist = 'Adam Rex'\t----- bird -----\tcard_games",
    "467": "SELECT T1.baseSetSize FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.translation = 'Hauptset Zehnte Edition'\t----- bird -----\tcard_games",
    "468": "SELECT translation FROM set_translations WHERE setCode = '8E' AND language = 'Simplified Chinese'\t----- bird -----\tcard_games",
    "469": "SELECT CASE WHEN EXISTS (SELECT 1 FROM cards WHERE name = 'Angel of Mercy' AND availability LIKE '%mtgo%') THEN 'Yes' ELSE 'No' END\t----- bird -----\tcard_games",
    "470": "SELECT T2.releaseDate FROM cards AS T1 INNER JOIN sets AS T2 ON T1.id = T2.id WHERE T1.name = 'Ancestor''s Chosen'\t----- bird -----\tcard_games",
    "471": "SELECT type FROM sets WHERE name = 'Hauptset Zehnte Edition'\t----- bird -----\tcard_games",
    "472": "SELECT COUNT(DISTINCT T1.code) FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.block = 'Ice Age' AND T2.language = 'Italian'\t----- bird -----\tcard_games",
    "473": "SELECT sets.isForeignOnly FROM sets INNER JOIN cards ON sets.id = cards.id WHERE cards.name = 'Adarkar Valkyrie'\t----- bird -----\tcard_games",
    "474": "SELECT COUNT(DISTINCT sets.code) FROM sets INNER JOIN set_translations ON sets.code = set_translations.setCode WHERE set_translations.language = 'Italian' AND sets.baseSetSize < 10\t----- bird -----\tcard_games",
    "475": "SELECT COUNT(T1.id) FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.name = 'Coldsnap' AND T1.borderColor = 'black'\t----- bird -----\tcard_games",
    "476": "SELECT cards.name FROM cards WHERE id IN ( SELECT id FROM sets WHERE name = 'Coldsnap' ) AND convertedManaCost = ( SELECT MAX(convertedManaCost) FROM cards WHERE id IN ( SELECT id FROM sets WHERE name = 'Coldsnap' ) )\t----- bird -----\tcard_games",
    "477": "The provided schema does not allow us to answer the question. We need an additional table or additional columns that connect the \"cards\" and \"sets\" tables.\t----- bird -----\tcard_games",
    "478": "SELECT name FROM cards WHERE number = '4' NOTE: This will not provide the correct answer as it does not account for the set name 'Coldsnap'. Without additional information on how the cards and sets tables are linked, it is impossible to correct the query completely.\t----- bird -----\tcard_games",
    "479": "UNDEFINED\t----- bird -----\tcard_games",
    "480": "SELECT T1.flavorText FROM foreign_data AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T1.language = 'Italian' AND T2.name = 'Ancestor''s Chosen'\t----- bird -----\tcard_games",
    "481": "SELECT foreign_data.language FROM cards INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE cards.name = 'Ancestor''s Chosen' AND foreign_data.flavorText IS NOT NULL\t----- bird -----\tcard_games",
    "482": "SELECT T2.type FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.name = 'Ancestor''s Chosen' AND T2.language = 'German'\t----- bird -----\tcard_games",
    "483": "SELECT T2.text FROM sets AS T1 INNER JOIN foreign_data AS T2 ON T1.id = T2.id WHERE T1.name = 'Coldsnap' AND T2.language = 'Italian'\t----- bird -----\tcard_games",
    "484": "SELECT T3.name FROM sets AS T1 INNER JOIN cards AS T2 ON T1.code = T2.name INNER JOIN foreign_data AS T3 ON T2.uuid = T3.uuid WHERE T1.name = 'Coldsnap' AND T3.language = 'Italian' AND T2.convertedManaCost = (SELECT MAX(convertedManaCost) FROM cards WHERE name IN (SELECT name FROM sets WHERE name = 'Coldsnap'))\t----- bird -----\tcard_games",
    "485": "SELECT T2.date FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.uuid = T2.uuid WHERE T1.name = 'Reminisce'\t----- bird -----\tcard_games",
    "486": "SELECT (CAST(SUM(CASE WHEN T1.convertedManaCost = 7 THEN 1 ELSE 0 END) AS REAL) / CAST(SUM(CASE WHEN T1.convertedManaCost IS NOT NULL THEN 1 ELSE 0 END) AS REAL)) * 100 FROM cards AS T1 INNER JOIN sets AS T2 ON T2.code = T1.set WHERE T2.name = 'Coldsnap'\t----- bird -----\tcard_games",
    "487": "SELECT (SELECT COUNT(*) FROM cards INNER JOIN sets ON cards.id = sets.id WHERE sets.name = 'Coldsnap' AND cards.cardKingdomFoilId = cards.cardKingdomId AND cards.cardKingdomId IS NOT NULL) / CAST((SELECT COUNT(*) FROM cards INNER JOIN sets ON cards.id = sets.id WHERE sets.name = 'Coldsnap') AS FLOAT) * 100\t----- bird -----\tcard_games",
    "488": "SELECT code FROM sets WHERE releaseDate = '2017-07-14'\t----- bird -----\tcard_games",
    "489": "SELECT keyruneCode FROM sets WHERE code = 'PKHC'\t----- bird -----\tcard_games",
    "490": "SELECT mcmId FROM sets WHERE code = 'SS2'\t----- bird -----\tcard_games",
    "491": "SELECT * FROM table\t----- bird -----\tcard_games",
    "492": "SELECT type FROM sets WHERE name LIKE 'From the Vault: Lore'\t----- bird -----\tcard_games",
    "493": "SELECT parentCode FROM sets WHERE name = 'Commander 2014 Oversized'\t----- bird -----\tcard_games",
    "494": "SELECT T1.text, T2.hasContentWarning FROM rulings AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T2.artist = 'Jim Pavelec'\t----- bird -----\tcard_games",
    "495": "SELECT T2.releaseDate FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T1.name = 'Evacuation'\t----- bird -----\tcard_games",
    "496": "SELECT sets.baseSetSize FROM sets INNER JOIN set_translations ON sets.code = set_translations.setCode WHERE set_translations.translation = 'Rinascita di Alara'\t----- bird -----\tcard_games",
    "497": "SELECT type FROM sets WHERE name = 'Huiti\u00e8me \u00e9dition'\t----- bird -----\tcard_games",
    "498": "SELECT translation FROM set_translations WHERE language = 'French' AND setCode = (SELECT setCode FROM cards WHERE name = 'Tendo Ice Bridge')\t----- bird -----\tcard_games",
    "499": "SELECT COUNT(translation) FROM set_translations WHERE \"setCode\" = 'Salvat 2011' AND translation IS NOT NULL\t----- bird -----\tcard_games",
    "500": "SELECT T1.translation FROM set_translations AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code INNER JOIN cards AS T3 ON T3.id = T2.id WHERE T1.language = 'Japanese' AND T3.name = 'Fellwar Stone'\t----- bird -----\tcard_games",
    "501": "SELECT T1.name FROM cards AS T1 INNER JOIN sets AS T2 ON T1.set_id = T2.id WHERE T2.name = 'Journey into Nyx Hero''s Path' ORDER BY T1.convertedManaCost DESC LIMIT 1\t----- bird -----\tcard_games",
    "502": "SELECT releaseDate FROM sets WHERE name = 'Ola de fr\u00edo'\t----- bird -----\tcard_games",
    "503": "SELECT type FROM sets WHERE id = (SELECT id FROM cards WHERE name = 'Samite Pilgrim')\t----- bird -----\tcard_games",
    "504": "SELECT COUNT(*) FROM cards AS T1 INNER JOIN sets AS T2 ON T1.set_id = T2.id WHERE T2.name = 'World Championship Decks 2004' AND T1.convertedManaCost = 3Without a proper column to join the tables, it's not possible to answer the question with the available information or current database design.\t----- bird -----\tcard_games",
    "505": "SELECT translation FROM set_translations WHERE language = 'Chinese Simplified' AND setCode = (SELECT code FROM sets WHERE name = 'Mirrodin')\t----- bird -----\tcard_games",
    "506": "SELECT (SUM(CASE WHEN T1.hasFoil = 0 AND T1.hasNonFoil = 1 THEN 1 ELSE 0 END) / CAST(COUNT(CASE WHEN T2.language = 'Japanese' THEN 1 ELSE NULL END) AS FLOAT)) * 100 AS percentage FROM cards AS T1 INNER JOIN set_translations AS T2 ON T1.id = T2.id WHERE T2.language = 'Japanese'\t----- bird -----\tcard_games",
    "507": "SELECT CAST(SUM(CASE WHEN T1.isOnlineOnly = 1 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM cards AS T1 INNER JOIN set_translations AS T2 ON T1.id = T2.id WHERE T2.language = 'Portuguese (Brazil)'\t----- bird -----\tcard_games",
    "508": "SELECT availability FROM cards WHERE artist = 'Aleksi Briclot' and isTextless = 1\t----- bird -----\tcard_games",
    "509": "SELECT id FROM sets ORDER BY baseSetSize DESC LIMIT 1\t----- bird -----\tcard_games",
    "510": "SELECT artist FROM cards WHERE faceConvertedManaCost IS NULL ORDER BY convertedManaCost DESC LIMIT 1\t----- bird -----\tcard_games",
    "511": "SELECT frameEffects FROM cards WHERE cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL GROUP BY frameEffects ORDER BY COUNT(*) DESC LIMIT 1\t----- bird -----\tcard_games",
    "512": "SELECT COUNT(*) FROM cards WHERE (power IS NULL OR power = '*') AND hasFoil = 0 AND duelDeck = 'a'\t----- bird -----\tcard_games",
    "513": "SELECT id, MAX(totalSetSize) FROM sets WHERE type = 'commander' ORDER BY totalSetSize DESC LIMIT 1\t----- bird -----\tcard_games",
    "514": "SELECT name, manaCost FROM cards WHERE duelDeck = 'duel' ORDER BY LENGTH(manaCost) DESC, manaCost DESC LIMIT 10\t----- bird -----\tcard_games",
    "515": "SELECT min(T1.originalReleaseDate), T2.format FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.rarity = 'mythic' AND T2.status = 'legal'\t----- bird -----\tcard_games",
    "516": "SELECT COUNT(T1.id) FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.artist = 'Volkan Ba\u00c7\u00b5a' AND T2.language = 'French'\t----- bird -----\tcard_games",
    "517": "SELECT COUNT(*) FROM (SELECT cards.uuid FROM cards JOIN legalities ON cards.uuid = legalities.uuid WHERE cards.rarity = 'rare' AND cards.type = 'Enchantment' AND cards.name = 'Abundance' AND legalities.status = 'Legal' GROUP BY cards.uuid HAVING COUNT(DISTINCT legalities.format) = (SELECT COUNT(DISTINCT format) FROM legalities))\t----- bird -----\tcard_games",
    "518": "SELECT T1.format, T2.name FROM (SELECT format, uuid FROM legalities WHERE status = 'banned' GROUP BY format ORDER BY COUNT(*) DESC LIMIT 1) AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid\t----- bird -----\tcard_games",
    "519": "SELECT language FROM set_translations WHERE translation = 'Battlebond'\t----- bird -----\tcard_games",
    "520": "SELECT T2.format FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.artist = ( SELECT artist FROM ( SELECT artist, COUNT(artist) as count FROM cards GROUP BY artist ORDER BY count ASC ) LIMIT 1 )\t----- bird -----\tcard_games",
    "521": "SELECT T2.status FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.frameVersion = '1997' AND T1.artist = 'D. Alexander Gregory' AND T1.hasContentWarning = 1 AND T2.format = 'legacy'\t----- bird -----\tcard_games",
    "522": "SELECT T1.name, T2.format FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.edhrecRank = 1 AND T2.status = 'banned'\t----- bird -----\tcard_games",
    "523": "SELECT T1.language FROM set_translations AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.releaseDate BETWEEN '2012-01-01' AND '2015-12-31' GROUP BY T1.language ORDER BY COUNT(T1.language) DESC LIMIT 1\t----- bird -----\tcard_games",
    "524": "SELECT artist FROM cards WHERE borderColor = 'black' AND availability = 'arena'\t----- bird -----\tcard_games",
    "525": "SELECT T1.uuid FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T2.format = 'oldschool' AND (T2.status = 'banned' OR T2.status = 'restricted')\t----- bird -----\tcard_games",
    "526": "SELECT COUNT(*) FROM cards WHERE artist = 'Matthew D. Wilson' AND availability = 'paper'\t----- bird -----\tcard_games",
    "527": "SELECT T2.text FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.uuid = T2.uuid WHERE T1.artist = 'Kev Walker' ORDER BY T2.date DESC\t----- bird -----\tcard_games",
    "528": "SELECT T1.name, T2.format FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.id IN ( SELECT id FROM sets WHERE name = 'Hour of Devastation' ) AND T2.status = 'Legal'\t----- bird -----\tcard_games",
    "529": "SELECT T1.name FROM sets AS T1 WHERE T1.code IN (SELECT setCode FROM set_translations WHERE language = 'Korean' AND setCode NOT IN (SELECT setCode FROM set_translations WHERE language = 'Japanese'))\t----- bird -----\tcard_games",
    "530": "SELECT T1.frameVersion, T1.name FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.artist = 'Allen Williams' AND T2.status = 'banned'\t----- bird -----\tcard_games",
    "531": "SELECT DisplayName, Reputation FROM users WHERE DisplayName = 'Harlan' OR DisplayName = 'Jarrod Dixon' ORDER BY Reputation DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "532": "SELECT DisplayName FROM users WHERE strftime('%Y', CreationDate) = '2014'\t----- bird -----\tcodebase_community",
    "533": "SELECT COUNT(*) FROM users WHERE LastAccessDate > '2014-09-01 00:00:00'\t----- bird -----\tcodebase_community",
    "534": "SELECT DisplayName FROM users ORDER BY Views DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "535": "SELECT COUNT(Id) FROM users WHERE UpVotes > 100 AND DownVotes > 1\t----- bird -----\tcodebase_community",
    "536": "SELECT COUNT(Id) FROM users WHERE Views > 10 AND strftime('%Y', CreationDate) > '2013'\t----- bird -----\tcodebase_community",
    "537": "SELECT COUNT(T1.Id) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'csgillespie'\t----- bird -----\tcodebase_community",
    "538": "SELECT T1.Title FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'csgillespie'\t----- bird -----\tcodebase_community",
    "539": "SELECT users.DisplayName FROM posts INNER JOIN users ON posts.OwnerUserId = users.Id WHERE posts.Title = 'Eliciting priors from experts'\t----- bird -----\tcodebase_community",
    "540": "SELECT Title FROM posts WHERE OwnerUserId = ( SELECT Id FROM users WHERE DisplayName = 'csgillespie' ) ORDER BY ViewCount DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "541": "SELECT DisplayName FROM users WHERE Id = ( SELECT OwnerUserId FROM posts WHERE FavoriteCount = ( SELECT MAX(FavoriteCount) FROM posts ) )\t----- bird -----\tcodebase_community",
    "542": "SELECT SUM(T2.CommentCount) FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T1.DisplayName = 'csgillespie'\t----- bird -----\tcodebase_community",
    "543": "SELECT MAX(AnswerCount) FROM posts WHERE OwnerDisplayName = 'csgillespie'\t----- bird -----\tcodebase_community",
    "544": "SELECT u.DisplayName FROM posts AS p INNER JOIN users AS u ON p.LastEditorUserId = u.Id WHERE p.Title = \"Examples for teaching: Correlation does not mean causation\"\t----- bird -----\tcodebase_community",
    "545": "SELECT COUNT(T1.Id) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'csgillespie' AND T1.ParentId IS NULL\t----- bird -----\tcodebase_community",
    "546": "SELECT DISTINCT T1.DisplayName FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T2.ClosedDate IS NOT NULL\t----- bird -----\tcodebase_community",
    "547": "SELECT COUNT(*) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.Age > 65 AND T1.Score >= 20\t----- bird -----\tcodebase_community",
    "548": "SELECT T2.Location FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T1.Title = 'Eliciting priors from experts'\t----- bird -----\tcodebase_community",
    "549": "SELECT posts.Body FROM posts INNER JOIN tags ON posts.Id = tags.ExcerptPostId WHERE tags.TagName = 'bayesian'\t----- bird -----\tcodebase_community",
    "550": "SELECT T1.Body FROM posts AS T1 INNER JOIN tags AS T2 ON T1.Id = T2.ExcerptPostId WHERE T2.Count = ( SELECT MAX(Count) FROM tags )\t----- bird -----\tcodebase_community",
    "551": "SELECT COUNT(*) FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.DisplayName = 'csgillespie'\t----- bird -----\tcodebase_community",
    "552": "SELECT badges.Name FROM badges INNER JOIN users ON badges.UserId = users.Id WHERE users.DisplayName = 'csgillespie'\t----- bird -----\tcodebase_community",
    "553": "SELECT COUNT(badges.Name) FROM badges INNER JOIN users ON badges.UserId = users.Id WHERE users.DisplayName = \"csgillespie\" AND badges.Date LIKE '2011%'\t----- bird -----\tcodebase_community",
    "554": "SELECT DisplayName FROM users WHERE Id = (SELECT UserId FROM (SELECT UserId, COUNT(Id) AS Num_badges FROM badges GROUP BY UserId ORDER BY Num_badges DESC LIMIT 1))\t----- bird -----\tcodebase_community",
    "555": "SELECT AVG(T1.Score) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'csgillespie'\t----- bird -----\tcodebase_community",
    "556": "SELECT CAST(COUNT(T1.Id) AS REAL) / COUNT(DISTINCT T2.DisplayName) FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.Views > 200\t----- bird -----\tcodebase_community",
    "557": "SELECT (SELECT COUNT(*) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T1.Score > 20 AND T2.Age > 65) * 100.0 / COUNT(*) FROM posts WHERE Score > 20\t----- bird -----\tcodebase_community",
    "558": "SELECT COUNT(*) FROM votes WHERE UserId = 58 AND CreationDate = '2010-07-19'\t----- bird -----\tcodebase_community",
    "559": "SELECT CreationDate FROM votes GROUP BY CreationDate ORDER BY COUNT(Id) DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "560": "SELECT COUNT(Id) FROM badges WHERE Name = 'Revival'\t----- bird -----\tcodebase_community",
    "561": "SELECT T1.Title FROM posts AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.PostId WHERE T2.Score = ( SELECT MAX(Score) FROM comments )\t----- bird -----\tcodebase_community",
    "562": "SELECT CommentCount FROM posts WHERE ViewCount = 1910\t----- bird -----\tcodebase_community",
    "563": "SELECT T2.FavoriteCount FROM comments AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T1.UserId = '3025' AND T1.CreationDate = '2014/4/23 20:29:39.0'\t----- bird -----\tcodebase_community",
    "564": "SELECT T1.Text FROM comments AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T2.ParentId = 107829 AND T2.CommentCount = 1\t----- bird -----\tcodebase_community",
    "565": "SELECT CASE WHEN posts.ClosedDate IS NULL THEN 'NO' ELSE 'YES' END AS 'Is_Well_Finished' FROM comments INNER JOIN posts ON comments.PostId = posts.Id WHERE comments.UserId = 23853 AND comments.CreationDate = '2013-07-12 09:08:18.0'\t----- bird -----\tcodebase_community",
    "566": "SELECT users.Reputation FROM posts INNER JOIN users ON posts.OwnerUserId = users.Id WHERE posts.Id = '65041'\t----- bird -----\tcodebase_community",
    "567": "SELECT COUNT(*) FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T1.DisplayName = 'Tiago Pasqualini'\t----- bird -----\tcodebase_community",
    "568": "SELECT users.DisplayName FROM users INNER JOIN votes ON users.Id = votes.UserId WHERE votes.Id = '6347'\t----- bird -----\tcodebase_community",
    "569": "SELECT COUNT(T1.Id) FROM votes AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T2.Title LIKE '%data visualization%'\t----- bird -----\tcodebase_community",
    "570": "SELECT T2.Name FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T1.DisplayName = 'DatEpicCoderGuyWhoPrograms'\t----- bird -----\tcodebase_community",
    "571": "SELECT CAST(COUNT(T1.Id) AS REAL) / COUNT(T2.Id) FROM posts AS T1 INNER JOIN votes AS T2 ON T1.OwnerUserId = T2.UserId WHERE T1.OwnerUserId = '24'\t----- bird -----\tcodebase_community",
    "572": "SELECT ViewCount FROM posts WHERE Title = 'Integration of Weka and/or RapidMiner into Informatica PowerCenter/Developer'\t----- bird -----\tcodebase_community",
    "573": "SELECT Text FROM comments WHERE Score = 17\t----- bird -----\tcodebase_community",
    "574": "SELECT DisplayName FROM users WHERE WebsiteUrl = 'http://stackoverflow.com'\t----- bird -----\tcodebase_community",
    "575": "SELECT T2.Name FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T1.DisplayName = 'SilentGhost'\t----- bird -----\tcodebase_community",
    "576": "SELECT T2.DisplayName FROM comments AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Text = 'thank you user93!'\t----- bird -----\tcodebase_community",
    "577": "SELECT Text FROM comments WHERE UserDisplayName = 'A Lion'\t----- bird -----\tcodebase_community",
    "578": "SELECT T2.DisplayName, T2.Reputation FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T1.Title = 'Understanding what Dassault iSight is doing?'\t----- bird -----\tcodebase_community",
    "579": "SELECT T1.Text FROM comments AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T2.Title = 'How does gentle boosting differ from AdaBoost?'\t----- bird -----\tcodebase_community",
    "580": "SELECT T2.DisplayName FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Name = 'Necromancer' LIMIT 10\t----- bird -----\tcodebase_community",
    "581": "SELECT users.DisplayName FROM users INNER JOIN posts ON users.Id = posts.LastEditorUserId WHERE posts.Title = 'Open source tools for visualizing multi-dimensional data'\t----- bird -----\tcodebase_community",
    "582": "SELECT T1.Title FROM posts AS T1 INNER JOIN postHistory AS T2 ON T1.LastEditorUserId = T2.UserId AND T1.Id = T2.PostId WHERE T2.UserDisplayName = 'Vebjorn Ljosa'\t----- bird -----\tcodebase_community",
    "583": "SELECT SUM(T2.Score), T1.WebsiteUrl FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.LastEditorUserId WHERE T1.DisplayName = 'Yevgeny'\t----- bird -----\tcodebase_community",
    "584": "SELECT T1.Text FROM comments AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T2.Title = 'Why square the difference instead of taking the absolute value in standard deviation?'\t----- bird -----\tcodebase_community",
    "585": "SELECT SUM(votes.BountyAmount) FROM posts INNER JOIN votes ON posts.Id = votes.PostId WHERE posts.Title LIKE '%data%'\t----- bird -----\tcodebase_community",
    "586": "SELECT U.DisplayName FROM votes AS V INNER JOIN posts AS P ON V.PostId = P.Id INNER JOIN users AS U ON V.UserId = U.Id WHERE V.BountyAmount = 50 AND P.Title LIKE '%variance%'\t----- bird -----\tcodebase_community",
    "587": "SELECT T1.Title, T2.Text, T2.Score, (SELECT AVG(ViewCount) FROM posts WHERE Tags LIKE '%humor%') as average_view_count FROM posts AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.PostId WHERE T1.Tags LIKE '%humor%'\t----- bird -----\tcodebase_community",
    "588": "SELECT COUNT(*) FROM comments WHERE UserId = 13\t----- bird -----\tcodebase_community",
    "589": "SELECT Id, MAX(Reputation) as MaxReputation FROM users ORDER BY Reputation DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "590": "SELECT Id, MIN(Views) FROM users ORDER BY Views ASC LIMIT 1\t----- bird -----\tcodebase_community",
    "591": "SELECT COUNT(UserId) FROM badges WHERE Name = \"Supporter\" AND strftime('%Y', Date) = \"2011\"\t----- bird -----\tcodebase_community",
    "592": "SELECT COUNT(UserId) FROM (SELECT UserId, COUNT(Name) as badge_count FROM badges GROUP BY UserId) AS subquery WHERE badge_count > 5\t----- bird -----\tcodebase_community",
    "593": "SELECT COUNT(DISTINCT users.Id) FROM users INNER JOIN badges ON users.Id = badges.UserId WHERE (badges.Name = 'Supporter' OR badges.Name = 'Teacher') AND users.Location = 'New York'\t----- bird -----\tcodebase_community",
    "594": "SELECT users.Reputation FROM posts INNER JOIN users ON posts.OwnerUserId = users.Id WHERE posts.Id = 1\t----- bird -----\tcodebase_community",
    "595": "SELECT DISTINCT p.OwnerUserId FROM (SELECT UserId, PostId FROM postHistory GROUP BY UserId, PostId HAVING COUNT(*) = 1) AS ph INNER JOIN posts AS p ON ph.PostId = p.Id WHERE p.ViewCount >= 1000\t----- bird -----\tcodebase_community",
    "596": "SELECT Name FROM badges WHERE UserId = ( SELECT UserId FROM comments GROUP BY UserId ORDER BY COUNT(Id) DESC LIMIT 1 )\t----- bird -----\tcodebase_community",
    "597": "SELECT COUNT(*) FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T1.Location = 'India' AND T2.Name = 'Teacher'\t----- bird -----\tcodebase_community",
    "598": "SELECT     (CAST(COUNT(case when strftime('%Y', Date) = '2010' then 1 else null end) AS FLOAT) / COUNT(Name) * 100) -    (CAST(COUNT(case when strftime('%Y', Date) = '2011' then 1 else null end) AS FLOAT) / COUNT(Name) * 100) AS 'Percentage Difference'FROM badgesWHERE Name = 'Student'\t----- bird -----\tcodebase_community",
    "599": "SELECT PostHistoryTypeId FROM postHistory WHERE PostId = 3720 UNION SELECT COUNT(DISTINCT UserId) FROM comments WHERE PostId = 3720\t----- bird -----\tcodebase_community",
    "600": "SELECT T1.PostId, T2.ViewCount FROM postLinks AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T1.RelatedPostId = 61217\t----- bird -----\tcodebase_community",
    "601": "SELECT T1.Score, T2.LinkTypeId FROM posts AS T1 INNER JOIN postLinks AS T2 ON T1.Id = T2.PostId WHERE T1.Id = 395\t----- bird -----\tcodebase_community",
    "602": "SELECT Id, OwnerUserId FROM posts WHERE Score > 60\t----- bird -----\tcodebase_community",
    "603": "SELECT SUM(FavoriteCount) FROM posts WHERE OwnerUserId = 686 AND strftime('%Y', CreaionDate) = '2011'\t----- bird -----\tcodebase_community",
    "604": "SELECT AVG(UpVotes), AVG(Age) FROM users WHERE Id IN ( SELECT OwnerUserId FROM posts GROUP BY OwnerUserId HAVING COUNT(*) > 10 )\t----- bird -----\tcodebase_community",
    "605": "SELECT COUNT(UserId) FROM badges WHERE Name = 'Announcer'\t----- bird -----\tcodebase_community",
    "606": "SELECT Name FROM badges WHERE Date = '2010-07-19 19:39:08'\t----- bird -----\tcodebase_community",
    "607": "SELECT COUNT(*) FROM comments WHERE Score > 60\t----- bird -----\tcodebase_community",
    "608": "SELECT Text FROM comments WHERE CreationDate = '2010-07-19 19:25:47.0'\t----- bird -----\tcodebase_community",
    "609": "SELECT COUNT(Id) FROM posts WHERE Score = 10\t----- bird -----\tcodebase_community",
    "610": "SELECT Name FROM badges WHERE UserId = ( SELECT Id FROM users WHERE Reputation = (SELECT MAX(Reputation) FROM users))\t----- bird -----\tcodebase_community",
    "611": "SELECT T2.Reputation FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Date = '2010-07-19 19:39:08.0'\t----- bird -----\tcodebase_community",
    "612": "SELECT badges.Name FROM users INNER JOIN badges ON users.Id = badges.UserId WHERE users.DisplayName = 'Pierre'\t----- bird -----\tcodebase_community",
    "613": "SELECT badges.Date FROM badges INNER JOIN users ON badges.UserId = users.Id WHERE users.Location = 'Rochester, NY'\t----- bird -----\tcodebase_community",
    "614": "SELECT (SELECT COUNT(*) FROM badges WHERE Name = 'Teacher') * 100.0 / COUNT(*) FROM users\t----- bird -----\tcodebase_community",
    "615": "SELECT COUNT(CASE WHEN T2.Age BETWEEN 13 AND 18 THEN 1 END) * 100.0 / COUNT(*) FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Name = 'Organizer'\t----- bird -----\tcodebase_community",
    "616": "SELECT T1.Score FROM comments AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T2.CreationDate = '2010-07-19 19:19:56.0'\t----- bird -----\tcodebase_community",
    "617": "SELECT T1.Text FROM comments AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T2.CreationDate = '2010-07-19 19:37:33.0'\t----- bird -----\tcodebase_community",
    "618": "SELECT T1.Age FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T1.Location = 'Vienna, Austria'\t----- bird -----\tcodebase_community",
    "619": "SELECT COUNT(*) FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Name = 'Supporter' AND T2.Age BETWEEN 19 AND 65\t----- bird -----\tcodebase_community",
    "620": "SELECT U.Views FROM users U INNER JOIN badges B ON U.Id = B.UserId WHERE B.Date = '2010-07-19 19:39:08.0'\t----- bird -----\tcodebase_community",
    "621": "SELECT T1.Name FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.Reputation = ( SELECT MIN(Reputation) FROM users )\t----- bird -----\tcodebase_community",
    "622": "SELECT badges.Name FROM badges INNER JOIN users ON badges.UserId = users.Id WHERE users.DisplayName = 'Sharpie'\t----- bird -----\tcodebase_community",
    "623": "SELECT COUNT(*) FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Name = 'Supporter' AND T2.Age > 65\t----- bird -----\tcodebase_community",
    "624": "SELECT DisplayName FROM users WHERE \"Id\" = 30\t----- bird -----\tcodebase_community",
    "625": "SELECT COUNT(*) FROM users WHERE Location = 'New York'\t----- bird -----\tcodebase_community",
    "626": "SELECT COUNT(*) FROM votes WHERE strftime('%Y', CreationDate) = '2010'\t----- bird -----\tcodebase_community",
    "627": "SELECT COUNT(*) FROM users WHERE Age BETWEEN 19 AND 65\t----- bird -----\tcodebase_community",
    "628": "SELECT DisplayName, Views FROM users ORDER BY Views DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "629": "SELECT     (SELECT COUNT(Id) FROM votes WHERE strftime('%Y', CreationDate) = '2010') /     (SELECT COUNT(Id) FROM votes WHERE strftime('%Y', CreationDate) = '2011') AS vote_ratio FROM votes LIMIT 1;\t----- bird -----\tcodebase_community",
    "630": "SELECT T1.Tags FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'John Stauffer'\t----- bird -----\tcodebase_community",
    "631": "SELECT COUNT(*) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'Daniel Vassallo'\t----- bird -----\tcodebase_community",
    "632": "SELECT COUNT(votes.Id) FROM users INNER JOIN votes ON users.Id = votes.UserId WHERE users.DisplayName = 'Harlan'\t----- bird -----\tcodebase_community",
    "633": "SELECT T1.Id FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'slashnick' ORDER BY T1.AnswerCount DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "634": "SELECT users.DisplayName, SUM(posts.ViewCount) AS total_views FROM posts INNER JOIN users ON posts.OwnerUserId = users.Id WHERE users.DisplayName IN ('Harvey Motulsky', 'Noah Snyder') GROUP BY users.DisplayName ORDER BY total_views DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "635": "SELECT COUNT(DISTINCT p.Id) FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE u.DisplayName = 'Matt Parker' AND p.Id IN (SELECT v.PostId FROM votes v GROUP BY v.PostId HAVING COUNT(v.Id) > 4)\t----- bird -----\tcodebase_community",
    "636": "SELECT COUNT(*) FROM comments AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T2.OwnerDisplayName = 'Neil McGuigan' AND T1.Score < 60\t----- bird -----\tcodebase_community",
    "637": "SELECT T1.Tags FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'Mark Meckes' AND T1.CommentCount = 0\t----- bird -----\tcodebase_community",
    "638": "SELECT T1.DisplayName FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T2.Name = 'Organizer'\t----- bird -----\tcodebase_community",
    "639": "SELECT (SELECT COUNT(*) FROM posts AS p INNER JOIN tags AS t ON p.Id = t.ExcerptPostId WHERE t.TagName = 'r' AND p.OwnerDisplayName = 'Community') * 100.0 / (SELECT COUNT(*) FROM posts WHERE OwnerDisplayName = 'Community') AS percentage\t----- bird -----\tcodebase_community",
    "640": "SELECT (SELECT SUM(T1.ViewCount) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'Mornington') - (SELECT SUM(T3.ViewCount) FROM posts AS T3 INNER JOIN users AS T4 ON T3.OwnerUserId = T4.Id WHERE T4.DisplayName = 'Amos')\t----- bird -----\tcodebase_community",
    "641": "SELECT COUNT(UserId) FROM badges WHERE Name = 'commentator' AND strftime('%Y', Date) = '2014'\t----- bird -----\tcodebase_community",
    "642": "SELECT COUNT(*) FROM posts WHERE CreaionDate BETWEEN '2010-07-21 00:00:00' AND '2010-07-21 23:59:59'\t----- bird -----\tcodebase_community",
    "643": "SELECT DisplayName, Age FROM users WHERE Views = ( SELECT MAX(Views) FROM users )\t----- bird -----\tcodebase_community",
    "644": "SELECT LastEditDate, LastEditorUserId FROM posts WHERE Title = 'Detecting a given face in a database of facial images'\t----- bird -----\tcodebase_community",
    "645": "SELECT COUNT(*) FROM comments WHERE UserId = 13 AND Score < 60\t----- bird -----\tcodebase_community",
    "646": "SELECT T1.Title, T2.UserDisplayName FROM posts AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.PostId WHERE T2.Score > 60\t----- bird -----\tcodebase_community",
    "647": "SELECT badges.Name FROM badges INNER JOIN users ON badges.UserId = users.Id WHERE users.Location = 'North Pole' AND strftime('%Y', badges.Date) = '2011';\t----- bird -----\tcodebase_community",
    "648": "SELECT T2.DisplayName, T2.WebsiteUrl FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T1.FavoriteCount > 150\t----- bird -----\tcodebase_community",
    "649": "SELECT COUNT(T1.Id), T2.LastEditDate FROM postHistory AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T2.Id = ( SELECT Id FROM posts WHERE Title = 'What is the best introductory Bayesian statistics textbook?' )\t----- bird -----\tcodebase_community",
    "650": "SELECT T2.LastAccessDate, T2.Location FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Name = 'Outliers'\t----- bird -----\tcodebase_community",
    "651": "SELECT T2.Title FROM postLinks AS T1 INNER JOIN posts AS T2 ON T1.RelatedPostId = T2.Id WHERE T1.PostId IN (SELECT Id FROM posts WHERE Title = 'How to tell if something happened in a data set which monitors a value over time')\t----- bird -----\tcodebase_community",
    "652": "SELECT T2.Id, T3.Name FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId INNER JOIN badges AS T3 ON T1.Id = T3.UserId WHERE T1.DisplayName = 'Samuel' AND strftime('%Y', T2.CreationDate) = '2013' AND strftime('%Y', T3.Date) = '2013'\t----- bird -----\tcodebase_community",
    "653": "SELECT T1.OwnerDisplayName FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T1.ViewCount = (SELECT MAX(ViewCount) FROM posts)\t----- bird -----\tcodebase_community",
    "654": "SELECT T1.DisplayName, T1.Location FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId INNER JOIN tags AS T3 ON T2.Id = T3.ExcerptPostId WHERE T3.TagName = 'hypothesis-testing'\t----- bird -----\tcodebase_community",
    "655": "SELECT P2.Title, P1.LinkTypeId FROM postLinks AS P1 INNER JOIN posts AS P2 ON P1.RelatedPostId = P2.Id WHERE P1.PostId = (SELECT Id FROM posts WHERE Title = 'What are principal component scores?')\t----- bird -----\tcodebase_community",
    "656": "SELECT T1.DisplayName FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T2.Id = ( SELECT ParentId FROM posts WHERE Score = ( SELECT MAX(Score) FROM posts WHERE ParentId IS NOT NULL ) )\t----- bird -----\tcodebase_community",
    "657": "SELECT T2.DisplayName, T2.WebsiteUrl FROM votes AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.BountyAmount = ( SELECT MAX(BountyAmount) FROM votes WHERE VoteTypeId = 8 ) AND T1.VoteTypeId = 8\t----- bird -----\tcodebase_community",
    "658": "SELECT Title FROM posts ORDER BY ViewCount DESC LIMIT 5\t----- bird -----\tcodebase_community",
    "659": "SELECT COUNT(*) FROM tags WHERE Count BETWEEN 5000 AND 7000\t----- bird -----\tcodebase_community",
    "660": "SELECT OwnerUserId FROM posts WHERE FavoriteCount = (SELECT MAX(FavoriteCount) FROM posts)\t----- bird -----\tcodebase_community",
    "661": "SELECT Age FROM users WHERE Reputation = (SELECT MAX(Reputation) FROM users)\t----- bird -----\tcodebase_community",
    "662": "SELECT COUNT(DISTINCT posts.Id) FROM posts JOIN votes ON posts.Id = votes.PostId WHERE votes.BountyAmount = 50 AND strftime('%Y', votes.CreationDate) = '2011'\t----- bird -----\tcodebase_community",
    "663": "SELECT Id FROM users WHERE Age = (SELECT MIN(Age) FROM users)\t----- bird -----\tcodebase_community",
    "664": "SELECT T1.Score FROM posts AS T1 INNER JOIN tags AS T2 ON T1.Id = T2.ExcerptPostId WHERE T2.Count = ( SELECT MAX(Count) FROM tags )\t----- bird -----\tcodebase_community",
    "665": "SELECT COUNT(T1.Id) / 12 FROM postLinks AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE strftime('%Y', T1.CreationDate) = '2010' AND T2.AnswerCount <= 2\t----- bird -----\tcodebase_community",
    "666": "SELECT T1.Id FROM posts AS T1 INNER JOIN votes AS T2 ON T1.Id = T2.PostId WHERE T2.UserId = 1465 ORDER BY T1.FavoriteCount DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "667": "SELECT T2.Title FROM postLinks AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id ORDER BY T1.CreationDate ASC LIMIT 1\t----- bird -----\tcodebase_community",
    "668": "SELECT DisplayName FROM users WHERE Id = ( SELECT UserId FROM badges GROUP BY UserId ORDER BY COUNT(Name) DESC LIMIT 1 )\t----- bird -----\tcodebase_community",
    "669": "SELECT MIN(T2.CreationDate) FROM users AS T1 INNER JOIN votes AS T2 ON T1.Id = T2.UserId WHERE T1.DisplayName = 'chl'\t----- bird -----\tcodebase_community",
    "670": "SELECT MIN(T2.CreaionDate) FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T1.Age = ( SELECT MIN(Age) FROM users )\t----- bird -----\tcodebase_community",
    "671": "SELECT users.DisplayName FROM users INNER JOIN badges ON users.Id = badges.UserId WHERE badges.Date = (SELECT MIN(Date) FROM badges WHERE Name = 'Autobiographer')\t----- bird -----\tcodebase_community",
    "672": "SELECT COUNT(DISTINCT T1.Id) FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T1.Location = 'United Kingdom' AND T2.FavoriteCount >= 4\t----- bird -----\tcodebase_community",
    "673": "SELECT COUNT(PostId) FROM votes WHERE UserId IN (SELECT Id FROM users WHERE Age = (SELECT MAX(Age) FROM users))\t----- bird -----\tcodebase_community",
    "674": "SELECT DisplayName FROM users ORDER BY Reputation DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "675": "SELECT COUNT(Id) FROM users WHERE Reputation > 2000 AND Views > 1000\t----- bird -----\tcodebase_community",
    "676": "SELECT DisplayName FROM users WHERE Age BETWEEN 19 AND 65\t----- bird -----\tcodebase_community",
    "677": "SELECT COUNT(T1.Id) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'Jay Stevens' AND STRFTIME('%Y', T1.CreaionDate) = '2010'\t----- bird -----\tcodebase_community",
    "678": "SELECT T1.Id, T1.Title FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'Harvey Motulsky' ORDER BY T1.ViewCount DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "679": "SELECT Id, Title FROM posts ORDER BY Score DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "680": "SELECT AVG(posts.Score) FROM posts INNER JOIN users ON posts.OwnerUserId = users.Id WHERE users.DisplayName = 'Stephen Turner'\t----- bird -----\tcodebase_community",
    "681": "SELECT T2.DisplayName FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T1.ViewCount > 20000 AND strftime('%Y', T1.CreaionDate) = '2011'\t----- bird -----\tcodebase_community",
    "682": "SELECT Id, OwnerDisplayName FROM posts WHERE strftime('%Y', CreaionDate) = '2010' ORDER BY FavoriteCount DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "683": "SELECT (CAST(COUNT(T1.Id) AS float) / (SELECT COUNT(*) FROM posts WHERE strftime('%Y', CreaionDate) = '2011')) * 100 as percentage FROM posts as T1 INNER JOIN users as T2 ON T1.OwnerUserId = T2.Id WHERE T2.Reputation > 1000 AND strftime('%Y', T1.CreaionDate) = '2011'\t----- bird -----\tcodebase_community",
    "684": "SELECT (CAST(COUNT(Id) AS FLOAT) WHERE Age BETWEEN 13 AND 18) / CAST(COUNT(Id) AS FLOAT) * 100 AS percentage FROM users\t----- bird -----\tcodebase_community",
    "685": "SELECT T1.ViewCount, T2.DisplayName FROM posts AS T1 INNER JOIN users AS T2 ON T1.LastEditorUserId = T2.Id WHERE T1.Title = 'Computer Game Datasets'\t----- bird -----\tcodebase_community",
    "686": "SELECT COUNT(Id) FROM posts WHERE ViewCount > (SELECT AVG(ViewCount) FROM posts)\t----- bird -----\tcodebase_community",
    "687": "SELECT COUNT(Id) FROM comments WHERE PostId = (SELECT Id FROM posts WHERE Score = (SELECT MAX(Score) FROM posts))\t----- bird -----\tcodebase_community",
    "688": "SELECT COUNT(*) FROM posts WHERE ViewCount > 35000 AND CommentCount = 0\t----- bird -----\tcodebase_community",
    "689": "SELECT T2.DisplayName, T2.Location FROM posts AS T1 INNER JOIN users AS T2 ON T1.LastEditorUserId = T2.Id WHERE T1.Id = 183 ORDER BY T1.LastEditDate DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "690": "SELECT Name FROM badges WHERE UserId = ( SELECT Id FROM users WHERE DisplayName = 'Emmett' ) ORDER BY Date DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "691": "SELECT COUNT(*) FROM users WHERE Age BETWEEN 19 and 65 AND UpVotes > 5000\t----- bird -----\tcodebase_community",
    "692": "SELECT badges.Date - users.CreationDate FROM users INNER JOIN badges ON users.Id = badges.UserId WHERE users.DisplayName = 'Zolomon'\t----- bird -----\tcodebase_community",
    "693": "SELECT (SELECT COUNT(Id) FROM posts WHERE OwnerUserId = (SELECT Id FROM users WHERE CreationDate = ( SELECT MAX(CreationDate) FROM users ))), (SELECT COUNT(Id) FROM comments WHERE UserId = (SELECT Id FROM users WHERE CreationDate = ( SELECT MAX(CreationDate) FROM users )))\t----- bird -----\tcodebase_community",
    "694": "SELECT comments.Text, users.DisplayName FROM comments INNER JOIN posts ON comments.PostId = posts.Id INNER JOIN users ON comments.UserId = users.Id WHERE posts.Title = 'Analysing wind data with R' ORDER BY comments.CreationDate DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "695": "SELECT COUNT(UserId) FROM badges WHERE Name = 'Citizen Patrol'\t----- bird -----\tcodebase_community",
    "696": "SELECT COUNT(posts.Id) FROM posts JOIN tags ON posts.Id = tags.ExcerptPostId WHERE tags.TagName = 'careers'\t----- bird -----\tcodebase_community",
    "697": "SELECT Reputation, Views FROM users WHERE DisplayName = 'Jarrod Dixon'\t----- bird -----\tcodebase_community",
    "698": "SELECT AnswerCount + CommentCount FROM posts WHERE Title = 'Clustering 1D data'\t----- bird -----\tcodebase_community",
    "699": "SELECT CreationDate FROM users WHERE DisplayName = 'IrishStat'\t----- bird -----\tcodebase_community",
    "700": "SELECT COUNT(DISTINCT T1.Id) FROM posts AS T1 INNER JOIN votes AS T2 ON T1.Id = T2.PostId WHERE T2.BountyAmount >= 30\t----- bird -----\tcodebase_community",
    "701": "SELECT (COUNT(CASE WHEN Score > 50 THEN 1 END) * 100.0 / COUNT(*)) as percentage FROM posts JOIN users ON users.Id = posts.OwnerUserId WHERE users.Reputation = ( SELECT MAX(Reputation) FROM users )\t----- bird -----\tcodebase_community",
    "702": "SELECT COUNT(Id) FROM posts WHERE Score < 20\t----- bird -----\tcodebase_community",
    "703": "SELECT COUNT(*) FROM tags WHERE Id < 15 AND Count <= 20\t----- bird -----\tcodebase_community",
    "704": "SELECT ExcerptPostId, WikiPostId FROM tags WHERE TagName = 'sample'\t----- bird -----\tcodebase_community",
    "705": "SELECT T1.Reputation, T1.UpVotes FROM users AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.UserId WHERE T2.Text = 'fine, you win :)'\t----- bird -----\tcodebase_community",
    "706": "SELECT comments.Text FROM comments JOIN posts ON comments.PostId = posts.Id WHERE posts.Title = 'Linear regression'\t----- bird -----\tcodebase_community",
    "707": "SELECT T1.Text FROM comments AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T2.ViewCount BETWEEN 100 AND 150 ORDER BY T1.Score DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "708": "SELECT T1.CreationDate, T1.Age FROM users AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.UserId WHERE T2.Text LIKE '%http://%'\t----- bird -----\tcodebase_community",
    "709": "SELECT COUNT(DISTINCT T1.PostId) FROM comments AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T1.Score = 0 AND T2.ViewCount < 5\t----- bird -----\tcodebase_community",
    "710": "SELECT COUNT(*) FROM comments AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T2.CommentCount = 1 AND T1.Score = 0\t----- bird -----\tcodebase_community",
    "711": "SELECT COUNT(*) FROM comments AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Score = 0 AND T2.Age = 40\t----- bird -----\tcodebase_community",
    "712": "SELECT T1.Id, T2.Text FROM posts AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.PostId WHERE T1.Title = 'Group differences on a five point Likert item'\t----- bird -----\tcodebase_community",
    "713": "SELECT T2.UpVotes FROM comments AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Text = 'R is also lazy evaluated.'\t----- bird -----\tcodebase_community",
    "714": "SELECT T1.Text FROM comments AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.DisplayName = 'Harvey Motulsky'\t----- bird -----\tcodebase_community",
    "715": "SELECT T2.DisplayName FROM comments AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Score BETWEEN 1 AND 5 AND T2.DownVotes = 0\t----- bird -----\tcodebase_community",
    "716": "SELECT (COUNT(DISTINCT T1.UserId) * 100.0) / COUNT(DISTINCT T2.UserId) FROM comments AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Score BETWEEN 5 AND 10 AND T2.UpVotes = 0\t----- bird -----\tcodebase_community",
    "717": "SELECT superpower.power_name FROM superhero INNER JOIN hero_power ON superhero.id = hero_power.hero_id INNER JOIN superpower ON hero_power.power_id = superpower.id WHERE superhero.superhero_name = '3-D Man'\t----- bird -----\tsuperhero",
    "718": "SELECT COUNT(DISTINCT T1.id) FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T3.power_name = 'Super Strength'\t----- bird -----\tsuperhero",
    "719": "SELECT COUNT(superhero.id) FROM superhero INNER JOIN hero_power ON superhero.id = hero_power.hero_id INNER JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'Super Strength' AND superhero.height_cm > 200\t----- bird -----\tsuperhero",
    "720": "SELECT T2.full_name, COUNT(T1.power_id) as powers_count FROM hero_power T1 INNER JOIN superhero T2 ON T1.hero_id = T2.id GROUP BY T2.full_name HAVING powers_count > 15\t----- bird -----\tsuperhero",
    "721": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T2.colour = 'Blue'\t----- bird -----\tsuperhero",
    "722": "SELECT colour.colour FROM colour INNER JOIN superhero ON colour.id = superhero.skin_colour_id WHERE superhero.superhero_name = 'Apocalypse'\t----- bird -----\tsuperhero",
    "723": "SELECT COUNT(superhero.id) FROM superhero INNER JOIN colour ON superhero.eye_colour_id = colour.id INNER JOIN hero_power ON superhero.id = hero_power.hero_id INNER JOIN superpower ON hero_power.power_id = superpower.id WHERE colour.colour = 'Blue' AND superpower.power_name = 'Agility'\t----- bird -----\tsuperhero",
    "724": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id INNER JOIN colour AS T3 ON T1.hair_colour_id = T3.id WHERE T2.colour = 'Blue' AND T3.colour = 'Blond'\t----- bird -----\tsuperhero",
    "725": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'Marvel Comics'\t----- bird -----\tsuperhero",
    "726": "SELECT T1.full_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'Marvel Comics' ORDER BY T1.height_cm DESC LIMIT 1\t----- bird -----\tsuperhero",
    "727": "SELECT publisher.publisher_name FROM publisher INNER JOIN superhero ON publisher.id = superhero.publisher_id WHERE superhero.superhero_name = 'Sauron'\t----- bird -----\tsuperhero",
    "728": "SELECT COUNT(superhero.id) FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id JOIN colour ON superhero.eye_colour_id = colour.id WHERE publisher.publisher_name = 'Marvel Comics' AND colour.colour = 'Blue'\t----- bird -----\tsuperhero",
    "729": "SELECT AVG(T1.height_cm) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'Marvel Comics'\t----- bird -----\tsuperhero",
    "730": "SELECT (COUNT(DISTINCT T1.id) * 100.0 / (SELECT COUNT(*) FROM superhero WHERE publisher_id IN (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics'))) FROM superhero as T1 INNER JOIN hero_power as T2 ON T1.id = T2.hero_id INNER JOIN superpower as T3 ON T2.power_id = T3.id WHERE T1.publisher_id IN (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics') AND T3.power_name = 'Super Strength'\t----- bird -----\tsuperhero",
    "731": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'DC Comics'\t----- bird -----\tsuperhero",
    "732": "SELECT T2.publisher_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.id = (SELECT hero_id FROM hero_attribute WHERE attribute_id = (SELECT id FROM attribute WHERE attribute_name = 'Speed') ORDER BY attribute_value ASC LIMIT 1)\t----- bird -----\tsuperhero",
    "733": "SELECT COUNT(*) FROM superhero JOIN colour ON superhero.eye_colour_id = colour.id JOIN publisher ON superhero.publisher_id = publisher.id WHERE colour.colour = 'Gold' AND publisher.publisher_name = 'Marvel Comics'\t----- bird -----\tsuperhero",
    "734": "SELECT publisher.publisher_name FROM superhero INNER JOIN publisher ON superhero.publisher_id = publisher.id WHERE superhero.superhero_name = 'Blue Beetle II'\t----- bird -----\tsuperhero",
    "735": "SELECT COUNT(T1.superhero_name) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.hair_colour_id = T2.id WHERE T2.colour = 'Blond'\t----- bird -----\tsuperhero",
    "736": "SELECT T2.superhero_name FROM hero_attribute AS T1 INNER JOIN superhero AS T2 ON T1.hero_id = T2.id WHERE T1.attribute_id = 1 ORDER BY T1.attribute_value ASC LIMIT 1\t----- bird -----\tsuperhero",
    "737": "SELECT race.race FROM superhero INNER JOIN race ON superhero.race_id = race.id WHERE superhero.superhero_name = 'Copycat'\t----- bird -----\tsuperhero",
    "738": "SELECT COUNT(DISTINCT T1.superhero_name) FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN attribute AS T3 ON T3.id = T2.attribute_id WHERE T3.attribute_name = 'Durability' AND T2.attribute_value < 50\t----- bird -----\tsuperhero",
    "739": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T3.power_name = 'Death Touch'\t----- bird -----\tsuperhero",
    "740": "SELECT COUNT(superhero.id) FROM superhero JOIN gender ON superhero.gender_id = gender.id JOIN hero_attribute ON superhero.id = hero_attribute.hero_id JOIN attribute ON hero_attribute.attribute_id = attribute.id WHERE gender.gender = 'Female' AND attribute.attribute_name = 'Strength' AND hero_attribute.attribute_value = 100\t----- bird -----\tsuperhero",
    "741": "SELECT superhero_name FROM superhero WHERE id = ( SELECT hero_id FROM hero_power GROUP BY hero_id ORDER BY COUNT(power_id) DESC LIMIT 1 )\t----- bird -----\tsuperhero",
    "742": "SELECT COUNT(*) FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T2.race = 'Vampire'\t----- bird -----\tsuperhero",
    "743": "SELECT (SELECT COUNT(*) FROM superhero AS T1 INNER JOIN alignment AS T2 ON T1.alignment_id = T2.id INNER JOIN publisher AS T3 ON T1.publisher_id = T3.id WHERE T2.alignment = 'Neutral' AND T3.publisher_name = 'Marvel Comics')* 100.0 / (SELECT COUNT(*) FROM superhero) AS percentage FROM dual\t----- bird -----\tsuperhero",
    "744": "SELECT (SELECT COUNT(*) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'Marvel Comics') - (SELECT COUNT(*) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'DC Comics')\t----- bird -----\tsuperhero",
    "745": "SELECT id FROM publisher WHERE publisher_name = 'Star Trek'\t----- bird -----\tsuperhero",
    "746": "SELECT AVG(attribute_value) FROM hero_attribute\t----- bird -----\tsuperhero",
    "747": "SELECT COUNT(id) FROM superhero WHERE full_name IS NULL\t----- bird -----\tsuperhero",
    "748": "SELECT T2.colour FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.id = 75\t----- bird -----\tsuperhero",
    "749": "SELECT T3.power_name FROM hero_power AS T1 INNER JOIN superhero AS T2 ON T1.hero_id = T2.id INNER JOIN superpower AS T3 ON T1.power_id = T3.id WHERE T2.superhero_name = 'Deathlok'\t----- bird -----\tsuperhero",
    "750": "SELECT AVG(superhero.weight_kg) FROM superhero INNER JOIN gender ON superhero.gender_id = gender.id WHERE gender.id = 2\t----- bird -----\tsuperhero",
    "751": "SELECT superpower.power_name FROM superpower, hero_power, superhero, gender WHERE superhero.gender_id = gender.id AND hero_power.hero_id = superhero.id AND hero_power.power_id = superpower.id AND gender.gender = 'Male' LIMIT 5\t----- bird -----\tsuperhero",
    "752": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T2.race = 'Alien'\t----- bird -----\tsuperhero",
    "753": "SELECT superhero_name FROM superhero JOIN colour ON superhero.eye_colour_id = colour.id WHERE height_cm BETWEEN 170 AND 190 AND eye_colour_id = 1\t----- bird -----\tsuperhero",
    "754": "SELECT superpower.power_name FROM hero_power JOIN superpower ON hero_power.power_id = superpower.id WHERE hero_power.hero_id = 56\t----- bird -----\tsuperhero",
    "755": "SELECT T1.full_name FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T2.race = 'Demi-God' LIMIT 5\t----- bird -----\tsuperhero",
    "756": "SELECT COUNT(T2.id) FROM alignment AS T1 INNER JOIN superhero AS T2 ON T1.id = T2.alignment_id WHERE T1.alignment = 'Bad'\t----- bird -----\tsuperhero",
    "757": "SELECT T1.race FROM race AS T1 INNER JOIN superhero AS T2 ON T1.id = T2.race_id WHERE T2.weight_kg = 169\t----- bird -----\tsuperhero",
    "758": "SELECT colour.colour FROM superhero INNER JOIN colour ON superhero.hair_colour_id = colour.id WHERE superhero.height_cm = 185 AND superhero.race_id = (SELECT id FROM race WHERE race = 'human')\t----- bird -----\tsuperhero",
    "759": "SELECT T2.colour FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.weight_kg = ( SELECT MAX(weight_kg) FROM superhero )\t----- bird -----\tsuperhero",
    "760": "SELECT CAST(SUM(CASE WHEN T1.publisher_id = 13 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.publisher_id) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.height_cm BETWEEN 150 AND 180\t----- bird -----\tsuperhero",
    "761": "SELECT T1.full_name FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id WHERE T1.weight_kg > ( SELECT AVG(weight_kg)*0.79 FROM superhero ) AND T2.gender = 'Male'\t----- bird -----\tsuperhero",
    "762": "SELECT T1.power_name FROM superpower AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.power_id GROUP BY T1.power_name ORDER BY COUNT(*) DESC LIMIT 1\t----- bird -----\tsuperhero",
    "763": "SELECT T2.attribute_value FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id WHERE T1.superhero_name = 'Abomination'\t----- bird -----\tsuperhero",
    "764": "SELECT T2.power_name FROM hero_power AS T1 INNER JOIN superpower AS T2 ON T1.power_id = T2.id WHERE T1.hero_id = 1\t----- bird -----\tsuperhero",
    "765": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T3.power_name = 'stealth'\t----- bird -----\tsuperhero",
    "766": "SELECT T1.full_name FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id WHERE T2.attribute_value = ( SELECT MAX(attribute_value) FROM hero_attribute WHERE attribute_id = (SELECT id FROM attribute WHERE attribute_name = 'strength') )\t----- bird -----\tsuperhero",
    "767": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.skin_colour_id = T2.id WHERE T1.skin_colour_id = 1\t----- bird -----\tsuperhero",
    "768": "SELECT COUNT(*) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'Dark Horse Comics'\t----- bird -----\tsuperhero",
    "769": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id INNER JOIN hero_attribute AS T3 ON T1.id = T3.hero_id INNER JOIN attribute AS T4 ON T3.attribute_id = T4.id WHERE T2.publisher_name = 'Dark Horse Comics' AND T4.attribute_name = 'durability' ORDER BY T3.attribute_value DESC LIMIT 1\t----- bird -----\tsuperhero",
    "770": "SELECT T1.colour FROM colour AS T1 INNER JOIN superhero AS T2 ON T1.id = T2.eye_colour_id WHERE T2.full_name = 'Abraham Sapien'\t----- bird -----\tsuperhero",
    "771": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T3.power_name = 'Flight'\t----- bird -----\tsuperhero",
    "772": "SELECT eye_colour.colour AS eye_colour, hair_colour.colour AS hair_colour, skin_colour.colour AS skin_colour FROM superhero JOIN gender ON superhero.gender_id = gender.id JOIN publisher ON superhero.publisher_id = publisher.id JOIN colour AS eye_colour ON superhero.eye_colour_id = eye_colour.id JOIN colour AS hair_colour ON superhero.hair_colour_id = hair_colour.id JOIN colour AS skin_colour ON superhero.skin_colour_id = skin_colour.id WHERE gender.gender = 'Female' AND publisher.publisher_name = 'Dark Horse Comics'\t----- bird -----\tsuperhero",
    "773": "SELECT T1.superhero_name, T2.publisher_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.eye_colour_id = T1.hair_colour_id AND T1.eye_colour_id = T1.skin_colour_id\t----- bird -----\tsuperhero",
    "774": "SELECT T2.race FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T1.superhero_name = 'A-Bomb'\t----- bird -----\tsuperhero",
    "775": "SELECT (CAST(SUM(CASE WHEN T3.colour = 'Blue' THEN 1 ELSE 0 END) AS REAL) / COUNT(*)) * 100 FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id INNER JOIN colour AS T3 ON T1.eye_colour_id = T3.id WHERE T2.gender = 'Female'\t----- bird -----\tsuperhero",
    "776": "SELECT T1.superhero_name, T2.race FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T1.full_name = 'Charles Chandler'\t----- bird -----\tsuperhero",
    "777": "SELECT T2.gender FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id WHERE T1.superhero_name = 'Agent 13'\t----- bird -----\tsuperhero",
    "778": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T3.power_name = 'Adaptation'\t----- bird -----\tsuperhero",
    "779": "SELECT COUNT(T2.power_id) FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id WHERE T1.superhero_name = 'Amazo'\t----- bird -----\tsuperhero",
    "780": "SELECT superpower.power_name FROM superpower INNER JOIN hero_power ON superpower.id = hero_power.power_id INNER JOIN superhero ON hero_power.hero_id = superhero.id WHERE superhero.full_name = 'Hunter Zolomon'\t----- bird -----\tsuperhero",
    "781": "SELECT superhero.height_cm FROM superhero INNER JOIN colour ON superhero.eye_colour_id = colour.id WHERE colour.colour = 'Amber'\t----- bird -----\tsuperhero",
    "782": "SELECT superhero.superhero_name FROM superhero INNER JOIN colour AS eye_colour ON superhero.eye_colour_id = eye_colour.id INNER JOIN colour AS hair_colour ON superhero.hair_colour_id = hair_colour.id WHERE eye_colour.colour = 'Black' AND hair_colour.colour = 'Black'\t----- bird -----\tsuperhero",
    "783": "SELECT C1.colour FROM superhero AS S INNER JOIN colour AS C1 ON S.eye_colour_id = C1.id INNER JOIN colour AS C2 ON S.skin_colour_id = C2.id WHERE C2.colour = 'Gold'\t----- bird -----\tsuperhero",
    "784": "SELECT T1.full_name FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T2.race = 'Vampire'\t----- bird -----\tsuperhero",
    "785": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN alignment AS T2 ON T1.alignment_id = T2.id WHERE T2.alignment = 'Neutral'\t----- bird -----\tsuperhero",
    "786": "SELECT COUNT(hero_id) FROM hero_attribute WHERE attribute_id = 1 AND attribute_value = ( SELECT MAX(attribute_value) FROM hero_attribute WHERE attribute_id = 1 )\t----- bird -----\tsuperhero",
    "787": "SELECT alignment.alignment, race.race FROM superhero INNER JOIN alignment ON superhero.alignment_id = alignment.id INNER JOIN race ON superhero.race_id = race.id WHERE superhero.superhero_name = 'Cameron Hicks'\t----- bird -----\tsuperhero",
    "788": "SELECT ROUND((SELECT COUNT(*) FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id INNER JOIN publisher AS T3 ON T1.publisher_id = T3.id WHERE T2.gender = 'Female' AND T3.publisher_name = 'Marvel Comics') * 100.0 / (SELECT COUNT(*) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'Marvel Comics'), 2)\t----- bird -----\tsuperhero",
    "789": "SELECT AVG(superhero.weight_kg) FROM superhero INNER JOIN race ON superhero.race_id = race.id WHERE race.race = 'Alien'\t----- bird -----\tsuperhero",
    "790": "SELECT     (SELECT weight_kg FROM superhero WHERE full_name = 'Emil Blonsky') -     (SELECT weight_kg FROM superhero WHERE full_name = 'Charles Chandler') AS weight_difference;\t----- bird -----\tsuperhero",
    "791": "SELECT superhero_name, AVG(height_cm) AS average_height FROM superhero GROUP BY superhero_name\t----- bird -----\tsuperhero",
    "792": "SELECT T2.power_name FROM superhero AS T1 INNER JOIN hero_power AS T3 ON T1.id = T3.hero_id INNER JOIN superpower AS T2 ON T3.power_id = T2.id WHERE T1.superhero_name = 'Abomination'\t----- bird -----\tsuperhero",
    "793": "SELECT COUNT(superhero.id) FROM superhero INNER JOIN race ON superhero.race_id = race.id INNER JOIN gender ON superhero.gender_id = gender.id WHERE race.id = 21 AND gender.id = 1\t----- bird -----\tsuperhero",
    "794": "SELECT T2.superhero_name FROM hero_attribute AS T1 INNER JOIN superhero AS T2 ON T1.hero_id = T2.id WHERE T1.attribute_id = [correct attribute_id for 'Speed'] ORDER BY T1.attribute_value DESC LIMIT 1\t----- bird -----\tsuperhero",
    "795": "SELECT COUNT(*) FROM superhero WHERE alignment_id = 3\t----- bird -----\tsuperhero",
    "796": "SELECT A.attribute_name, H.attribute_value FROM superhero AS S INNER JOIN hero_attribute AS H ON S.id = H.hero_id INNER JOIN attribute AS A ON H.attribute_id = A.id WHERE S.superhero_name = '3-D Man'\t----- bird -----\tsuperhero",
    "797": "SELECT superhero_name FROM superhero WHERE eye_colour_id = 7 AND hair_colour_id = 9\t----- bird -----\tsuperhero",
    "798": "SELECT T2.publisher_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.superhero_name IN ('Hawkman', 'Karate Kid', 'Speedy')\t----- bird -----\tsuperhero",
    "799": "SELECT COUNT(*) FROM superhero WHERE publisher_id IS NULL OR publisher_id = ''\t----- bird -----\tsuperhero",
    "800": "SELECT (COUNT(id) * 100.0 / (SELECT COUNT(*) FROM superhero)) as percentage FROM superhero WHERE eye_colour_id = 7\t----- bird -----\tsuperhero",
    "801": "SELECT (SUM(gender_id = 1) * 1.0) / SUM(gender_id = 2) AS ratio FROM superhero\t----- bird -----\tsuperhero",
    "802": "SELECT superhero_name, MAX(height_cm) FROM superhero ORDER BY height_cm DESC LIMIT 1\t----- bird -----\tsuperhero",
    "803": "SELECT id FROM superpower WHERE power_name = 'cryokinesis'\t----- bird -----\tsuperhero",
    "804": "SELECT superhero_name FROM superhero WHERE id = 294\t----- bird -----\tsuperhero",
    "805": "SELECT full_name FROM superhero WHERE weight_kg = 0 OR weight_kg IS NULL\t----- bird -----\tsuperhero",
    "806": "SELECT colour.colour FROM superhero INNER JOIN colour ON superhero.eye_colour_id = colour.id WHERE superhero.full_name = 'Karen Beecher-Duncan'\t----- bird -----\tsuperhero",
    "807": "SELECT superpower.power_name FROM superpower INNER JOIN hero_power ON superpower.id = hero_power.power_id INNER JOIN superhero ON hero_power.hero_id = superhero.id WHERE superhero.full_name = 'Helen Parr'\t----- bird -----\tsuperhero",
    "808": "SELECT T1.race FROM race AS T1 INNER JOIN superhero AS T2 ON T1.id = T2.race_id WHERE T2.weight_kg = 108 AND T2.height_cm = 188\t----- bird -----\tsuperhero",
    "809": "SELECT publisher.publisher_name FROM superhero INNER JOIN publisher ON superhero.publisher_id = publisher.id WHERE superhero.id = 38\t----- bird -----\tsuperhero",
    "810": "SELECT T2.race FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T1.id = ( SELECT hero_id FROM hero_attribute WHERE attribute_value = (SELECT MAX(attribute_value) FROM hero_attribute) )\t----- bird -----\tsuperhero",
    "811": "SELECT alignment.alignment, superpower.power_name FROM superhero INNER JOIN hero_power ON superhero.id = hero_power.hero_id INNER JOIN superpower ON hero_power.power_id = superpower.id INNER JOIN alignment ON superhero.alignment_id = alignment.id WHERE superhero.superhero_name = 'Atom IV'\t----- bird -----\tsuperhero",
    "812": "SELECT T1.full_name FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T2.colour = 'Blue' LIMIT 5\t----- bird -----\tsuperhero",
    "813": "SELECT AVG(T1.attribute_value) FROM hero_attribute AS T1 INNER JOIN superhero AS T2 ON T1.hero_id = T2.id WHERE T2.alignment_id = 3\t----- bird -----\tsuperhero",
    "814": "SELECT T1.colour FROM colour AS T1 INNER JOIN superhero AS T2 ON T1.id = T2.skin_colour_id INNER JOIN hero_attribute AS T3 ON T2.id = T3.hero_id WHERE T3.attribute_value = 100\t----- bird -----\tsuperhero",
    "815": "SELECT COUNT(*) FROM superhero AS S JOIN alignment AS A ON S.alignment_id = A.id JOIN gender AS G ON S.gender_id = G.id WHERE A.id = 1 AND G.id = 2\t----- bird -----\tsuperhero",
    "816": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id WHERE T2.attribute_value BETWEEN 75 AND 80\t----- bird -----\tsuperhero",
    "817": "SELECT T4.race FROM colour AS T1, gender AS T2, superhero AS T3, race AS T4 WHERE T1.id = T3.hair_colour_id AND T1.colour = 'Blue' AND T2.id = T3.gender_id AND T2.gender = 'Male' AND T3.race_id = T4.id\t----- bird -----\tsuperhero",
    "818": "SELECT (SELECT COUNT(*) FROM superhero WHERE gender_id = 2 AND alignment_id = 2) * 100.0 / COUNT(*) FROM superhero WHERE alignment_id = 2\t----- bird -----\tsuperhero",
    "819": "SELECT SUM(CASE WHEN T1.eye_colour_id = 7 THEN 1 ELSE 0 END) - SUM(CASE WHEN T1.eye_colour_id = 1 THEN 1 ELSE 0 END) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.weight_kg IS NULL OR T1.weight_kg = 0\t----- bird -----\tsuperhero",
    "820": "SELECT attribute_value FROM hero_attribute INNER JOIN superhero ON hero_attribute.hero_id = superhero.id WHERE superhero_name = 'Hulk' AND attribute_id = [known_id_for_Strength] Assuming we know the attribute_id for Strength.\t----- bird -----\tsuperhero",
    "821": "SELECT T3.power_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T1.superhero_name = 'Ajax'\t----- bird -----\tsuperhero",
    "822": "SELECT COUNT(*) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.skin_colour_id = T2.id INNER JOIN alignment AS T3 ON T1.alignment_id = T3.id WHERE T2.colour = 'Green' AND T3.alignment = 'Bad'\t----- bird -----\tsuperhero",
    "823": "SELECT COUNT(*) FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id INNER JOIN publisher AS T3 ON T1.publisher_id = T3.id WHERE T2.gender = 'Female' AND T3.publisher_name = 'Marvel Comics'\t----- bird -----\tsuperhero",
    "824": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T3.power_name = 'Wind Control' ORDER BY T1.superhero_name ASC\t----- bird -----\tsuperhero",
    "825": "SELECT gender.gender      FROM gender     JOIN superhero ON superhero.gender_id = gender.id     JOIN hero_power ON hero_power.hero_id = superhero.id     JOIN superpower ON superpower.id = hero_power.power_id     WHERE superpower.power_name = 'Phoenix Force'\t----- bird -----\tsuperhero",
    "826": "SELECT T1.superhero_name, MAX(T1.weight_kg) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'DC Comics'\t----- bird -----\tsuperhero",
    "827": "SELECT AVG(superhero.height_cm) FROM superhero INNER JOIN race ON superhero.race_id = race.id INNER JOIN publisher ON superhero.publisher_id = publisher.id WHERE race.race <> 'Human' AND publisher.publisher_name = 'Dark Horse Comics'\t----- bird -----\tsuperhero",
    "828": "SELECT COUNT(T1.hero_id) FROM hero_attribute AS T1 INNER JOIN attribute AS T2 ON T1.attribute_id = T2.id WHERE T1.attribute_value = 100 AND T2.attribute_name = 'Speed'\t----- bird -----\tsuperhero",
    "829": "SELECT     ABS((SELECT COUNT(*) FROM superhero AS S INNER JOIN publisher AS P ON S.publisher_id = P.id WHERE P.publisher_name = 'DC Comics')    -     (SELECT COUNT(*) FROM superhero AS S INNER JOIN publisher AS P ON S.publisher_id = P.id WHERE P.publisher_name = 'Marvel Comics')) AS difference;\t----- bird -----\tsuperhero",
    "830": "SELECT T1.attribute_name FROM attribute AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.attribute_id WHERE T2.hero_id = ( SELECT id FROM superhero WHERE superhero_name = 'Black Panther' ) AND T2.attribute_value = ( SELECT MIN(attribute_value) FROM hero_attribute WHERE hero_id = ( SELECT id FROM superhero WHERE superhero_name = 'Black Panther' ) )\t----- bird -----\tsuperhero",
    "831": "SELECT T2.colour FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.superhero_name = 'Abomination'\t----- bird -----\tsuperhero",
    "832": "SELECT superhero_name FROM superhero ORDER BY height_cm DESC LIMIT 1\t----- bird -----\tsuperhero",
    "833": "SELECT superhero_name FROM superhero WHERE full_name = 'Charles Chandler'\t----- bird -----\tsuperhero",
    "834": "SELECT (COUNT(CASE WHEN T3.gender = 'Female' THEN 1 END) * 100.0) / COUNT(*) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id INNER JOIN gender AS T3 ON T1.gender_id = T3.id WHERE T2.publisher_name = 'George Lucas'\t----- bird -----\tsuperhero",
    "835": "SELECT CAST(SUM(CASE WHEN A.alignment = 'Good' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM superhero AS S INNER JOIN alignment AS A ON S.alignment_id = A.id INNER JOIN publisher AS P ON S.publisher_id = P.id WHERE P.publisher_name = 'Marvel Comics'\t----- bird -----\tsuperhero",
    "836": "SELECT COUNT(*) FROM superhero WHERE full_name LIKE 'John%';\t----- bird -----\tsuperhero",
    "837": "SELECT hero_id FROM hero_attribute ORDER BY attribute_value ASC LIMIT 1\t----- bird -----\tsuperhero",
    "838": "SELECT full_name FROM superhero WHERE superhero_name = 'Alien'\t----- bird -----\tsuperhero",
    "839": "SELECT T1.full_name FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.weight_kg < 100 AND T2.colour = 'brown'\t----- bird -----\tsuperhero",
    "840": "SELECT attribute_value FROM hero_attribute INNER JOIN superhero ON hero_attribute.hero_id = superhero.id WHERE superhero_name = 'Aquababy'\t----- bird -----\tsuperhero",
    "841": "SELECT T1.weight_kg, T2.race FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T1.id = 40\t----- bird -----\tsuperhero",
    "842": "SELECT AVG(T1.height_cm) FROM superhero AS T1 INNER JOIN alignment AS T2 ON T1.alignment_id = T2.id WHERE T2.alignment = 'Neutral'\t----- bird -----\tsuperhero",
    "843": "SELECT T1.hero_id FROM hero_attribute AS T1 INNER JOIN attribute AS T2 ON T1.attribute_id = T2.id WHERE T2.attribute_name = 'Intelligence'\t----- bird -----\tsuperhero",
    "844": "SELECT colour.colour FROM superhero INNER JOIN colour ON superhero.eye_colour_id = colour.id WHERE superhero_name = 'Blackwulf'\t----- bird -----\tsuperhero",
    "845": "SELECT T3.power_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T1.height_cm > 0.8 * ( SELECT AVG(height_cm) FROM superhero )\t----- bird -----\tsuperhero",
    "846": "SELECT driverRef FROM drivers WHERE driverId IN ( SELECT driverId FROM qualifying WHERE raceId = 18 ORDER BY q1 DESC LIMIT 5 )\t----- bird -----\tformula_1",
    "847": "SELECT T1.surname FROM drivers AS T1 INNER JOIN lapTimes AS T2 ON T1.driverId = T2.driverId WHERE T2.driverId = (SELECT driverId FROM lapTimes WHERE raceId = 19 and lap = 2 and time = (SELECT MIN(time) FROM lapTimes WHERE raceId = 19 and lap = 2))\t----- bird -----\tformula_1",
    "848": "SELECT T1.year FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T2.location = 'Shanghai'\t----- bird -----\tformula_1",
    "849": "SELECT races.url FROM races INNER JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.name = 'Circuit de Barcelona-Catalunya'\t----- bird -----\tformula_1",
    "850": "SELECT races.name FROM races INNER JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.country = 'Germany'\t----- bird -----\tformula_1",
    "851": "SELECT T4.circuitRef FROM constructors AS T1 INNER JOIN constructorResults AS T2 ON T1.constructorId = T2.constructorId INNER JOIN races AS T3 ON T2.raceId = T3.raceId INNER JOIN circuits AS T4 ON T3.circuitId = T4.circuitId WHERE T1.name = 'Renault'\t----- bird -----\tformula_1",
    "852": "SELECT COUNT(*) FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T1.year = 2010 AND T2.location NOT LIKE '%Asia%' AND T2.location NOT LIKE '%Europe%'\t----- bird -----\tformula_1",
    "853": "SELECT races.name FROM races JOIN circuits ON races.circuitId=circuits.circuitId WHERE circuits.country='Spain'\t----- bird -----\tformula_1",
    "854": "SELECT T2.lat, T2.lng FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T1.name = 'Australian Grand Prix'\t----- bird -----\tformula_1",
    "855": "SELECT races.url FROM races INNER JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.circuitRef = 'sepang'\t----- bird -----\tformula_1",
    "856": "SELECT races.time FROM races INNER JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.circuitRef = 'sepang'\t----- bird -----\tformula_1",
    "857": "SELECT T1.lat, T1.lng FROM circuits AS T1 INNER JOIN races AS T2 ON T1.circuitId = T2.circuitId WHERE T2.name = 'Abu Dhabi Grand Prix'\t----- bird -----\tformula_1",
    "858": "SELECT constructors.nationality FROM constructorResults INNER JOIN constructors ON constructorResults.constructorId = constructors.constructorId WHERE constructorResults.points = 1 AND constructorResults.raceId = 24\t----- bird -----\tformula_1",
    "859": "SELECT qualifying.q1 FROM qualifying INNER JOIN drivers ON qualifying.driverId = drivers.driverId WHERE drivers.forename || ' ' || drivers.surname = 'Bruno Senna' AND qualifying.raceId = 354\t----- bird -----\tformula_1",
    "860": "SELECT T2.nationality FROM qualifying AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.q2 = '0:01:40' AND T1.qualifyId = 355\t----- bird -----\tformula_1",
    "861": "SELECT drivers.number FROM qualifying INNER JOIN drivers ON qualifying.driverId = drivers.driverId WHERE qualifying.q3 = '0:01:54' AND qualifying.raceId = 903\t----- bird -----\tformula_1",
    "862": "SELECT COUNT(T2.driverId) FROM races AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId WHERE T1.name = 'Bahrain Grand Prix' AND T1.year = 2007 AND T2.time IS NULL\t----- bird -----\tformula_1",
    "863": "SELECT T2.url FROM races AS T1 INNER JOIN seasons AS T2 ON T1.year = T2.year WHERE T1.raceId = 901\t----- bird -----\tformula_1",
    "864": "SELECT COUNT(T2.resultId) FROM races AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId WHERE T1.date = '2015/11/29' AND T2.time IS NOT NULL\t----- bird -----\tformula_1",
    "865": "SELECT T1.* FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T2.raceId = 592 AND T2.time IS NOT NULL ORDER BY T1.dob DESC LIMIT 1\t----- bird -----\tformula_1",
    "866": "SELECT drivers.url FROM drivers INNER JOIN lapTimes ON drivers.driverId = lapTimes.driverId WHERE lapTimes.time = '0:01:27' AND lapTimes.raceId = 161\t----- bird -----\tformula_1",
    "867": "SELECT nationality FROM drivers WHERE driverId = ( SELECT driverId FROM lapTimes WHERE raceId = 933 ORDER BY milliseconds ASC LIMIT 1 )\t----- bird -----\tformula_1",
    "868": "SELECT circuits.lat, circuits.lng FROM races JOIN circuits ON races.circuitId = circuits.circuitId WHERE races.name = 'Malaysian Grand Prix'\t----- bird -----\tformula_1",
    "869": "SELECT T2.url FROM constructorStandings AS T1 INNER JOIN constructors AS T2 ON T1.constructorId = T2.constructorId WHERE T1.constructorId = ( SELECT constructorId FROM constructorStandings WHERE raceId = 9 ORDER BY points DESC LIMIT 1 )\t----- bird -----\tformula_1",
    "870": "SELECT q.q1 FROM qualifying q JOIN drivers d ON q.driverId = d.driverId JOIN races r ON q.raceId = r.raceId WHERE r.raceId = 345 AND d.driverRef = 'lucas_di_grassi'\t----- bird -----\tformula_1",
    "871": "SELECT drivers.nationality FROM drivers INNER JOIN qualifying ON drivers.driverId = qualifying.driverId WHERE qualifying.q2 = '0:01:15' AND qualifying.raceId = 347\t----- bird -----\tformula_1",
    "872": "SELECT drivers.code FROM drivers INNER JOIN qualifying ON drivers.driverId = qualifying.driverId INNER JOIN races ON qualifying.raceId = races.raceId WHERE races.raceId = 45 AND qualifying.q3 = '0:01:33'\t----- bird -----\tformula_1",
    "873": "SELECT results.milliseconds FROM drivers INNER JOIN results ON drivers.driverId = results.driverId INNER JOIN races ON results.raceId = races.raceId WHERE races.raceId = 743 AND drivers.driverRef = 'bruce_mclaren'\t----- bird -----\tformula_1",
    "874": "SELECT D.driver_name FROM results AS R INNER JOIN races AS Race ON R.raceId = Race.raceId INNER JOIN drivers AS D ON R.driverId = D.driverId WHERE R.position = 2 AND Race.name = 'San Marino Grand Prix' AND Race.year = 2006Note: This assumes the existence of a drivers table (with columns driverId and driver_name), which isn't mentioned in the context provided. The original SQL query is correct given the provided context and schema.\t----- bird -----\tformula_1",
    "875": "SELECT T2.url FROM races AS T1 INNER JOIN seasons AS T2 ON T1.year = T2.year WHERE T1.raceId = 901\t----- bird -----\tformula_1",
    "876": "SELECT * FROM table\t----- bird -----\tformula_1",
    "877": "SELECT T1.* FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T2.raceId = 872 AND T2.time IS NOT NULL ORDER BY T1.dob DESC LIMIT 1\t----- bird -----\tformula_1",
    "878": "SELECT T2.forename, T2.surname FROM lapTimes AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.time = ( SELECT MIN(time) FROM lapTimes WHERE raceId = 348 ) AND T1.raceId = 348\t----- bird -----\tformula_1",
    "879": "SELECT T1.nationality FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T2.driverId = ( SELECT driverId FROM results WHERE fastestLapSpeed = (SELECT MAX(fastestLapSpeed) FROM results) )\t----- bird -----\tformula_1",
    "880": "SELECT ((SELECT MIN(time) FROM lapTimes WHERE driverId = (SELECT driverId FROM drivers WHERE driverRef = 'paul_di_resta') AND raceId = 853) - (SELECT MIN(time) FROM lapTimes WHERE driverId = (SELECT driverId FROM drivers WHERE driverRef = 'paul_di_resta') AND raceId = 854))/(SELECT MIN(time) FROM lapTimes WHERE driverId = (SELECT driverId FROM drivers WHERE driverRef = 'paul_di_resta') AND raceId = 853) as percentageThis query assumes that the time column represents the time it took for the lap, so the minimum time would represent the fastest lap. If this is not the case, the query would need to be revised to use the appropriate column for lap speed.\t----- bird -----\tformula_1",
    "881": "SELECT COUNT(T1.driverId) * 1.0 / (SELECT COUNT(*) FROM results T1 INNER JOIN races T2 ON T1.raceId = T2.raceId WHERE T2.date = '1983-07-16') FROM results T1 INNER JOIN races T2 ON T1.raceId = T2.raceId WHERE T1.time IS NOT NULL AND T2.date = '1983-07-16'\t----- bird -----\tformula_1",
    "882": "SELECT MIN(year) FROM races JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.circuitRef = 'singapore'\t----- bird -----\tformula_1",
    "883": "SELECT COUNT(*) AS total_races, name FROM races WHERE year = 2005 ORDER BY name DESC\t----- bird -----\tformula_1",
    "884": "SELECT * FROM races WHERE strftime('%Y-%m', date) = strftime('%Y-%m', (SELECT MIN(date) FROM races))\t----- bird -----\tformula_1",
    "885": "SELECT * FROM table\t----- bird -----\tformula_1",
    "886": "SELECT year, COUNT(raceId) as number_of_races FROM races GROUP BY year ORDER BY number_of_races DESC LIMIT 1\t----- bird -----\tformula_1",
    "887": "SELECT name FROM races WHERE year = '2017' AND name NOT IN (SELECT name FROM races WHERE year = '2000')\t----- bird -----\tformula_1",
    "888": "SELECT T1.country, T1.circuitRef, T1.location FROM circuits AS T1 INNER JOIN (SELECT * FROM races WHERE year = (SELECT MIN(year) FROM races WHERE name = 'European Grand Prix') AND round = 1) AS T2 ON T1.circuitId = T2.circuitId\t----- bird -----\tformula_1",
    "889": "SELECT MAX(T1.year) FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T2.circuitRef = 'Brands Hatch'\t----- bird -----\tformula_1",
    "890": "SELECT COUNT(DISTINCT year) FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T2.circuitRef = 'silverstone' AND T1.name = 'British Grand Prix'\t----- bird -----\tformula_1",
    "891": "SELECT T1.driverId FROM driverStandings AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.year = 2010 AND T2.name = 'Singapore Grand Prix' ORDER BY T1.position\t----- bird -----\tformula_1",
    "892": "SELECT T2.forename, T2.surname, MAX(T1.points) FROM driverStandings AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId GROUP BY T2.forename, T2.surname\t----- bird -----\tformula_1",
    "893": "SELECT T1.forename, T1.surname, T2.points FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T2.raceId = ( SELECT raceId FROM races WHERE year = 2017 AND name = 'Chinese Grand Prix' ) ORDER BY T2.points DESC LIMIT 3\t----- bird -----\tformula_1",
    "894": "SELECT MIN(lapTimes.time), drivers.driverId, races.raceId FROM lapTimes INNER JOIN drivers ON lapTimes.driverId = drivers.driverId INNER JOIN races ON lapTimes.raceId = races.raceId\t----- bird -----\tformula_1",
    "895": "SELECT AVG(lapTimes.time) FROM lapTimes INNER JOIN drivers ON lapTimes.driverId = drivers.driverId INNER JOIN races ON lapTimes.raceId = races.raceId WHERE drivers.forename = 'Sebastian' AND drivers.surname = 'Vettel' AND races.year = 2009 AND races.name = 'Chinese Grand Prix'\t----- bird -----\tformula_1",
    "896": "SELECT (COUNT(T1.raceId) * 1.0 / (SELECT COUNT(*) FROM results T3 INNER JOIN drivers T4 ON T3.driverId = T4.driverId INNER JOIN races T5 ON T3.raceId = T5.raceId WHERE T4.surname = 'Hamilton' AND T5.year >= 2010)) * 100 FROM results T1 INNER JOIN drivers T2 ON T1.driverId = T2.driverId INNER JOIN races T6 ON T1.raceId = T6.raceId WHERE T2.surname = 'Hamilton' AND T6.year >= 2010 AND T1.position > 1\t----- bird -----\tformula_1",
    "897": "SELECT T2.forename, T2.surname, T2.nationality, AVG(T1.points) FROM driverStandings AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId GROUP BY T1.driverId ORDER BY COUNT(T1.wins) DESC LIMIT 1\t----- bird -----\tformula_1",
    "898": "SELECT forename, surname, 2022 - CAST(strftime('%Y', dob) AS INTEGER) + 1 AS age FROM drivers WHERE nationality = 'Japanese' ORDER BY dob DESC LIMIT 1\t----- bird -----\tformula_1",
    "899": "SELECT circuitRef FROM circuits WHERE circuitId IN ( SELECT circuitId FROM races WHERE year BETWEEN 1990 AND 2000 GROUP BY circuitId HAVING COUNT(raceId) = 4 )\t----- bird -----\tformula_1",
    "900": "SELECT circuits.name, circuits.location, races.name FROM circuits INNER JOIN races ON circuits.circuitId = races.circuitId WHERE circuits.country = 'USA' AND races.year = 2006\t----- bird -----\tformula_1",
    "901": "SELECT T1.name, T2.circuitRef FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE strftime('%Y', T1.date) = '2005' AND strftime('%m', T1.date) = '09'\t----- bird -----\tformula_1",
    "902": "SELECT T3.raceId FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T1.raceId = T3.raceId WHERE T2.driverRef = 'Alex Yoong' AND T1.position < 10\t----- bird -----\tformula_1",
    "903": "SELECT COUNT(*) FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T2.raceId = T3.raceId INNER JOIN circuits AS T4 ON T3.circuitId = T4.circuitId WHERE T1.surname = 'Schumacher' AND T1.forename = 'Michael' AND T4.circuitRef = 'Sepang' AND T2.points = (SELECT MAX(points) FROM results WHERE raceId = T2.raceId)\t----- bird -----\tformula_1",
    "904": "SELECT T1.raceId, T2.year FROM lapTimes AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T1.milliseconds = ( SELECT MIN(milliseconds) FROM lapTimes WHERE driverId = ( SELECT driverId FROM drivers WHERE driverRef = 'Michael Schumacher' ) )\t----- bird -----\tformula_1",
    "905": "SELECT AVG(driverStandings.points) FROM drivers INNER JOIN driverStandings ON drivers.driverId = driverStandings.driverId INNER JOIN races ON driverStandings.raceId = races.raceId WHERE drivers.forename = 'Eddie' AND drivers.surname = 'Irvine' AND races.year = 2000\t----- bird -----\tformula_1",
    "906": "SELECT T2.points FROM races AS T1 INNER JOIN driverStandings AS T2 ON T1.raceId = T2.raceId WHERE T1.year = ( SELECT MIN(year) FROM races WHERE raceId IN (SELECT raceId FROM driverStandings WHERE driverId = (SELECT driverId FROM drivers WHERE forename='Lewis' AND surname='Hamilton')))\t----- bird -----\tformula_1",
    "907": "SELECT races.raceId, circuits.country FROM races INNER JOIN circuits ON races.circuitId = circuits.circuitId WHERE races.year = 2017 ORDER BY races.date\t----- bird -----\tformula_1",
    "908": "SELECT T1.name, T1.year, T2.location FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T1.raceId = (SELECT raceId FROM lapTimes GROUP BY raceId ORDER BY MAX(lap) DESC LIMIT 1)\t----- bird -----\tformula_1",
    "909": "SELECT (SELECT COUNT(*) FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T2.country = 'Germany' AND T1.name = 'Europearn Grand Prix') * 100.0 / COUNT(*) FROM races WHERE name = 'Europearn Grand Prix'\t----- bird -----\tformula_1",
    "910": "SELECT * FROM table\t----- bird -----\tformula_1",
    "911": "SELECT circuitRef FROM circuits WHERE circuitRef IN ('Silverstone Circuit', 'Hockenheimring', 'Hungaroring') ORDER BY lat DESC LIMIT 1\t----- bird -----\tformula_1",
    "912": "SELECT circuitRef FROM circuits WHERE name = 'Marina Bay Street Circuit'\t----- bird -----\tformula_1",
    "913": "SELECT * FROM table\t----- bird -----\tformula_1",
    "914": "SELECT COUNT(*) FROM drivers WHERE code IS NULL\t----- bird -----\tformula_1",
    "915": "SELECT nationality FROM drivers WHERE dob = (SELECT MIN(dob) FROM drivers)However, this assumes that the \"dob\" and \"nationality\" columns exist in the \"drivers\" table, which they do not according to the provided schema. Therefore, the question cannot be answered with the given information.\t----- bird -----\tformula_1",
    "916": "SELECT * FROM table\t----- bird -----\tformula_1",
    "917": "SELECT url FROM drivers WHERE forename = 'Anthony' AND surname = 'Davidson'\t----- bird -----\tformula_1",
    "918": "SELECT * FROM table\t----- bird -----\tformula_1",
    "919": "SELECT T2.circuitRef FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T1.name = 'Spanish Grand Prix' AND T1.year = 2009\t----- bird -----\tformula_1",
    "920": "SELECT races.year FROM races INNER JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.circuitRef = 'silverstone'\t----- bird -----\tformula_1",
    "921": "SELECT T2.url FROM circuits AS T1 INNER JOIN races AS T2 ON T1.circuitId = T2.circuitId WHERE T1.circuitRef = 'Silverstone'\t----- bird -----\tformula_1",
    "922": "SELECT races.time FROM races INNER JOIN circuits ON races.circuitId = circuits.circuitId WHERE races.year = 2010 AND circuits.circuitRef = 'Abu Dhabi'\t----- bird -----\tformula_1",
    "923": "SELECT COUNT(T1.raceId) FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T2.country = 'Italy'\t----- bird -----\tformula_1",
    "924": "SELECT T1.date FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T2.circuitRef = 'Barcelona-Catalunya'\t----- bird -----\tformula_1",
    "925": "SELECT circuits.url FROM races INNER JOIN circuits ON races.circuitId = circuits.circuitId WHERE races.name = 'Spanish Grand Prix' AND races.year = 2009\t----- bird -----\tformula_1",
    "926": "SELECT MIN(lapTimes.time) FROM lapTimes INNER JOIN drivers ON drivers.driverId = lapTimes.driverId WHERE drivers.driverRef = 'Lewis Hamilton'\t----- bird -----\tformula_1",
    "927": "SELECT forename, surname FROM drivers WHERE driverId = (SELECT driverId FROM lapTimes WHERE lap = 1 ORDER BY time ASC LIMIT 1)\t----- bird -----\tformula_1",
    "928": "SELECT drivers.driverRef FROM results INNER JOIN races ON results.raceId = races.raceId INNER JOIN drivers ON results.driverId = drivers.driverId WHERE races.name = 'Australian Grand Prix' AND races.year = 2008 AND results.position = 1\t----- bird -----\tformula_1",
    "929": "SELECT raceId FROM results WHERE driverId = ( SELECT driverId FROM drivers WHERE forename='Lewis' AND surname='Hamilton' )\t----- bird -----\tformula_1",
    "930": "SELECT MIN(T2.position) FROM drivers AS T1 INNER JOIN driverStandings AS T2 ON T1.driverId = T2.driverId WHERE T1.driverRef = 'Lewis Hamilton'\t----- bird -----\tformula_1",
    "931": "SELECT MAX(T1.lapSpeed) FROM lapTimes AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.year = 2009 AND T2.name = 'Spanish Grand Prix'\t----- bird -----\tformula_1",
    "932": "SELECT DISTINCT T3.year FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T2.raceId = T3.raceId WHERE T1.driverRef = 'Lewis Hamilton'\t----- bird -----\tformula_1",
    "933": "SELECT T2.positionOrder FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T2.raceId = T3.raceId WHERE T1.forename = 'Lewis' AND T1.surname = 'Hamilton' AND T3.year = 2008 AND T3.name = 'Australian Grand Prix'\t----- bird -----\tformula_1",
    "934": "SELECT drivers.forename, drivers.surname FROM results INNER JOIN drivers ON results.driverId = drivers.driverId INNER JOIN races ON results.raceId = races.raceId WHERE results.grid = 4 AND races.year = 2008 AND races.name = 'Australian Grand Prix'\t----- bird -----\tformula_1",
    "935": "SELECT COUNT(T1.driverId) FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.name = '2008 Australian Grand Prix' AND T1.time IS NOT NULL\t----- bird -----\tformula_1",
    "936": "SELECT MIN(T1.time) FROM lapTimes AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T1.raceId = T3.raceId WHERE T2.name = 'Lewis Hamilton' AND T3.name = '2008 Australian Grand Prix'\t----- bird -----\tformula_1",
    "937": "SELECT results.time FROM results INNER JOIN races ON results.raceId = races.raceId WHERE races.name = 'Australian Grand Prix' AND races.year = 2008 AND results.positionOrder = 2\t----- bird -----\tformula_1",
    "938": "SELECT drivers.url FROM results INNER JOIN drivers ON results.driverId = drivers.driverId INNER JOIN races ON results.raceId = races.raceId WHERE races.year = 2008 AND races.name = 'Australian Grand Prix' AND results.position = 1\t----- bird -----\tformula_1",
    "939": "SELECT COUNT(DISTINCT T1.driverId) FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T1.raceId = T3.raceId WHERE T2.nationality = 'American' AND T3.year = 2008 AND T3.name = 'Australian Grand Prix'\t----- bird -----\tformula_1",
    "940": "SELECT COUNT(DISTINCT T1.driverId) FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.raceId = ( SELECT raceId FROM races WHERE year = 2008 AND name = 'Australian Grand Prix' ) AND T1.time IS NOT NULL\t----- bird -----\tformula_1",
    "941": "SELECT SUM(T1.points) FROM driverStandings AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T2.driverRef = 'Lewis Hamilton'\t----- bird -----\tformula_1",
    "942": "SELECT AVG((CAST(substr(T1.fastestLapTime, 1, instr(T1.fastestLapTime, ':') - 1) as REAL) * 60 + CAST(substr(T1.fastestLapTime, instr(T1.fastestLapTime, ':') + 1) as REAL))) FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T2.forename = 'Lewis' AND T2.surname = 'Hamilton'\t----- bird -----\tformula_1",
    "943": "SELECT (COUNT(DISTINCT T1.driverId) * 1.0 / COUNT(DISTINCT T2.driverId)) * 100 AS rate FROM lapTimes AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.year = 2008 AND T2.name = 'Australian Grand Prix'\t----- bird -----\tformula_1",
    "944": "SELECT ((SELECT MAX(time) FROM results WHERE raceId = (SELECT raceId FROM races WHERE year = 2008 AND name = 'Australian Grand Prix')) - (SELECT time FROM results WHERE raceId = (SELECT raceId FROM races WHERE year = 2008 AND name = 'Australian Grand Prix') AND position = 1)) / (SELECT MAX(time) FROM results WHERE raceId = (SELECT raceId FROM races WHERE year = 2008 AND name = 'Australian Grand Prix')) * 100 AS percentage_diffThis query will calculate the difference in time between the champion and the last driver, divided by the time of the last driver, then multiplied by 100 to get the percentage.\t----- bird -----\tformula_1",
    "945": "SELECT COUNT(*) FROM circuits WHERE location = 'Melbourne' AND country = 'Australia'\t----- bird -----\tformula_1",
    "946": "SELECT * FROM table\t----- bird -----\tformula_1",
    "947": "SELECT COUNT(*) FROM drivers WHERE nationality = 'British' AND year(dob) > 1980\t----- bird -----\tformula_1",
    "948": "SELECT AVG(T1.points) FROM constructorStandings AS T1 INNER JOIN constructors AS T2 ON T1.constructorId = T2.constructorId WHERE T2.nationality = 'British'\t----- bird -----\tformula_1",
    "949": "SELECT constructors.name, MAX(constructorStandings.points) FROM constructorStandings INNER JOIN constructors ON constructorStandings.constructorId = constructors.constructorId\t----- bird -----\tformula_1",
    "950": "SELECT constructors.name FROM constructorResults INNER JOIN constructors ON constructorResults.constructorId = constructors.constructorId WHERE constructorResults.points = 0 AND constructorResults.raceId = 291\t----- bird -----\tformula_1",
    "951": "SELECT COUNT(*) FROM ( SELECT constructorId, COUNT(raceId) AS num_races FROM constructorResults WHERE points = 0 AND constructorId IN ( SELECT constructorId FROM constructors WHERE nationality = 'Japanese' ) GROUP BY constructorId ) WHERE num_races = 2\t----- bird -----\tformula_1",
    "952": "SELECT T1.constructorId FROM constructors as T1 INNER JOIN constructorStandings as T2 ON T1.constructorId = T2.constructorId WHERE T2.position = 1\t----- bird -----\tformula_1",
    "953": "SELECT COUNT(DISTINCT T1.constructorId) FROM constructors AS T1 INNER JOIN lapTimes AS T2 ON T1.constructorId = T2.constructorId WHERE T1.nationality = 'French' AND T2.lap > 50\t----- bird -----\tformula_1",
    "954": "SELECT (SELECT COUNT(*) FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T1.raceId = T3.raceId WHERE T1.time IS NOT NULL AND T2.nationality = 'Japanese' AND T3.year BETWEEN 2007 AND 2009) * 100 / (SELECT COUNT(*) FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T1.raceId = T3.raceId WHERE T2.nationality = 'Japanese' AND T3.year BETWEEN 2007 AND 2009) AS Percentage\t----- bird -----\tformula_1",
    "955": "SELECT races.year, AVG(SUBSTR(results.time, 1, 2) * 3600 + SUBSTR(results.time, 4, 2) * 60 + SUBSTR(results.time, 7, 2)) AS average_time FROM races INNER JOIN results ON races.raceId = results.raceId WHERE results.position = 1 AND results.time IS NOT NULL GROUP BY races.year\t----- bird -----\tformula_1",
    "956": "SELECT T1.forename, T1.surname FROM drivers AS T1 INNER JOIN driverStandings AS T2 ON T1.driverId = T2.driverId WHERE strftime('%Y', T1.dob) > '1975' AND T2.position = 2\t----- bird -----\tformula_1",
    "957": "SELECT COUNT(T1.driverId) FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T1.nationality = 'Italian' AND T2.time IS NULL\t----- bird -----\tformula_1",
    "958": "SELECT T1.forename, T1.surname FROM drivers AS T1 INNER JOIN lapTimes AS T2 ON T1.driverId = T2.driverId WHERE T2.time = ( SELECT MIN(time) FROM lapTimes )\t----- bird -----\tformula_1",
    "959": "SELECT MIN(lapTimes.lap) FROM lapTimes INNER JOIN driverStandings ON lapTimes.driverId = driverStandings.driverId WHERE driverStandings.position = 1\t----- bird -----\tformula_1",
    "960": "SELECT AVG(T2.fastestLapSpeed) FROM races AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId WHERE T1.name = 'Spanish Grand Prix' AND T1.year = 2009\t----- bird -----\tformula_1",
    "961": "SELECT T2.name, T2.year FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T1.milliseconds IS NOT NULL ORDER BY T1.milliseconds ASC LIMIT 1\t----- bird -----\tformula_1",
    "962": "SELECT (CAST((SELECT COUNT(T1.driverId) FROM drivers AS T1 INNER JOIN lapTimes AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T2.raceId = T3.raceId WHERE strftime('%Y', T1.dob) < 1985 AND T2.lap > 50 AND T3.year BETWEEN 2000 AND 2005) AS REAL) / (SELECT COUNT(T1.driverId) FROM drivers AS T1 INNER JOIN lapTimes AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T2.raceId = T3.raceId WHERE T3.year BETWEEN 2000 AND 2005) * 100) AS percentage\t----- bird -----\tformula_1",
    "963": "SELECT COUNT(DISTINCT T1.driverId) FROM drivers AS T1 INNER JOIN lapTimes AS T2 ON T1.driverId = T2.driverId WHERE T1.nationality = 'French' AND T2.time < '02:00.00'\t----- bird -----\tformula_1",
    "964": "SELECT code FROM drivers WHERE nationality = 'America'\t----- bird -----\tformula_1",
    "965": "Cannot be written due to absence of year column in the table schema.\t----- bird -----\tformula_1",
    "966": "SELECT COUNT(driverId) FROM results WHERE raceId = 18\t----- bird -----\tformula_1",
    "967": "SELECT COUNT(*) FROM (SELECT * FROM drivers ORDER BY dob DESC LIMIT 3) WHERE nationality = 'Dutch'\t----- bird -----\tformula_1",
    "968": "SELECT driverRef FROM drivers WHERE forename = 'Robert' AND surname = 'Kubica'; However, it's important to note that according to the provided sample data, there's no \"driverRef\", \"forename\", \"surname\" and other columns in the \"drivers\" table. So, the actual answer depends on the real structure of the table.\t----- bird -----\tformula_1",
    "969": "SELECT COUNT(*) FROM drivers WHERE strftime('%Y', dob) = '1980' AND nationality = 'Australian'\t----- bird -----\tformula_1",
    "970": "SELECT T1.driverId, MIN(T2.time) as min_time FROM drivers AS T1 INNER JOIN lapTimes AS T2 ON T1.driverId = T2.driverId WHERE T1.driverId IN (SELECT driverId FROM drivers WHERE nationality = 'German' AND strftime('%Y', dob) BETWEEN '1980' AND '1990') GROUP BY T1.driverId ORDER BY min_time ASC LIMIT 3\t----- bird -----\tformula_1",
    "971": "SELECT driverRef FROM drivers WHERE nationality = 'German' ORDER BY dob ASC LIMIT 1However, we lack the necessary columns in the provided schema. The schema only includes driverId, so we can't perform the necessary query.\t----- bird -----\tformula_1",
    "972": "SELECT T1.driverId, T1.code FROM drivers AS T1 INNER JOIN lapTimes AS T2 ON T1.driverId = T2.driverId WHERE strftime('%Y', T1.dob) = '1971' ORDER BY T2.time LIMIT 1\t----- bird -----\tformula_1",
    "973": "SELECT T1.driverId, MAX(T2.time) FROM drivers AS T1 INNER JOIN lapTimes AS T2 ON T1.driverId = T2.driverId WHERE T1.driverId IN ( SELECT driverId FROM drivers WHERE nationality = 'Spanish' AND strftime('%Y', dob) < '1982' ) GROUP BY T1.driverId ORDER BY MAX(T2.time) DESC LIMIT 10\t----- bird -----\tformula_1",
    "974": "SELECT T2.year FROM lapTimes AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId ORDER BY T1.time ASC LIMIT 1\t----- bird -----\tformula_1",
    "975": "SELECT T2.year FROM lapTimes AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId ORDER BY T1.time DESC LIMIT 1\t----- bird -----\tformula_1",
    "976": "SELECT driverId FROM lapTimes WHERE lap = 1 GROUP BY driverId ORDER BY MIN(time) ASC LIMIT 5\t----- bird -----\tformula_1",
    "977": "SELECT COUNT(*) FROM results AS T1 INNER JOIN status AS T2 ON T1.statusId = T2.statusId WHERE T1.raceId > 50 AND T1.raceId < 100 AND T1.statusId = 2 AND T1.time IS NOT NULL\t----- bird -----\tformula_1",
    "978": "SELECT T1.location, T1.lat, T1.lng, COUNT(T2.raceId) FROM circuits AS T1 INNER JOIN races AS T2 ON T1.circuitId = T2.circuitId WHERE T1.country = 'Austria' GROUP BY T1.location, T1.lat, T1.lng\t----- bird -----\tformula_1",
    "979": "SELECT raceId, COUNT(resultId) as finishers FROM results WHERE time IS NOT NULL GROUP BY raceId ORDER BY finishers DESC LIMIT 1\t----- bird -----\tformula_1",
    "980": "SELECT T1.driverId FROM drivers AS T1 INNER JOIN qualifying AS T2 ON T1.driverId = T2.driverId WHERE T2.q2 IS NOT NULLHowever, this query does not completely answer the question, since the drivers table schema provided does not have the columns driverRef, nationality and dob. Hence, the query cannot retrieve the reference name of the drivers, their nationality and birthday.\t----- bird -----\tformula_1",
    "981": "SELECT T3.year, T3.name, T3.date, T3.time FROM drivers AS T1 INNER JOIN qualifying AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T2.raceId = T3.raceId WHERE T1.driverId = ( SELECT driverId FROM drivers ORDER BY dob DESC LIMIT 1 ) ORDER BY T3.year ASC LIMIT 1\t----- bird -----\tformula_1",
    "982": "SELECT COUNT(DISTINCT D.driverId) FROM drivers D INNER JOIN results R ON D.driverId = R.driverId WHERE D.nationality = 'American' AND R.statusId = 2\t----- bird -----\tformula_1",
    "983": "SELECT T2.url, MAX(T1.points) FROM constructorStandings AS T1 INNER JOIN constructors AS T2 ON T1.constructorId = T2.constructorId WHERE T2.nationality = 'Italian'\t----- bird -----\tformula_1",
    "984": "SELECT url FROM constructors WHERE constructorId = ( SELECT constructorId FROM constructorStandings ORDER BY wins DESC LIMIT 1 )\t----- bird -----\tformula_1",
    "985": "SELECT T1.driverId, MAX(T1.time) FROM lapTimes AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T1.raceId = T3.raceId WHERE T3.name = 'French Grand Prix' AND T1.lap = 3\t----- bird -----\tformula_1",
    "986": "SELECT lt.raceId, min(lt.milliseconds) FROM lapTimes AS lt INNER JOIN races AS r ON lt.raceId = r.raceId WHERE lt.lap = 1 ORDER BY lt.milliseconds ASC LIMIT 1\t----- bird -----\tformula_1",
    "987": "SELECT AVG(T1.fastestLapTime) FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.name = 'United States Grand Prix' AND T2.year = 2006 AND T1.rank < 11\t----- bird -----\tformula_1",
    "988": "SELECT drivers.driverId, AVG(pitStops.duration) as average_duration FROM drivers JOIN pitStops ON drivers.driverId = pitStops.driverId WHERE drivers.nationality = 'German' AND SUBSTR(drivers.dob, 1, 4) BETWEEN 1980 AND 1985 GROUP BY drivers.driverId ORDER BY average_duration ASC LIMIT 5\t----- bird -----\tformula_1",
    "989": "SELECT results.time FROM races INNER JOIN results ON races.raceId = results.raceId WHERE races.name = 'Canadian Grand Prix' AND races.year = 2008 AND results.position = 1\t----- bird -----\tformula_1",
    "990": "SELECT constructors.constructorRef, constructors.url FROM constructorsJOIN results ON constructors.constructorId = results.constructorIdJOIN races ON results.raceId = races.raceIdWHERE results.time = (SELECT MIN(results.time) FROM resultsJOIN races ON results.raceId = races.raceIdWHERE races.name = '2009 Singapore Grand Prix' AND races.year = 2009)\t----- bird -----\tformula_1",
    "991": "SELECT forename, surname, dob FROM drivers WHERE nationality = 'Austrian' AND dob BETWEEN '1981-01-01' AND '1991-12-31'\t----- bird -----\tformula_1",
    "992": "SELECT forename || ' ' || surname AS full_name, url, dob FROM drivers WHERE nationality = 'German' AND strftime('%Y', dob) BETWEEN '1971' AND '1985' ORDER BY dob DESC\t----- bird -----\tformula_1",
    "993": "SELECT location, country, lat, lng FROM circuits WHERE circuitRef = 'hungaroring' But we don't have enough information in the schema to answer this question.\t----- bird -----\tformula_1",
    "994": "SELECT MAX(T1.points), T2.name, T2.nationality FROM constructorStandings AS T1 INNER JOIN constructors AS T2 ON T1.constructorId = T2.constructorId WHERE T1.raceId IN ( SELECT raceId FROM races WHERE name = 'Monaco Grand Prix' AND year BETWEEN 1980 AND 2010 )\t----- bird -----\tformula_1",
    "995": "SELECT AVG(results.points) FROM results INNER JOIN races ON results.raceId = races.raceId INNER JOIN drivers ON results.driverId = drivers.driverId WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton' AND races.name = 'Turkish Grand Prix'\t----- bird -----\tformula_1",
    "996": "SELECT COUNT(raceId)/10.0 AS average_annual_races FROM races WHERE date BETWEEN '2000-01-01' AND '2010-12-31'\t----- bird -----\tformula_1",
    "997": "SELECT nationality FROM drivers GROUP BY nationality ORDER BY COUNT(driverId) DESC LIMIT 1However, since the nationality column is not available in the given schema, the query cannot be executed.\t----- bird -----\tformula_1",
    "998": "SELECT wins FROM driverStandings ORDER BY points DESC LIMIT 1 OFFSET 90This will return the number of wins of the driver who is ranked 91st in terms of points.\t----- bird -----\tformula_1",
    "999": "Unfortunately, the provided tables do not contain any column that could represent the lap time or speed, making it impossible to fix the query without additional information.\t----- bird -----\tformula_1",
    "1000": "SELECT T1.location || ', ' || T1.country AS full_location FROM circuits AS T1 INNER JOIN races AS T2 ON T1.circuitId = T2.circuitId ORDER BY T2.date DESC LIMIT 1\t----- bird -----\tformula_1",
    "1001": "SELECT T2.forename, T2.surname FROM qualifying AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.raceId = (SELECT raceId FROM races WHERE year = 2008 AND circuitId = (SELECT circuitId FROM circuits WHERE circuitRef = 'Marina Bay Street Circuit')) AND T1.q3 = (SELECT MIN(q3) FROM qualifying WHERE raceId = (SELECT raceId FROM races WHERE year = 2008 AND circuitId = (SELECT circuitId FROM circuits WHERE circuitRef = 'Marina Bay Street Circuit')))\t----- bird -----\tformula_1",
    "1002": "SELECT T1.forename || ' ' || T1.surname AS full_name, T1.nationality, T3.name FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T2.raceId = T3.raceId WHERE T1.driverId = ( SELECT driverId FROM drivers WHERE dob = ( SELECT MAX(dob) FROM drivers ) ) ORDER BY T2.raceId ASC LIMIT 1\t----- bird -----\tformula_1",
    "1003": "SELECT driverId, COUNT(*) as accident_count FROM results JOIN races ON results.raceId = races.raceId WHERE statusId = 3 AND name = 'Canadian Grand Prix' GROUP BY driverId ORDER BY accident_count DESC LIMIT 1But again, this query cannot be run without the driverId column in the results table.\t----- bird -----\tformula_1",
    "1004": "SELECT T1.forename || ' ' || T1.surname AS full_name, SUM(T2.wins) AS total_wins FROM drivers AS T1 INNER JOIN driverStandings AS T2 ON T1.driverId = T2.driverId WHERE T1.driverId = (SELECT driverId FROM drivers WHERE dob = (SELECT MIN(dob) FROM drivers)) GROUP BY full_name\t----- bird -----\tformula_1",
    "1005": "SELECT MAX(duration) FROM pitStops But as mentioned, the duration column is not in the provided table schema.\t----- bird -----\tformula_1",
    "1006": "SELECT * FROM table\t----- bird -----\tformula_1",
    "1007": "SELECT MAX(T2.duration) FROM drivers AS T1 INNER JOIN pitStops AS T2 ON T1.driverId = T2.driverId WHERE T1.forename = 'Lewis' AND T1.surname = 'Hamilton'\t----- bird -----\tformula_1",
    "1008": "SELECT lap FROM pitStops WHERE driverId = ( SELECT driverId FROM drivers WHERE driverRef = 'hamilton' ) AND raceId = ( SELECT raceId FROM races WHERE year = 2011 AND name = 'Australian Grand Prix' )\t----- bird -----\tformula_1",
    "1009": "SELECT pitStops.driverId, SUM(pitStops.duration) FROM pitStops INNER JOIN races ON pitStops.raceId = races.raceId WHERE races.name = 'Australian Grand Prix' AND races.year = 2011 GROUP BY pitStops.driverId\t----- bird -----\tformula_1",
    "1010": "SELECT MIN(lapTimes.time) FROM lapTimes INNER JOIN drivers ON lapTimes.driverId = drivers.driverId WHERE drivers.driverRef = 'Lewis Hamilton'\t----- bird -----\tformula_1",
    "1011": "SELECT drivers.forename, drivers.surname FROM drivers INNER JOIN lapTimes ON drivers.driverId = lapTimes.driverId WHERE lapTimes.time = (SELECT MIN(time) FROM lapTimes)\t----- bird -----\tformula_1",
    "1012": "SELECT lapTimes.position FROM lapTimes INNER JOIN drivers ON lapTimes.driverId = drivers.driverId INNER JOIN races ON lapTimes.raceId = races.raceId WHERE drivers.driverRef = 'lewis_hamilton' ORDER BY lapTimes.time ASC LIMIT 1\t----- bird -----\tformula_1",
    "1013": "SELECT MIN(T1.milliseconds) FROM lapTimes AS T1 INNER JOIN circuits AS T2 ON T1.raceId = T2.circuitId WHERE T2.circuitRef = 'Austrian Grand Prix Circuit'\t----- bird -----\tformula_1",
    "1014": "SELECT circuits.circuitRef, MIN(lapTimes.time) FROM lapTimes INNER JOIN races ON lapTimes.raceId = races.raceId INNER JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.country = 'Italy' GROUP BY circuits.circuitRef\t----- bird -----\tformula_1",
    "1015": "SELECT T1.raceId FROM lapTimes AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN circuits AS T3 ON T2.circuitId = T3.circuitId WHERE T3.circuitRef = 'Austrian Grand Prix Circuit' ORDER BY T1.time ASC LIMIT 1\t----- bird -----\tformula_1",
    "1016": "SELECT SUM(duration) FROM pitStops WHERE raceId = (SELECT raceId FROM lapTimes ORDER BY time ASC LIMIT 1) AND driverId = (SELECT driverId FROM lapTimes ORDER BY time ASC LIMIT 1)\t----- bird -----\tformula_1",
    "1017": "SELECT T1.lat, T1.lng FROM circuits AS T1 INNER JOIN lapTimes AS T2 ON T1.circuitId = T2.raceId WHERE T2.time = '1:29.488'\t----- bird -----\tformula_1",
    "1018": "SELECT AVG(pitStops.milliseconds) FROM drivers INNER JOIN pitStops ON drivers.driverId = pitStops.driverId WHERE drivers.driverRef = 'Lewis Hamilton'\t----- bird -----\tformula_1",
    "1019": "SELECT AVG(lapTimes.milliseconds) FROM lapTimes INNER JOIN circuits ON circuits.circuitId = lapTimes.raceId WHERE circuits.country = 'Italy'\t----- bird -----\tformula_1",
    "1020": "SELECT P.player_api_id, MAX(PA.overall_rating) FROM Player AS P INNER JOIN Player_Attributes AS PA ON P.player_api_id = PA.player_api_id ORDER BY PA.overall_rating DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1021": "SELECT player_name, MAX(height) FROM Player ORDER BY height DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1022": "SELECT preferred_foot FROM Player_Attributes WHERE potential = ( SELECT MIN(potential) FROM Player_Attributes )\t----- bird -----\teuropean_football_2",
    "1023": "SELECT COUNT(*) FROM Player_Attributes WHERE overall_rating >= 60 AND overall_rating <= 65 AND defensive_work_rate = 'low';\t----- bird -----\teuropean_football_2",
    "1024": "SELECT T1.player_api_id FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id ORDER BY T2.crossing DESC LIMIT 5\t----- bird -----\teuropean_football_2",
    "1025": "SELECT T1.name FROM League AS T1 INNER JOIN (SELECT league_id, SUM(home_team_goal + away_team_goal) AS total_goals FROM Match WHERE season = '2015/2016' GROUP BY league_id) AS T2 ON T1.id = T2.league_id ORDER BY T2.total_goals DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1026": "SELECT T2.team_long_name FROM Team AS T2 WHERE T2.team_api_id = (SELECT home_team_api_id FROM Match WHERE season = '2015/2016' AND home_team_goal < away_team_goal GROUP BY home_team_api_id ORDER BY COUNT(*) ASC LIMIT 1)\t----- bird -----\teuropean_football_2",
    "1027": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id ORDER BY T2.penalties DESC LIMIT 10\t----- bird -----\teuropean_football_2",
    "1028": "SELECT T1.away_team_api_id, COUNT(*) as total_wins FROM Match as T1 INNER JOIN League as T2 ON T1.league_id = T2.id WHERE T2.name = 'Scotland Premier League' AND T1.away_team_goal > T1.home_team_goal AND T1.season = '2009/2010' GROUP BY T1.away_team_api_id ORDER BY total_wins DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1029": "SELECT buildUpPlaySpeed FROM Team_Attributes ORDER BY buildUpPlaySpeed DESC LIMIT 4\t----- bird -----\teuropean_football_2",
    "1030": "SELECT L.name FROM League L JOIN Match M ON L.id = M.league_id WHERE M.season = '2015/2016' GROUP BY L.name HAVING SUM(M.home_team_goal = M.away_team_goal) = (SELECT MAX(SUM(M.home_team_goal = M.away_team_goal)) FROM Match M WHERE M.season = '2015/2016' GROUP BY M.league_id)\t----- bird -----\teuropean_football_2",
    "1031": "SELECT T1.player_name, (strftime('%Y', 'now') - strftime('%Y', T1.birthday)) AS age FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.sprint_speed >= 97\t----- bird -----\teuropean_football_2",
    "1032": "SELECT L.name, COUNT(M.id) AS total_matches FROM League L JOIN Match M ON L.id = M.league_id GROUP BY L.name ORDER BY total_matches DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1033": "SELECT AVG(height) FROM Player WHERE birthday >= '1990-01-01 00:00:00' AND birthday < '1996-01-01 00:00:00'\t----- bird -----\teuropean_football_2",
    "1034": "SELECT Player.player_api_id, MAX(Player_Attributes.overall_rating) FROM Player JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE substr(Player.birthday,1,4) = '2010'\t----- bird -----\teuropean_football_2",
    "1035": "SELECT team_fifa_api_id FROM Team_Attributes WHERE buildUpPlaySpeed BETWEEN 51 AND 59.\t----- bird -----\teuropean_football_2",
    "1036": "SELECT T1.team_long_name FROM Team as T1 INNER JOIN Team_Attributes as T2 ON T1.team_api_id = T2.team_api_id AND T1.team_fifa_api_id = T2.team_fifa_api_id WHERE T2.buildUpPlayPassing > ( SELECT AVG(buildUpPlayPassing) FROM Team_Attributes WHERE strftime('%Y', date) = '2012' ) AND strftime('%Y', T2.date) = '2012'\t----- bird -----\teuropean_football_2",
    "1037": "SELECT (SUM(CASE WHEN T2.preferred_foot = 'left' THEN 1 ELSE 0 END) * 1.0 / COUNT(T1.player_fifa_api_id)) * 100FROM Player AS T1INNER JOIN Player_Attributes AS T2ON T1.player_api_id = T2.player_api_id AND T1.player_fifa_api_id = T2.player_fifa_api_idWHERE T1.birthday BETWEEN '1987-01-01 00:00:00' AND '1992-12-31 00:00:00'\t----- bird -----\teuropean_football_2",
    "1038": "SELECT L.name, SUM(M.home_team_goal + M.away_team_goal) as total_goals FROM Match M JOIN League L ON M.league_id = L.id GROUP BY L.name ORDER BY total_goals ASC LIMIT 5\t----- bird -----\teuropean_football_2",
    "1039": "SELECT AVG(T2.long_shots) FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id AND T1.player_fifa_api_id = T2.player_fifa_api_id WHERE T1.player_name = 'Ahmed Samir Farag'\t----- bird -----\teuropean_football_2",
    "1040": "SELECT T1.player_name, AVG(T2.heading_accuracy) as avg_heading_accuracy FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.height > 180 GROUP BY T1.player_name ORDER BY avg_heading_accuracy DESC LIMIT 10\t----- bird -----\teuropean_football_2",
    "1041": "SELECT T1.team_long_name FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.buildUpPlayDribblingClass = 'Normal' AND T2.date >= '2014-01-01 00:00:00' AND T2.date <= '2014-12-31 23:59:59' AND T2.chanceCreationPassing < ( SELECT AVG(chanceCreationPassing) FROM Team_Attributes WHERE date >= '2014-01-01 00:00:00' AND date <= '2014-12-31 23:59:59' ) ORDER BY T2.chanceCreationPassing DESC\t----- bird -----\teuropean_football_2",
    "1042": "SELECT L.name FROM League L INNER JOIN Match M ON L.id = M.league_id GROUP BY L.name HAVING AVG(M.home_team_goal) > AVG(M.away_team_goal)\t----- bird -----\teuropean_football_2",
    "1043": "SELECT team_short_name FROM Team WHERE team_long_name = 'Queens Park Rangers'\t----- bird -----\teuropean_football_2",
    "1044": "SELECT player_name FROM Player WHERE substr(birthday,1,4) = '1970' AND substr(birthday,6,2) = '10';\t----- bird -----\teuropean_football_2",
    "1045": "SELECT T2.attacking_work_rate FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'Franco Zennaro'\t----- bird -----\teuropean_football_2",
    "1046": "SELECT T2.buildUpPlayPositioningClass FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.team_long_name = 'ADO Den Haag'\t----- bird -----\teuropean_football_2",
    "1047": "SELECT T2.heading_accuracy FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'Francois Affolter' However, please note that this query will return the heading_accuracy of the player 'Francois Affolter' regardless of the date, as the date column is not available in the provided tables.\t----- bird -----\teuropean_football_2",
    "1048": "SELECT T2.overall_rating FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id AND T1.player_fifa_api_id = T2.player_fifa_api_id WHERE T1.player_name = 'Gabriel Tamas' AND strftime('%Y', T2.date) = '2011'\t----- bird -----\teuropean_football_2",
    "1049": "SELECT COUNT(T1.id) FROM Match AS T1 INNER JOIN League AS T2 ON T1.league_id = T2.id WHERE T1.season = '2015/2016' AND T2.name = 'Scotland Premier League'\t----- bird -----\teuropean_football_2",
    "1050": "SELECT T2.preferred_foot FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id ORDER BY T1.birthday DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1051": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id AND T1.player_fifa_api_id = T2.player_fifa_api_id WHERE T2.potential = ( SELECT MAX(potential) FROM Player_Attributes )\t----- bird -----\teuropean_football_2",
    "1052": "SELECT COUNT(*) FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.weight < 130 AND T2.preferred_foot = 'left'\t----- bird -----\teuropean_football_2",
    "1053": "SELECT T1.team_short_name FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.chanceCreationPassingClass = 'Risky'\t----- bird -----\teuropean_football_2",
    "1054": "SELECT T2.defensive_work_rate FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'David Wilson'\t----- bird -----\teuropean_football_2",
    "1055": "SELECT T1.birthday FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.overall_rating = (SELECT MAX(overall_rating) FROM Player_Attributes)\t----- bird -----\teuropean_football_2",
    "1056": "SELECT League.name FROM League INNER JOIN Country ON League.country_id = Country.id WHERE Country.name = 'Netherlands'\t----- bird -----\teuropean_football_2",
    "1057": "SELECT AVG(Match.home_team_goal) FROM Match INNER JOIN Country ON Match.country_id = Country.id WHERE Country.name = 'Poland' AND Match.season = '2010/2011'\t----- bird -----\teuropean_football_2",
    "1058": "SELECT T1.player_name, AVG(T2.finishing) as avg_finishing FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.height IN ( SELECT MAX(height) FROM Player UNION SELECT MIN(height) FROM Player ) GROUP BY T1.player_name ORDER BY avg_finishing DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1059": "SELECT player_name FROM Player WHERE height > 180\t----- bird -----\teuropean_football_2",
    "1060": "SELECT COUNT(*) FROM Player WHERE strftime('%Y', birthday) > '1990'\t----- bird -----\teuropean_football_2",
    "1061": "SELECT COUNT(*) FROM Player WHERE player_name LIKE 'Adam%' AND weight > 170\t----- bird -----\teuropean_football_2",
    "1062": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.overall_rating > 80\t----- bird -----\teuropean_football_2",
    "1063": "SELECT \"Player_Attributes\".potential FROM \"Player\" INNER JOIN \"Player_Attributes\" ON \"Player\".player_api_id = \"Player_Attributes\".player_api_id WHERE \"Player\".player_name = 'Aaron Doran'\t----- bird -----\teuropean_football_2",
    "1064": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.preferred_foot = 'left'\t----- bird -----\teuropean_football_2",
    "1065": "SELECT T1.team_long_name FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.buildUpPlaySpeedClass = 'Fast'\t----- bird -----\teuropean_football_2",
    "1066": "SELECT T2.buildUpPlayPassingClass FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.team_short_name = 'CLB'\t----- bird -----\teuropean_football_2",
    "1067": "SELECT T1.team_short_name FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.buildUpPlayPassing > 70\t----- bird -----\teuropean_football_2",
    "1068": "SELECT AVG(T2.overall_rating) FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.height > 170\t----- bird -----\teuropean_football_2",
    "1069": "SELECT player_name, MIN(height) FROM Player ORDER BY height LIMIT 1\t----- bird -----\teuropean_football_2",
    "1070": "SELECT Country.name FROM League INNER JOIN Country ON League.country_id = Country.id WHERE League.name = 'Italy Serie A'\t----- bird -----\teuropean_football_2",
    "1071": "SELECT T1.team_short_name FROM \"Team\" AS T1 INNER JOIN \"Team_Attributes\" AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.buildUpPlaySpeed = 31 AND T2.buildUpPlayDribbling = 53 AND T2.buildUpPlayPassing = 32\t----- bird -----\teuropean_football_2",
    "1072": "SELECT AVG(PA.overall_rating) FROM Player AS P INNER JOIN Player_Attributes AS PA ON P.player_api_id = PA.player_api_id WHERE P.player_name = 'Aaron Doran'\t----- bird -----\teuropean_football_2",
    "1073": "SELECT COUNT(M.id) FROM Match M JOIN League L ON M.league_id = L.id WHERE L.name = 'Germany 1. Bundesliga' AND strftime('%Y-%m', M.date) BETWEEN '2008-08' AND '2008-10'\t----- bird -----\teuropean_football_2",
    "1074": "SELECT T2.team_short_name FROM \"Match\" AS T1 INNER JOIN \"Team\" AS T2 ON T1.home_team_api_id = T2.team_api_id WHERE T1.home_team_goal = 10\t----- bird -----\teuropean_football_2",
    "1075": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.potential = 61 AND T2.balance = ( SELECT MAX(balance) FROM Player_Attributes WHERE potential = 61 )\t----- bird -----\teuropean_football_2",
    "1076": "SELECT (SELECT AVG(ball_control) FROM Player_Attributes T1 INNER JOIN Player T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Abdou Diallo') - (SELECT AVG(ball_control) FROM Player_Attributes T1 INNER JOIN Player T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Aaron Appindangoye')\t----- bird -----\teuropean_football_2",
    "1077": "SELECT team_long_name FROM Team WHERE team_short_name = 'GEN'\t----- bird -----\teuropean_football_2",
    "1078": "SELECT player_name FROM Player WHERE player_name = 'Aaron Lennon' OR player_name = 'Abdelaziz Barrada' ORDER BY birthday ASC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1079": "SELECT player_name, MAX(height) FROM Player\t----- bird -----\teuropean_football_2",
    "1080": "SELECT COUNT(*) FROM Player_Attributes WHERE preferred_foot = 'left' AND attacking_work_rate = 'low';\t----- bird -----\teuropean_football_2",
    "1081": "SELECT Country.name FROM Country INNER JOIN League ON Country.id = League.country_id WHERE League.name = 'Belgium Jupiler League'\t----- bird -----\teuropean_football_2",
    "1082": "SELECT \"League\".name FROM \"League\" INNER JOIN \"Country\" ON \"Country\".id = \"League\".country_id WHERE \"Country\".name = 'Germany'\t----- bird -----\teuropean_football_2",
    "1083": "SELECT T1.player_name, MAX(T2.overall_rating) FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id GROUP BY T1.player_name\t----- bird -----\teuropean_football_2",
    "1084": "SELECT COUNT(*) FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE STRFTIME('%Y', T1.birthday) < '1986' AND T2.defensive_work_rate = 'high'\t----- bird -----\teuropean_football_2",
    "1085": "SELECT T1.player_name, MAX(T2.crossing) FROM \"Player\" AS T1 INNER JOIN \"Player_Attributes\" AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name IN ('Alexis', 'Ariel Borysiuk', 'Arouna Kone')\t----- bird -----\teuropean_football_2",
    "1086": "SELECT T2.heading_accuracy FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id AND T1.player_fifa_api_id = T2.player_fifa_api_id WHERE T1.player_name = 'Ariel Borysiuk'\t----- bird -----\teuropean_football_2",
    "1087": "SELECT COUNT(DISTINCT T1.player_api_id) FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.height > 180 AND T2.volleys > 70\t----- bird -----\teuropean_football_2",
    "1088": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.volleys > 70 AND T2.dribbling > 70\t----- bird -----\teuropean_football_2",
    "1089": "SELECT COUNT(T1.id) FROM Match AS T1 INNER JOIN Country AS T2 ON T1.country_id = T2.id WHERE T2.name = 'Belgium' AND T1.season = '2008/2009'\t----- bird -----\teuropean_football_2",
    "1090": "SELECT long_passing FROM Player_Attributes WHERE player_api_id = ( SELECT player_api_id FROM Player ORDER BY birthday ASC LIMIT 1 )\t----- bird -----\teuropean_football_2",
    "1091": "SELECT COUNT(Match.id) FROM Match JOIN League ON Match.league_id = League.id WHERE League.name = 'Belgium Jupiler League' AND strftime('%Y', Match.date) = '2009' AND strftime('%m', Match.date) = '04'\t----- bird -----\teuropean_football_2",
    "1092": "SELECT T1.name FROM League AS T1 INNER JOIN Match AS T2 ON T1.id = T2.league_id WHERE T2.season = '2008/2009' GROUP BY T1.name ORDER BY COUNT(T2.id) DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1093": "SELECT AVG(T2.overall_rating) FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE strftime('%Y', T1.birthday) < '1986'\t----- bird -----\teuropean_football_2",
    "1094": "SELECT ((T1.overall_rating - T2.overall_rating) / T2.overall_rating) * 100 AS percentage_difference FROM (SELECT overall_rating FROM Player_Attributes WHERE player_api_id = ( SELECT player_api_id FROM Player WHERE player_name = 'Ariel Borysiuk' )) AS T1, (SELECT overall_rating FROM Player_Attributes WHERE player_api_id = ( SELECT player_api_id FROM Player WHERE player_name = 'Paulin Puel' )) AS T2\t----- bird -----\teuropean_football_2",
    "1095": "SELECT AVG(T2.buildUpPlaySpeed) FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.team_long_name = 'Heart of Midlothian'\t----- bird -----\teuropean_football_2",
    "1096": "SELECT AVG(T1.overall_rating) FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Pietro Marino'\t----- bird -----\teuropean_football_2",
    "1097": "SELECT SUM(T2.crossing) FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'Aaron Lennox'\t----- bird -----\teuropean_football_2",
    "1098": "SELECT MAX(T2.chanceCreationPassing), T2.chanceCreationPassingClass FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id AND T1.team_fifa_api_id = T2.team_fifa_api_id WHERE T1.team_long_name = 'Ajax'\t----- bird -----\teuropean_football_2",
    "1099": "SELECT A.preferred_foot FROM Player AS B INNER JOIN Player_Attributes AS A ON B.player_api_id = A.player_api_id WHERE B.player_name = 'Abdou Diallo'\t----- bird -----\teuropean_football_2",
    "1100": "SELECT MAX(T1.overall_rating) FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Dorlan Pabon'\t----- bird -----\teuropean_football_2",
    "1101": "SELECT AVG(Match.away_team_goal) FROM Match INNER JOIN Team ON Match.away_team_api_id = Team.team_api_id INNER JOIN Country ON Match.country_id = Country.id WHERE Team.team_long_name = 'Parma' AND Country.name = 'Italy'\t----- bird -----\teuropean_football_2",
    "1102": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.overall_rating = 77 AND T2.date = '2016-06-23' ORDER BY T1.birthday ASC LIMIT 1Note: The SQLite SQL query assumes that there is a date column in the Player_Attributes table to filter attributes on a specific date. If there is no such column, the query cannot be revised to meet the question's requirements.\t----- bird -----\teuropean_football_2",
    "1103": "SELECT T2.overall_rating FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'Aaron Mooy' AND T2.date = '2016-02-04 00:00:00'\t----- bird -----\teuropean_football_2",
    "1104": "SELECT T2.potential FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'Francesco Parravicini' However, this query won't return the potential of Francesco Parravicini on 2010/8/30 because the schema lacks a column for the date when the potential was measured.\t----- bird -----\teuropean_football_2",
    "1105": "SELECT T2.attacking_work_rate FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'Francesco Migliore'\t----- bird -----\teuropean_football_2",
    "1106": "SELECT Player_Attributes.defensive_work_rate FROM Player INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id AND Player.player_fifa_api_id = Player_Attributes.player_fifa_api_id WHERE Player.player_name = 'Kevin Berigaud' AND Player.birthday = '2013-02-22 00:00:00'\t----- bird -----\teuropean_football_2",
    "1107": "SELECT P.birthday, MAX(PA.crossing) FROM Player P INNER JOIN Player_Attributes PA ON P.player_api_id = PA.player_api_id AND P.player_fifa_api_id = PA.player_fifa_api_id WHERE P.player_name = 'Kevin Constant'\t----- bird -----\teuropean_football_2",
    "1108": "SELECT TA.buildUpPlaySpeedClass FROM Team T INNER JOIN Team_Attributes TA ON T.team_api_id = TA.team_api_id WHERE T.team_long_name = 'Willem II' AND TA.date = '2011-02-22 00:00:00'\t----- bird -----\teuropean_football_2",
    "1109": "SELECT T2.buildUpPlayDribblingClass FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id AND T1.team_fifa_api_id = T2.team_fifa_api_id WHERE T1.team_short_name = 'LEI' AND T2.date = '2015-09-10 00:00:00'\t----- bird -----\teuropean_football_2",
    "1110": "SELECT T2.buildUpPlayPassingClass FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.team_long_name = 'FC Lorient' AND T2.date = '2010-02-22'\t----- bird -----\teuropean_football_2",
    "1111": "SELECT T2.chanceCreationPassingClass FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.team_long_name = 'PEC Zwolle' AND T2.date = '2013-09-20 00:00:00'\t----- bird -----\teuropean_football_2",
    "1112": "SELECT T2.chanceCreationCrossingClass FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.team_long_name = 'Hull City' AND T2.date = '2010-02-22 00:00:00'\t----- bird -----\teuropean_football_2",
    "1113": "SELECT T2.defenceAggressionClass FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.team_long_name = 'Hannover 96' AND T2.date = '2015-09-10 00:00:00'\t----- bird -----\teuropean_football_2",
    "1114": "SELECT AVG(Player_Attributes.overall_rating) FROM Player INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE Player.player_name = 'Marko Arnautovic' This query will give the average overall rating for Marko Arnautovic, but it will not be able to filter the rating by date as the date column is not provided in the Player_Attributes table.\t----- bird -----\teuropean_football_2",
    "1115": "SELECT (P1.overall_rating - P2.overall_rating) * 100.0 / P1.overall_rating  FROM Player_Attributes AS P1 INNER JOIN Player_Attributes AS P2 ON P1.player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Landon Donovan') AND P2.player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Jordan Bowery')\t----- bird -----\teuropean_football_2",
    "1116": "SELECT player_name FROM Player ORDER BY height DESC LIMIT 5\t----- bird -----\teuropean_football_2",
    "1117": "SELECT player_api_id FROM Player ORDER BY weight DESC LIMIT 10\t----- bird -----\teuropean_football_2",
    "1118": "SELECT player_name FROM Player WHERE strftime('%Y', 'now') - strftime('%Y', birthday) >= 35\t----- bird -----\teuropean_football_2",
    "1119": "SELECT SUM(M.home_team_goal) FROM Player P INNER JOIN Match M ON P.player_api_id IN (M.home_player_1, M.home_player_2, M.home_player_3, M.home_player_4, M.home_player_5, M.home_player_6, M.home_player_7, M.home_player_8, M.home_player_9, M.home_player_10, M.home_player_11) WHERE P.player_name = 'Aaron Lennon'\t----- bird -----\teuropean_football_2",
    "1120": "SELECT SUM(T1.away_team_goal) FROM \"Match\" AS T1 INNER JOIN \"Player\" AS T2 ON T2.player_api_id IN (T1.away_player_1, T1.away_player_2, T1.away_player_3, T1.away_player_4, T1.away_player_5, T1.away_player_6, T1.away_player_7, T1.away_player_8, T1.away_player_9, T1.away_player_10, T1.away_player_11) WHERE T2.player_name IN ('Daan Smith', 'Filipe Ferreira')\t----- bird -----\teuropean_football_2",
    "1121": "SELECT SUM(T1.home_team_goal) FROM Match AS T1 INNER JOIN Player AS T2 ON T1.home_player_1 = T2.player_api_id OR T1.home_player_2 = T2.player_api_id OR T1.home_player_3 = T2.player_api_id OR T1.home_player_4 = T2.player_api_id OR T1.home_player_5 = T2.player_api_id OR T1.home_player_6 = T2.player_api_id OR T1.home_player_7 = T2.player_api_id OR T1.home_player_8 = T2.player_api_id OR T1.home_player_9 = T2.player_api_id OR T1.home_player_10 = T2.player_api_id OR T1.home_player_11 = T2.player_api_id WHERE ((strftime('%Y', 'now') - strftime('%Y', T2.birthday)) - (strftime('%m-%d', 'now') < strftime('%m-%d', T2.birthday))) <= 30\t----- bird -----\teuropean_football_2",
    "1122": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id ORDER BY T2.overall_rating DESC LIMIT 10\t----- bird -----\teuropean_football_2",
    "1123": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.potential = ( SELECT MAX(potential) FROM Player_Attributes )\t----- bird -----\teuropean_football_2",
    "1124": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.attacking_work_rate = 'high'\t----- bird -----\teuropean_football_2",
    "1125": "SELECT Player.player_name FROM Player JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE Player_Attributes.finishing = 1 ORDER BY Player.birthday ASC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1126": "SELECT * FROM table\t----- bird -----\teuropean_football_2",
    "1127": "SELECT P.player_name, C.name as country FROM Player AS P JOIN Player_Attributes AS PA ON P.player_api_id = PA.player_api_id JOIN Match AS M ON P.player_api_id = M.home_player_1 JOIN Country AS C ON M.country_id = C.id WHERE PA.vision > 89\t----- bird -----\teuropean_football_2",
    "1128": "SELECT MAX(Avg_weight), Country FROM (SELECT AVG(Player.weight) as Avg_weight, Country.name as Country FROM Player JOIN Match ON Player.player_api_id IN (Match.home_player_1, Match.home_player_2, Match.home_player_3, Match.home_player_4, Match.home_player_5, Match.home_player_6, Match.home_player_7, Match.home_player_8, Match.home_player_9, Match.home_player_10, Match.home_player_11, Match.away_player_1, Match.away_player_2, Match.away_player_3, Match.away_player_4, Match.away_player_5, Match.away_player_6, Match.away_player_7, Match.away_player_8, Match.away_player_9, Match.away_player_10, Match.away_player_11) JOIN Team ON (Match.home_team_api_id=Team.team_api_id OR Match.away_team_api_id=Team.team_api_id) JOIN League ON Team.id=League.id JOIN Country ON League.country_id=Country.id GROUP BY Country.name)\t----- bird -----\teuropean_football_2",
    "1129": "SELECT T1.team_long_name FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.buildUpPlaySpeedClass = 'Slow'\t----- bird -----\teuropean_football_2",
    "1130": "SELECT T1.team_short_name FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.chanceCreationPassingClass = 'Safe'\t----- bird -----\teuropean_football_2",
    "1131": "SELECT AVG(height) FROM Player JOIN Country ON Player.id = Country.id WHERE Country.name = 'Italy'\t----- bird -----\teuropean_football_2",
    "1132": "SELECT player_name FROM Player WHERE height > 180 ORDER BY player_name ASC LIMIT 3\t----- bird -----\teuropean_football_2",
    "1133": "SELECT COUNT(*) FROM Player WHERE player_name LIKE 'Aaron%' AND birthday > '1990-12-31 23:59:59'\t----- bird -----\teuropean_football_2",
    "1134": "SELECT (SELECT jumping FROM Player_Attributes WHERE id = 6) -             (SELECT jumping FROM Player_Attributes WHERE id = 23) as difference FROM Player_Attributes LIMIT 1\t----- bird -----\teuropean_football_2",
    "1135": "SELECT T1.player_api_id FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.preferred_foot = 'right' ORDER BY T2.potential ASC LIMIT 3\t----- bird -----\teuropean_football_2",
    "1136": "SELECT COUNT(*) FROM Player_Attributes WHERE preferred_foot = 'left' AND crossing = (SELECT MAX(crossing) FROM Player_Attributes)\t----- bird -----\teuropean_football_2",
    "1137": "SELECT CAST(COUNT(*) FILTER (WHERE stamina > 80 AND strength > 80) AS FLOAT) / CAST(COUNT(*) AS FLOAT) * 100 AS percentage FROM Player_Attributes\t----- bird -----\teuropean_football_2",
    "1138": "SELECT Country.name FROM Country INNER JOIN League ON Country.id = League.country_id WHERE League.name = 'Poland Ekstraklasa'\t----- bird -----\teuropean_football_2",
    "1139": "SELECT T1.home_team_goal, T1.away_team_goal FROM Match AS T1 INNER JOIN League AS T2 ON T1.league_id = T2.id WHERE T1.date LIKE '2008-09-24%' AND T2.name = 'Belgian Jupiler League'\t----- bird -----\teuropean_football_2",
    "1140": "SELECT T2.sprint_speed, T2.agility, T2.acceleration FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'Alexis Blin'\t----- bird -----\teuropean_football_2",
    "1141": "SELECT T2.buildUpPlaySpeedClass FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.team_long_name = 'KSV Cercle Brugge'\t----- bird -----\teuropean_football_2",
    "1142": "SELECT COUNT(T1.id) FROM Match AS T1 INNER JOIN League AS T2 ON T1.league_id = T2.id WHERE T1.season = '2015/2016' AND T2.name = 'Italian Serie A'\t----- bird -----\teuropean_football_2",
    "1143": "SELECT MAX(M.home_team_goal) FROM Match M INNER JOIN League L ON M.league_id = L.id WHERE L.name = 'Netherlands Eredivisie'\t----- bird -----\teuropean_football_2",
    "1144": "SELECT T2.finishing, T2.curve FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.weight = ( SELECT MAX(weight) FROM Player ) Q: Who is the oldest player and what is his height?Hint: oldest player refers to MIN(birthday)Schema_links: ['Player.player_name', 'Player.height', 'Player.birthday', '1']A: Let's think step by step. the given question can be solved by knowing the answer to the following sub-questions = [who is the oldest player.]The sqlite SQL query for the sub-question \"who is the oldest player\" is SELECT MIN(birthday) FROM PlayerThe above query will return the birthday of the oldest player.Now, we have to find the player_name and height of the oldest player.So, the final sqlite SQL query answer to the question the given question is =SQL: SELECT player_name, height FROM Player WHERE birthday = ( SELECT MIN(birthday) FROM Player )Q: Who is the player with the highest stamina and what is his overall rating?Hint: highest stamina refers to MAX(stamina)Schema_links: ['Player_Attributes.stamina', 'Player_Attributes.overall_rating', 'Player.player_name', 'Player_Attributes.player_api_id', 'Player.player_api_id = Player_Attributes.player_api_id', '1']A: Let's think step by step. the given question can be solved by knowing the answer to the following sub-questions = [Who is the player with the highest stamina.]The sqlite SQL query for the sub-question \"Who is the player with the highest stamina\" is SELECT MAX(stamina) FROM Player_AttributesThe above query will return the stamina of the player who has the highest stamina.Now, we have to find the player_name and overall_rating of the player who has the highest stamina.To do so, we have to JOIN Player and Player_Attributes table on player_api_id.So, the final sqlite SQL query answer to the question the given question is =SQL: SELECT T1.player_name, T2.overall_rating FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.stamina = ( SELECT MAX(stamina) FROM Player_Attributes )\t----- bird -----\teuropean_football_2",
    "1145": "SELECT L.name, COUNT(M.id) AS num_games FROM Match M INNER JOIN League L ON M.league_id = L.id WHERE M.season = '2015/2016' GROUP BY L.name ORDER BY num_games DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1146": "SELECT T2.team_long_name FROM Match AS T1 INNER JOIN Team AS T2 ON T1.away_team_api_id = T2.team_api_id ORDER BY T1.away_team_goal DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1147": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id ORDER BY T2.overall_rating DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1148": "SELECT (SELECT COUNT(*) FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.height < 180 AND T2.overall_rating > 70) * 100.0 / COUNT(*) FROM Player\t----- bird -----\teuropean_football_2",
    "1149": "SELECT     (SELECT COUNT(ID) FROM Patient WHERE SEX = 'M' AND Admission = '+') AS InPatient,    (SELECT COUNT(ID) FROM Patient WHERE SEX = 'M' AND Admission = '-') AS OutPatient,    (SELECT CAST(COUNT(ID) AS float) / (SELECT COUNT(ID) FROM Patient WHERE SEX = 'M') * 100 AS DeviationFROM PatientWHERE SEX = 'M'\t----- bird -----\tthrombosis_prediction",
    "1150": "SELECT     (CAST(COUNT(ID) AS FLOAT) WHERE strftime('%Y', Birthday) > '1930' AND SEX = 'F') / (CAST(COUNT(ID) AS FLOAT) WHERE SEX = 'F') * 100 AS PercentageFROM     Patient\t----- bird -----\tthrombosis_prediction",
    "1151": "SELECT (COUNT(ID) * 100.0 / (SELECT COUNT(ID) FROM Patient WHERE Birthday BETWEEN '1930-01-01' AND '1940-12-31')) as Percentage FROM Patient WHERE (Birthday BETWEEN '1930-01-01' AND '1940-12-31') AND (Admission = '+')\t----- bird -----\tthrombosis_prediction",
    "1152": "SELECT CAST(SUM(CASE WHEN Admission = '+' THEN 1 ELSE 0 END) AS FLOAT) / CAST(SUM(CASE WHEN Admission = '-' THEN 1 ELSE 0 END) AS FLOAT) AS ratio FROM Patient WHERE Diagnosis = 'SLE'\t----- bird -----\tthrombosis_prediction",
    "1153": "SELECT T1.Diagnosis, T2.Date FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.ID = '30609'\t----- bird -----\tthrombosis_prediction",
    "1154": "SELECT T1.SEX, T1.Birthday, T2.\"Examination Date\", T2.Symptoms FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.ID = 163109\t----- bird -----\tthrombosis_prediction",
    "1155": "SELECT T1.ID, T1.SEX, T1.Birthday FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.LDH > 500\t----- bird -----\tthrombosis_prediction",
    "1156": "SELECT T1.ID, (strftime('%Y','now') - strftime('%Y', T1.Birthday)) AS age FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.RVVT = '+'\t----- bird -----\tthrombosis_prediction",
    "1157": "SELECT T1.ID, T1.SEX, T1.Diagnosis FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.Thrombosis = 2\t----- bird -----\tthrombosis_prediction",
    "1158": "SELECT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE strftime('%Y', T1.Birthday) = '1937' AND T2.`T-CHO` >= 250\t----- bird -----\tthrombosis_prediction",
    "1159": "SELECT P.ID, P.SEX, P.Diagnosis FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE L.ALB < 3.5\t----- bird -----\tthrombosis_prediction",
    "1160": "SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM Patient WHERE SEX = 'F')) AS percentage FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'F' AND (T2.TP < 6.0 OR T2.TP > 8.5)\t----- bird -----\tthrombosis_prediction",
    "1161": "SELECT AVG(T2.\"aCL IgG\") FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.Admission = '+' AND (strftime('%Y', 'now') - strftime('%Y', T1.Birthday)) >= 50\t----- bird -----\tthrombosis_prediction",
    "1162": "SELECT COUNT(*) FROM Patient WHERE SEX = 'F' AND strftime('%Y', Description) = '1997' AND Admission = '-'\t----- bird -----\tthrombosis_prediction",
    "1163": "SELECT MIN(strftime('%Y', \"First Date\") - strftime('%Y', \"Birthday\")) as Age FROM Patient WHERE \"First Date\" IS NOT NULL AND \"Birthday\" IS NOT NULL\t----- bird -----\tthrombosis_prediction",
    "1164": "SELECT COUNT(DISTINCT T1.ID) FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.Thrombosis = 1 AND T2.SEX = 'F' AND T1.'Examination Date' LIKE '1997%'\t----- bird -----\tthrombosis_prediction",
    "1165": "SELECT MAX(strftime('%Y', T1.Birthday)) - MIN(strftime('%Y', T1.Birthday)) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.TG >= 200\t----- bird -----\tthrombosis_prediction",
    "1166": "SELECT T2.Symptoms, T2.Diagnosis FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.Birthday = ( SELECT MAX(Birthday) FROM Patient )\t----- bird -----\tthrombosis_prediction",
    "1167": "SELECT AVG(Count) FROM (SELECT COUNT(DISTINCT T1.ID) AS Count FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T2.SEX = 'M' AND T1.Date BETWEEN '1998-01-01' AND '1998-12-31' GROUP BY strftime('%m', T1.Date))\t----- bird -----\tthrombosis_prediction",
    "1168": "SELECT L.Date, (strftime('%Y', P.'First Date') - strftime('%Y', P.Birthday)) AS Age FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE P.Birthday = ( SELECT MAX(Birthday) FROM Patient WHERE Diagnosis = 'SJS' )\t----- bird -----\tthrombosis_prediction",
    "1169": "SELECT (SELECT COUNT(Patient.ID) FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.UA > '8.0' AND Patient.SEX = 'M') / (SELECT COUNT(Patient.ID) FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.UA > '6.5' AND Patient.SEX = 'F') AS 'ratio'\t----- bird -----\tthrombosis_prediction",
    "1170": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE CAST(SUBSTR(T2.`Examination Date`, 1, 4) AS INTEGER) - CAST(SUBSTR(T1.`First Date`, 1, 4) AS INTEGER) >= 1\t----- bird -----\tthrombosis_prediction",
    "1171": "SELECT COUNT(*) FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE CAST(strftime('%Y', `Examination Date`) AS INT) - CAST(strftime('%Y', Birthday) AS INT) < 18 AND `Examination Date` BETWEEN '1990-01-01' AND '1993-12-31'\t----- bird -----\tthrombosis_prediction",
    "1172": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND T2.'T-BIL' > 2.0\t----- bird -----\tthrombosis_prediction",
    "1173": "SELECT T2.Diagnosis, COUNT(*) as count FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.Date BETWEEN '1985-01-01' AND '1995-12-31' GROUP BY T2.Diagnosis ORDER BY count DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1174": "SELECT AVG(1991 - CAST(SUBSTR(T1.Birthday, 1, 4) AS INTEGER)) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.Date BETWEEN '1991-10-01' AND '1991-10-30'\t----- bird -----\tthrombosis_prediction",
    "1175": "SELECT (julianday(T1.\"Examination Date\") - julianday(T2.Birthday)) / 365 AS Age, T2.Diagnosis FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID INNER JOIN Laboratory AS T3 ON T1.ID = T3.ID WHERE T3.HGB = (SELECT MAX(HGB) FROM Laboratory)\t----- bird -----\tthrombosis_prediction",
    "1176": "SELECT ANA FROM Examination WHERE ID = 3605340 AND `Examination Date` = '1996-12-02'\t----- bird -----\tthrombosis_prediction",
    "1177": "SELECT CASE WHEN T-CHO < 250 THEN 'Yes' ELSE 'No' END AS 'Normal_Level' FROM Laboratory WHERE ID = 2927464 AND Date = '1995-9-4'\t----- bird -----\tthrombosis_prediction",
    "1178": "SELECT SEX FROM Patient WHERE Diagnosis = 'AORTITIS' ORDER BY Description ASC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1179": "SELECT T2.\"aCL IgM\" FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.Diagnosis = 'SLE' AND T1.Description = '1994-02-19' AND T2.\"Examination Date\" = '1993-11-12'\t----- bird -----\tthrombosis_prediction",
    "1180": "SELECT T2.SEX FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.GPT = 9 AND T1.Date = '1992-06-12'\t----- bird -----\tthrombosis_prediction",
    "1181": "SELECT 1991 - CAST(SUBSTR(T2.Birthday, 1, 4) AS INTEGER) AS age FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.UA = 8.4 AND T1.Date = '1991-10-21'\t----- bird -----\tthrombosis_prediction",
    "1182": "SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.\"First Date\" = '1991-06-13' AND T1.Diagnosis = 'SJS' AND T2.Date LIKE '1995%'\t----- bird -----\tthrombosis_prediction",
    "1183": "SELECT Diagnosis FROM Patient WHERE Diagnosis = 'SLE' AND Description = '1997-01-27'\t----- bird -----\tthrombosis_prediction",
    "1184": "SELECT \"Examination\".\"Symptoms\" FROM \"Patient\" INNER JOIN \"Examination\" ON \"Patient\".\"ID\" = \"Examination\".\"ID\" WHERE \"Patient\".\"Birthday\" = '1959-03-01' AND \"Examination\".\"Examination Date\" = '1993-09-27'\t----- bird -----\tthrombosis_prediction",
    "1185": "SELECT (SELECT T2.`T-CHO` FROM Laboratory AS T2 WHERE T2.Date LIKE '1981-11%' AND T2.ID = T1.ID) - (SELECT T3.`T-CHO` FROM Laboratory AS T3 WHERE T3.Date LIKE '1981-12%' AND T3.ID = T1.ID) AS 'Decrease Rate' FROM Patient AS T1 WHERE T1.Birthday = '1959-02-18'\t----- bird -----\tthrombosis_prediction",
    "1186": "SELECT P.ID FROM Patient AS P INNER JOIN Examination AS E ON P.ID = E.ID WHERE E.Diagnosis LIKE '%Behcet%' AND E.\"Examination Date\" >= '1997-01-01' AND E.\"Examination Date\" <= '1997-12-31'\t----- bird -----\tthrombosis_prediction",
    "1187": "SELECT ID FROM Laboratory WHERE (Date BETWEEN '1987-07-06' AND '1996-01-31') AND GPT > 30 AND ALB < 4\t----- bird -----\tthrombosis_prediction",
    "1188": "SELECT ID FROM Patient WHERE SEX = 'F' AND strftime('%Y', Birthday) = '1964' AND Admission = '+'\t----- bird -----\tthrombosis_prediction",
    "1189": "SELECT COUNT(ID) FROM Examination WHERE Thrombosis = 2 AND `ANA Pattern` = 'S' AND `aCL IgM` > 1.2 * ( SELECT AVG(`aCL IgM`) FROM Examination )\t----- bird -----\tthrombosis_prediction",
    "1190": "SELECT (CAST(SUM(CASE WHEN UA <= 6.5 THEN 1 ELSE 0 END) AS REAL) / CAST(COUNT(*) AS REAL)) * 100 AS percentageFROM Laboratory WHERE U-PRO > 0 AND U-PRO < 30\t----- bird -----\tthrombosis_prediction",
    "1191": "SELECT CAST(SUM(CASE WHEN Diagnosis = 'BEHCET' THEN 1 ELSE 0 END) AS FLOAT) / CAST(COUNT(*) AS FLOAT) * 100 as percentage FROM Patient WHERE SEX = 'M' AND strftime('%Y', `First Date`) = '1981'\t----- bird -----\tthrombosis_prediction",
    "1192": "SELECT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Admission = '-' AND T2.Date LIKE '1991-10%' AND T2.'T-BIL' < 2.0\t----- bird -----\tthrombosis_prediction",
    "1193": "SELECT COUNT(*) FROM Examination AS E INNER JOIN Patient AS P ON E.ID = P.ID WHERE E.\"ANA Pattern\" != 'P' AND P.SEX = 'F' AND P.Birthday BETWEEN '1980-01-01' AND '1989-12-31'\t----- bird -----\tthrombosis_prediction",
    "1194": "SELECT SEX FROM Patient WHERE ID IN (SELECT ID FROM Examination WHERE Diagnosis = 'PSS' INTERSECT SELECT ID FROM Laboratory WHERE CRP > 2 AND CRE = 1 AND LDH = 123)\t----- bird -----\tthrombosis_prediction",
    "1195": "SELECT AVG(T1.ALB) FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T2.SEX = 'F' AND T1.PLT > 400 AND T2.Diagnosis = 'SLE'\t----- bird -----\tthrombosis_prediction",
    "1196": "SELECT Symptoms, COUNT(*) as Frequency FROM Examination WHERE Diagnosis = 'SLE' GROUP BY Symptoms ORDER BY Frequency DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1197": "SELECT Description, Diagnosis FROM Patient WHERE ID = 48473\t----- bird -----\tthrombosis_prediction",
    "1198": "SELECT COUNT(Patient.ID) FROM Patient INNER JOIN Examination ON Patient.ID = Examination.ID WHERE Patient.SEX = 'F' AND Examination.Diagnosis = 'APS'\t----- bird -----\tthrombosis_prediction",
    "1199": "SELECT COUNT(DISTINCT ID) FROM Laboratory WHERE strftime('%Y', Date) = '1997' AND (TP < 6 OR TP > 8.5)\t----- bird -----\tthrombosis_prediction",
    "1200": "SELECT (COUNT(DISTINCT CASE WHEN T1.PLT < 100 THEN T1.ID ELSE NULL END) * 1.0 / COUNT(DISTINCT CASE WHEN T2.Diagnosis LIKE '%SLE%' THEN T2.ID ELSE NULL END)) * 100 FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID\t----- bird -----\tthrombosis_prediction",
    "1201": "SELECT (COUNT(CASE WHEN SEX = 'F' THEN 1 END) * 100.0 / COUNT(*)) AS percentage FROM Patient WHERE strftime('%Y', Birthday) = '1980' AND Diagnosis = 'RA'\t----- bird -----\tthrombosis_prediction",
    "1202": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND T2.Date BETWEEN '1995' AND '1997' AND T1.Diagnosis = 'BEHCET' AND T1.Admission = '-'\t----- bird -----\tthrombosis_prediction",
    "1203": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'F' AND T2.WBC < 3.5\t----- bird -----\tthrombosis_prediction",
    "1204": "SELECT DATEDIFF(Description, `First Date`) FROM Patient WHERE ID = 821298\t----- bird -----\tthrombosis_prediction",
    "1205": "SELECT CASE WHEN Patient.SEX = 'M' AND Laboratory.UA > 8.0 THEN 'Yes' WHEN Patient.SEX = 'F' AND Laboratory.UA > 6.5 THEN 'Yes' ELSE 'No' END AS 'Is_UA_Normal' FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.ID = 57266\t----- bird -----\tthrombosis_prediction",
    "1206": "SELECT Date FROM Laboratory WHERE GOT >= 60 AND ID = 48473\t----- bird -----\tthrombosis_prediction",
    "1207": "SELECT P.ID, P.SEX, P.Birthday FROM Patient P JOIN Laboratory L ON P.ID = L.ID WHERE L.GOT < 60 AND strftime('%Y', L.Date) = '1994'\t----- bird -----\tthrombosis_prediction",
    "1208": "SELECT DISTINCT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND T2.GPT >= 60\t----- bird -----\tthrombosis_prediction",
    "1209": "SELECT P.Diagnosis FROM Patient P INNER JOIN Laboratory L ON P.ID = L.ID WHERE L.GPT > 60 ORDER BY P.Birthday ASC\t----- bird -----\tthrombosis_prediction",
    "1210": "SELECT AVG(LDH) FROM Laboratory WHERE LDH < 500\t----- bird -----\tthrombosis_prediction",
    "1211": "SELECT Patient.ID, (strftime('%Y', 'now') - strftime('%Y', Patient.Birthday)) as age FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.LDH BETWEEN 600 AND 800\t----- bird -----\tthrombosis_prediction",
    "1212": "SELECT T1.Admission FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.ALP < 300\t----- bird -----\tthrombosis_prediction",
    "1213": "SELECT T1.ID, T2.ALP < 300 FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Birthday = '1982-04-01'\t----- bird -----\tthrombosis_prediction",
    "1214": "SELECT Patient.ID, Patient.SEX, Patient.Birthday FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.TP < 6.0\t----- bird -----\tthrombosis_prediction",
    "1215": "SELECT T1.ID, T2.TP - 8.5 AS deviation FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'F' AND T2.TP > 8.5\t----- bird -----\tthrombosis_prediction",
    "1216": "SELECT T1.* FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND (T2.ALB <= 3.5 OR T2.ALB >= 5.5) ORDER BY T1.Birthday DESC\t----- bird -----\tthrombosis_prediction",
    "1217": "SELECT T1.ID, CASE WHEN T2.ALB BETWEEN 3.5 AND 5.5 THEN 'Yes' ELSE 'No' END AS 'Albumin Normal Range?' FROM Patient as T1 INNER JOIN Laboratory as T2 ON T1.ID = T2.ID WHERE STRFTIME('%Y', T1.Birthday) = '1982'\t----- bird -----\tthrombosis_prediction",
    "1218": "SELECT (CAST(COUNT(*) AS REAL) / (SELECT COUNT(*) FROM Patient WHERE SEX = 'F')) * 100 AS percentage FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.SEX = 'F' AND Laboratory.UA > 6.5\t----- bird -----\tthrombosis_prediction",
    "1219": "SELECT AVG(UA) FROM Laboratory WHERE UA < 8.0\t----- bird -----\tthrombosis_prediction",
    "1220": "SELECT T1.ID, T1.SEX, T1.Birthday FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.UN = 29\t----- bird -----\tthrombosis_prediction",
    "1221": "SELECT T1.ID, T1.SEX, T1.Birthday FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Diagnosis = 'RA' AND T2.UN < 30\t----- bird -----\tthrombosis_prediction",
    "1222": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND T2.CRE >= 1.5\t----- bird -----\tthrombosis_prediction",
    "1223": "SELECT (SELECT COUNT(*) FROM Patient AS P1 INNER JOIN Laboratory AS L1 ON P1.ID = L1.ID WHERE P1.SEX = 'M' AND L1.CRE >= 1.5) > (SELECT COUNT(*) FROM Patient AS P2 INNER JOIN Laboratory AS L2 ON P2.ID = L2.ID WHERE P2.SEX = 'F' AND L2.CRE >= 1.5) AS Result\t----- bird -----\tthrombosis_prediction",
    "1224": "SELECT T1.ID, T1.SEX, T1.Birthday FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.T-BIL = ( SELECT MAX(T-BIL) FROM Laboratory )\t----- bird -----\tthrombosis_prediction",
    "1225": "SELECT T1.ID, T1.SEX FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.\"T-BIL\" >= 2.0 GROUP BY T1.SEX\t----- bird -----\tthrombosis_prediction",
    "1226": "SELECT T1.ID, T1.Birthday, T2.T-CHO FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.T-CHO = ( SELECT MAX(T-CHO) FROM Laboratory ) ORDER BY T1.Birthday ASC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1227": "SELECT AVG(STRFTIME('%Y', 'now') - STRFTIME('%Y', Birthday)) FROM Patient WHERE SEX = 'M' AND ID IN (SELECT ID FROM Laboratory WHERE T-CHO >= 250)\t----- bird -----\tthrombosis_prediction",
    "1228": "SELECT T1.ID, T1.Diagnosis FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.TG > 300\t----- bird -----\tthrombosis_prediction",
    "1229": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.TG >= 200 AND (strftime('%Y', 'now') - strftime('%Y', T1.Birthday)) > 50\t----- bird -----\tthrombosis_prediction",
    "1230": "SELECT DISTINCT T1.ID FROM Patient as T1 INNER JOIN Laboratory as T2 ON T1.ID = T2.ID WHERE T1.Admission = '-' AND T2.CPK < 250\t----- bird -----\tthrombosis_prediction",
    "1231": "SELECT COUNT(DISTINCT P.ID) FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE P.SEX = 'M' AND STRFTIME('%Y', P.Birthday) BETWEEN '1936' AND '1956' AND L.CPK >= 250\t----- bird -----\tthrombosis_prediction",
    "1232": "SELECT T1.ID, T1.SEX, (strftime('%Y', 'now') - strftime('%Y', T1.Birthday)) as age FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.GLU >= 180 AND T2.T-CHO < 250\t----- bird -----\tthrombosis_prediction",
    "1233": "SELECT T1.ID, T1.GLU FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.GLU < 180 AND strftime('%Y', T2.Description) = '1991'\t----- bird -----\tthrombosis_prediction",
    "1234": "SELECT P.ID, P.SEX, P.Birthday FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE L.WBC <= 3.5 OR L.WBC >= 9.0 ORDER BY P.SEX, P.Birthday\t----- bird -----\tthrombosis_prediction",
    "1235": "SELECT P.Diagnosis, P.ID, (CAST(strftime('%Y', 'now') AS INTEGER) - CAST(strftime('%Y', P.Birthday) AS INTEGER)) as Age FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE L.RBC < 3.5\t----- bird -----\tthrombosis_prediction",
    "1236": "SELECT T2.Admission FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T2.SEX = 'F' AND (strftime('%Y', 'now') - strftime('%Y', T2.Birthday)) >= 50 AND (T1.RBC <= 3.5 OR T1.RBC >= 6.0)\t----- bird -----\tthrombosis_prediction",
    "1237": "SELECT T1.\"ID\", T1.\"SEX\" FROM \"Patient\" AS T1 INNER JOIN \"Laboratory\" AS T2 ON T1.\"ID\" = T2.\"ID\" WHERE T1.\"Admission\" = '-' AND T2.\"HGB\" < 10\t----- bird -----\tthrombosis_prediction",
    "1238": "SELECT ID, SEX FROM (SELECT Patient.ID AS ID, Patient.SEX AS SEX, Patient.Birthday AS Birthday FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.Diagnosis = 'SLE' AND Laboratory.HGB > 10 AND Laboratory.HGB < 17) ORDER BY Birthday ASC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1239": "SELECT P.ID, (strftime('%Y', 'now') - strftime('%Y', P.Birthday)) as AgeFROM Patient P JOIN Laboratory L ON P.ID = L.IDWHERE L.HCT >= 52GROUP BY P.IDHAVING COUNT(P.ID) >= 2\t----- bird -----\tthrombosis_prediction",
    "1240": "SELECT AVG(HCT) FROM Laboratory WHERE Date LIKE '1991%' AND HCT < 29\t----- bird -----\tthrombosis_prediction",
    "1241": "SELECT COUNT(*) as 'Lower Than Normal' FROM Laboratory WHERE PLT < 100 UNION SELECT COUNT(*) as 'Higher Than Normal' FROM Laboratory WHERE PLT > 400\t----- bird -----\tthrombosis_prediction",
    "1242": "SELECT T1.ID FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.Date LIKE '1984%' AND (STRFTIME('%Y', 'now') - STRFTIME('%Y', T2.Birthday)) < 50 AND T1.PLT BETWEEN 100 AND 400.\t----- bird -----\tthrombosis_prediction",
    "1243": "SELECT (CAST(SUM(CASE WHEN T1.SEX = 'F' AND T2.PT >= 14 THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN T2.PT >= 14 THEN 1 ELSE 0 END)) * 100 FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE (strftime('%Y', 'now') - strftime('%Y', T1.Birthday)) > 55\t----- bird -----\tthrombosis_prediction",
    "1244": "SELECT Patient.ID FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.PT < 14 AND strftime('%Y', Patient.'First Date') > '1992'\t----- bird -----\tthrombosis_prediction",
    "1245": "SELECT COUNT(*) FROM Laboratory WHERE Date > '1997-01-01' AND APTT < 45\t----- bird -----\tthrombosis_prediction",
    "1246": "SELECT COUNT(DISTINCT T1.ID) FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.APTT > 45 AND T1.Thrombosis = 3\t----- bird -----\tthrombosis_prediction",
    "1247": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND (T2.WBC BETWEEN 3.5 AND 9.0) AND (T2.FG <= 150 OR T2.FG >= 450)\t----- bird -----\tthrombosis_prediction",
    "1248": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Birthday > '1980-01-01' AND (T2.FG < 150 OR T2.FG > 450)\t----- bird -----\tthrombosis_prediction",
    "1249": "SELECT T1.Diagnosis FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.\"U-PRO\" > '30'\t----- bird -----\tthrombosis_prediction",
    "1250": "SELECT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.'U-PRO' > 0 AND T2.'U-PRO' < 30 AND T1.Diagnosis = 'SLE'\t----- bird -----\tthrombosis_prediction",
    "1251": "SELECT COUNT(DISTINCT T1.ID) FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.IGG < 900 AND T1.Symptoms LIKE '%abortion%'\t----- bird -----\tthrombosis_prediction",
    "1252": "SELECT COUNT(DISTINCT T1.ID) FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.IGG BETWEEN 900 AND 2000 AND T1.Symptoms IS NOT NULL\t----- bird -----\tthrombosis_prediction",
    "1253": "SELECT Diagnosis FROM Patient WHERE ID = ( SELECT ID FROM Laboratory WHERE IGA BETWEEN 80 AND 500 ORDER BY IGA DESC LIMIT 1 )\t----- bird -----\tthrombosis_prediction",
    "1254": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.IGA BETWEEN 80 AND 500 AND T1.'First Date' >= '1990-01-01'\t----- bird -----\tthrombosis_prediction",
    "1255": "SELECT P.Diagnosis, COUNT(*) as count FROM Laboratory L JOIN Patient P ON L.ID = P.ID WHERE L.IGM NOT BETWEEN 40 AND 400 GROUP BY P.Diagnosis ORDER BY count DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1256": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE (T2.CRP LIKE '+' OR T2.CRP LIKE '-' OR T2.CRP < 1.0) AND T1.Description IS NULL\t----- bird -----\tthrombosis_prediction",
    "1257": "SELECT COUNT(DISTINCT T1.ID) FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.CRP NOT IN('+-', '-') AND T1.CRP >= 1.0 AND (strftime('%Y', 'now') - strftime('%Y', T2.Birthday)) < 18\t----- bird -----\tthrombosis_prediction",
    "1258": "SELECT COUNT(DISTINCT T1.ID) FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.RA IN('-', '+-') AND T1.KCT = '+'\t----- bird -----\tthrombosis_prediction",
    "1259": "SELECT Diagnosis FROM Patient WHERE ID IN (SELECT ID FROM Laboratory WHERE RA IN('-', '+-') AND ID IN (SELECT ID FROM Patient WHERE Birthday > '1995-1-1'))\t----- bird -----\tthrombosis_prediction",
    "1260": "SELECT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.RF < 20 AND (strftime('%Y', 'now') - strftime('%Y', T1.Birthday)) > 60\t----- bird -----\tthrombosis_prediction",
    "1261": "SELECT COUNT(*) FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.RF < 20 AND T1.Thrombosis = 0\t----- bird -----\tthrombosis_prediction",
    "1262": "SELECT COUNT(DISTINCT T1.ID) FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.'ANA Pattern' = 'P' AND T2.C3 > 35\t----- bird -----\tthrombosis_prediction",
    "1263": "SELECT ID, MAX(`aCL IgA`) FROM Examination WHERE ID IN (SELECT ID FROM Laboratory WHERE HCT <= 29 OR HCT >= 52)\t----- bird -----\tthrombosis_prediction",
    "1264": "SELECT COUNT(DISTINCT T1.ID) FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Thrombosis = 1 AND T2.C4 > 10\t----- bird -----\tthrombosis_prediction",
    "1265": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE (T2.RNP = '-' OR T2.RNP = '+-') AND T1.Admission = '+'\t----- bird -----\tthrombosis_prediction",
    "1266": "SELECT MAX(T1.Birthday) FROM Patient AS T1 JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.RNP NOT IN('-', '+-')\t----- bird -----\tthrombosis_prediction",
    "1267": "SELECT COUNT(T1.ID) FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.SM IN('-', '+-') AND T1.Thrombosis = '1'\t----- bird -----\tthrombosis_prediction",
    "1268": "SELECT ID FROM ( SELECT ID, Birthday FROM Patient WHERE ID IN ( SELECT ID FROM Laboratory WHERE SM NOT IN('-', '+-') ) ) ORDER BY Birthday DESC LIMIT 3\t----- bird -----\tthrombosis_prediction",
    "1269": "SELECT * FROM table\t----- bird -----\tthrombosis_prediction",
    "1270": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 JOIN Laboratory AS T2 ON T1.ID = T2.ID JOIN Examination AS T3 ON T1.ID = T3.ID WHERE T2.SC170 IN('-', '+-') AND T1.SEX = 'M' AND T3.Symptoms = 'vertigo'\t----- bird -----\tthrombosis_prediction",
    "1271": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.SSA IN('-', '+-') AND strftime('%Y', T1.`First Date`) < '1990'\t----- bird -----\tthrombosis_prediction",
    "1272": "SELECT P.ID FROM Patient P INNER JOIN Laboratory L ON P.ID = L.ID WHERE L.SSA NOT IN('-', '+-') AND P.`First Date` IS NOT NULL ORDER BY P.`First Date` ASC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1273": "SELECT COUNT(DISTINCT T1.ID) FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.SSB IN('-', '+-') AND T1.Diagnosis = 'SLE'\t----- bird -----\tthrombosis_prediction",
    "1274": "SELECT COUNT(DISTINCT T1.ID) FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.SSB IN('-', '+-') AND T1.Symptoms IS NOT NULL\t----- bird -----\tthrombosis_prediction",
    "1275": "SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.CENTROMEA IN('-', '+-') AND T2.SSB IN('-', '+-') AND T1.SEX = 'M'\t----- bird -----\tthrombosis_prediction",
    "1276": "SELECT T2.Diagnosis FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.DNA >= 8\t----- bird -----\tthrombosis_prediction",
    "1277": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE (T2.DNA < 8 OR T2.DNA-II < 8) AND T1.Description IS NULL\t----- bird -----\tthrombosis_prediction",
    "1278": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.\"DNA-II\" > 8 AND T1.Admission = '+'\t----- bird -----\tthrombosis_prediction",
    "1279": "SELECT (COUNT(DISTINCT T1.ID) * 1.0 / (SELECT COUNT(DISTINCT T3.ID) FROM Laboratory AS T3 WHERE T3.GOT >= 60)) * 100 AS Percentage FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.GOT >= 60 AND T2.Diagnosis = 'SLE'\t----- bird -----\tthrombosis_prediction",
    "1280": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND T2.GOT < 60\t----- bird -----\tthrombosis_prediction",
    "1281": "SELECT MAX(T2.Birthday) FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.GOT >= 60\t----- bird -----\tthrombosis_prediction",
    "1282": "SELECT T2.Birthday, T1.GPT FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.GPT < 60 ORDER BY T1.GPT DESC LIMIT 3\t----- bird -----\tthrombosis_prediction",
    "1283": "SELECT COUNT(*) FROM Laboratory AS L INNER JOIN Patient AS P ON L.ID = P.ID WHERE L.GOT < 60 AND P.SEX = 'M'\t----- bird -----\tthrombosis_prediction",
    "1284": "SELECT MIN(\"First Date\") FROM Patient WHERE ID = (SELECT ID FROM Laboratory WHERE LDH = (SELECT MAX(LDH) FROM Laboratory WHERE LDH < 500))\t----- bird -----\tthrombosis_prediction",
    "1285": "SELECT MAX(Date) FROM Laboratory WHERE LDH >= 500\t----- bird -----\tthrombosis_prediction",
    "1286": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.ALP >= 300 AND T1.Admission = '+'\t----- bird -----\tthrombosis_prediction",
    "1287": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Admission = '-' AND T2.ALP < 300\t----- bird -----\tthrombosis_prediction",
    "1288": "SELECT P.Diagnosis FROM Laboratory L JOIN Patient P ON L.ID = P.ID WHERE L.TP < 6.0\t----- bird -----\tthrombosis_prediction",
    "1289": "SELECT COUNT(*) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Diagnosis = 'SJS' AND T2.TP > 6.0 AND T2.TP < 8.5\t----- bird -----\tthrombosis_prediction",
    "1290": "SELECT E.\"Examination Date\" FROM Examination E INNER JOIN Laboratory L ON E.ID = L.ID WHERE L.ALB = (SELECT MAX(ALB) FROM Laboratory WHERE ALB > 3.5 AND ALB < 5.5)\t----- bird -----\tthrombosis_prediction",
    "1291": "SELECT COUNT(*) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND T2.ALB > 3.5 AND T2.ALB < 5.5 AND T2.TP >= 6.0 AND T2.TP <= 8.5\t----- bird -----\tthrombosis_prediction",
    "1292": "SELECT Examination.aCL IgG, Examination.aCL IgM, Examination.aCL IgA FROM Examination WHERE Examination.ID = ( SELECT Laboratory.ID FROM Laboratory INNER JOIN Patient ON Laboratory.ID = Patient.ID WHERE Patient.SEX = 'F' AND Laboratory.UA <= 8.0 AND Laboratory.UA > 6.5 ORDER BY Laboratory.UA DESC LIMIT 1 )\t----- bird -----\tthrombosis_prediction",
    "1293": "SELECT MAX(T1.ANA) FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.CRE < 1.5\t----- bird -----\tthrombosis_prediction",
    "1294": "SELECT T1.ID FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.CRE < 1.5 AND T1.aCL IgA = ( SELECT MAX(aCL IgA) FROM Examination WHERE ID IN ( SELECT ID FROM Laboratory WHERE CRE < 1.5 ) )\t----- bird -----\tthrombosis_prediction",
    "1295": "SELECT COUNT(*) FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.\"T-BIL\" >= 2.0 AND T1.\"ANA Pattern\" LIKE '%P%'\t----- bird -----\tthrombosis_prediction",
    "1296": "SELECT T1.ANA FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.ID = ( SELECT ID FROM Laboratory WHERE T-BIL = ( SELECT MAX(T-BIL) FROM Laboratory WHERE T-BIL < 2.0 ) )\t----- bird -----\tthrombosis_prediction",
    "1297": "SELECT COUNT(*) FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.\"T-CHO\" >= 250 AND T1.KCT = '-'\t----- bird -----\tthrombosis_prediction",
    "1298": "SELECT COUNT(T1.\"ID\") FROM \"Laboratory\" AS T1 INNER JOIN \"Examination\" AS T2 ON T1.\"ID\" = T2.\"ID\" WHERE T1.\"T-CHO\" < 250 AND T2.\"ANA Pattern\" = 'P'\t----- bird -----\tthrombosis_prediction",
    "1299": "SELECT COUNT(DISTINCT T1.ID) FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.TG < 200 AND T1.Symptoms IS NOT NULL\t----- bird -----\tthrombosis_prediction",
    "1300": "SELECT T1.Diagnosis FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.TG = ( SELECT MAX(TG) FROM Laboratory WHERE TG < 200 )\t----- bird -----\tthrombosis_prediction",
    "1301": "SELECT T1.ID FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID INNER JOIN Laboratory AS T3 ON T1.ID = T3.ID WHERE T2.Thrombosis = 0 AND T3.CPK > 250\t----- bird -----\tthrombosis_prediction",
    "1302": "SELECT COUNT(DISTINCT T1.ID) FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.CPK < 250 AND (T1.KCT = '+' OR T1.RVVT = '+' OR T1.LAC = '+')\t----- bird -----\tthrombosis_prediction",
    "1303": "SELECT MIN(T1.Birthday) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.GLU > 180\t----- bird -----\tthrombosis_prediction",
    "1304": "SELECT COUNT(*) FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.GLU < 180 AND T1.Thrombosis = 0\t----- bird -----\tthrombosis_prediction",
    "1305": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Admission = '+' AND T2.WBC BETWEEN 3.5 AND 9.0\t----- bird -----\tthrombosis_prediction",
    "1306": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Diagnosis = 'SLE' AND T2.WBC BETWEEN 3.5 AND 9.0\t----- bird -----\tthrombosis_prediction",
    "1307": "SELECT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE (T2.RBC <= 3.5 OR T2.RBC >= 6.0) AND T1.Admission = '-'\t----- bird -----\tthrombosis_prediction",
    "1308": "SELECT COUNT(*) FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.PLT > 100 AND T2.PLT < 400 AND T1.Diagnosis IS NOT NULL\t----- bird -----\tthrombosis_prediction",
    "1309": "SELECT T1.PLT FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T2.Diagnosis = 'MCTD' AND T1.PLT > 100 AND T1.PLT < 400\t----- bird -----\tthrombosis_prediction",
    "1310": "SELECT AVG(T2.PT) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND T2.PT < 14\t----- bird -----\tthrombosis_prediction",
    "1311": "SELECT COUNT(DISTINCT T1.ID) FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Thrombosis IN (1, 2) AND T2.PT < 14\t----- bird -----\tthrombosis_prediction",
    "1312": "SELECT T2.major_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.first_name = 'Angela' AND T1.last_name = 'Sanders'\t----- bird -----\tstudent_club",
    "1313": "SELECT COUNT(T1.member_id) FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.college = 'College of Engineering'\t----- bird -----\tstudent_club",
    "1314": "SELECT member.first_name, member.last_name FROM member INNER JOIN major ON member.link_to_major = major.major_id WHERE major.department = 'Art and Design Department'\t----- bird -----\tstudent_club",
    "1315": "SELECT COUNT(T1.link_to_member) FROM attendance AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.event_name = 'Women\\'s Soccer'\t----- bird -----\tstudent_club",
    "1316": "SELECT M.phone FROM member AS M INNER JOIN attendance AS A ON M.member_id = A.link_to_member INNER JOIN event AS E ON E.event_id = A.link_to_event WHERE E.event_name = 'Women's Soccer'\t----- bird -----\tstudent_club",
    "1317": "SELECT COUNT(*) FROM attendance AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id INNER JOIN member AS T3 ON T1.link_to_member = T3.member_id WHERE T2.event_name = 'Women\\'s Soccer' AND T3.t_shirt_size = 'Medium'\t----- bird -----\tstudent_club",
    "1318": "SELECT T2.event_name, COUNT(T1.link_to_event) as attendance FROM attendance AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id GROUP BY T1.link_to_event ORDER BY attendance DESC LIMIT 1\t----- bird -----\tstudent_club",
    "1319": "SELECT T1.college FROM major AS T1 INNER JOIN member AS T2 ON T1.major_id = T2.link_to_major WHERE T2.position = 'Vice President'\t----- bird -----\tstudent_club",
    "1320": "SELECT T2.event_name FROM attendance AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id INNER JOIN member AS T3 ON T1.link_to_member = T3.member_id WHERE T3.first_name = 'Maya' AND T3.last_name = 'Mclean'\t----- bird -----\tstudent_club",
    "1321": "SELECT COUNT(T3.event_id) FROM attendance AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id INNER JOIN event AS T3 ON T1.link_to_event = T3.event_id WHERE T2.first_name = 'Sacha' AND T2.last_name = 'Harrison' AND STRFTIME('%Y', T3.event_date) = '2019'\t----- bird -----\tstudent_club",
    "1322": "SELECT COUNT(T1.event_id) FROM event AS T1 INNER JOIN ( SELECT link_to_event FROM attendance GROUP BY link_to_event HAVING COUNT(link_to_member) > 10 ) AS T2 ON T1.event_id = T2.link_to_event WHERE T1.type = 'Meeting'\t----- bird -----\tstudent_club",
    "1323": "SELECT T2.event_name FROM attendance AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id GROUP BY T1.link_to_event HAVING COUNT(*) > 20\t----- bird -----\tstudent_club",
    "1324": "SELECT COUNT(T1.link_to_event) / COUNT(DISTINCT T2.event_name) FROM attendance AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.type = 'Meeting' AND strftime('%Y', T2.event_date) = '2020'\t----- bird -----\tstudent_club",
    "1325": "SELECT expense_description, MAX(cost) FROM expense\t----- bird -----\tstudent_club",
    "1326": "SELECT COUNT(T1.member_id) FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Environmental Engineering'\t----- bird -----\tstudent_club",
    "1327": "SELECT T1.first_name, T1.last_name FROM member AS T1 INNER JOIN attendance AS T2 ON T1.member_id = T2.link_to_member INNER JOIN event AS T3 ON T2.link_to_event = T3.event_id WHERE T3.event_name = 'Laugh Out Loud'\t----- bird -----\tstudent_club",
    "1328": "SELECT T1.last_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Law and Constitutional Studies'\t----- bird -----\tstudent_club",
    "1329": "SELECT T2.county FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T1.first_name = 'Sherri' AND T1.last_name = 'Ramsey'\t----- bird -----\tstudent_club",
    "1330": "SELECT major.college FROM major INNER JOIN member ON major.major_id = member.link_to_major WHERE member.first_name = 'Tyler' AND member.last_name = 'Hewitt'\t----- bird -----\tstudent_club",
    "1331": "SELECT SUM(T1.amount) FROM income AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.position = 'Vice President'\t----- bird -----\tstudent_club",
    "1332": "SELECT spent FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T1.category = 'Food' AND T2.event_name = 'September Meeting'\t----- bird -----\tstudent_club",
    "1333": "SELECT T2.city, T2.state FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T1.position = 'President'\t----- bird -----\tstudent_club",
    "1334": "SELECT T1.first_name || ' ' || T1.last_name AS full_name FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T2.state = 'Illinois'\t----- bird -----\tstudent_club",
    "1335": "SELECT T1.spent FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T1.category = 'Advertisement' AND T2.event_name = 'September Meeting'\t----- bird -----\tstudent_club",
    "1336": "SELECT T2.department FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.last_name IN ('Pierce', 'Guidi')\t----- bird -----\tstudent_club",
    "1337": "SELECT SUM(T1.amount) FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.event_name = 'October Speaker'\t----- bird -----\tstudent_club",
    "1338": "SELECT T2.expense_id, T2.approved FROM event AS T1 INNER JOIN expense AS T2 ON T1.event_id = T2.expense_id WHERE T1.event_name = 'October Meeting' AND T1.event_date = '2019-10-08'\t----- bird -----\tstudent_club",
    "1339": "SELECT AVG(T1.cost) FROM expense AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.first_name = 'Elijah' AND T2.last_name = 'Allen' AND (CAST(strftime('%m', T1.expense_date) AS INTEGER) = 9 OR CAST(strftime('%m', T1.expense_date) AS INTEGER) = 10)\t----- bird -----\tstudent_club",
    "1340": "SELECT (SELECT SUM(T1.spent) FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE STRFTIME('%Y', T2.event_date) = '2019') - (SELECT SUM(T1.spent) FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE STRFTIME('%Y', T2.event_date) = '2020')\t----- bird -----\tstudent_club",
    "1341": "SELECT location FROM event WHERE event_name = 'Spring Budget Review'\t----- bird -----\tstudent_club",
    "1342": "SELECT cost FROM expense WHERE expense_date = '2019-09-04' AND expense_description LIKE '%Posters%'\t----- bird -----\tstudent_club",
    "1343": "SELECT remaining FROM budget WHERE category = 'Food' ORDER BY amount DESC LIMIT 1\t----- bird -----\tstudent_club",
    "1344": "SELECT notes FROM income WHERE source = 'Fundraising' AND date_received = '2019-09-14'\t----- bird -----\tstudent_club",
    "1345": "SELECT COUNT(major_id) FROM major WHERE college = 'College of Humanities and Social Sciences'\t----- bird -----\tstudent_club",
    "1346": "SELECT phone FROM member WHERE first_name = 'Carlo' and last_name = 'Jacobs'\t----- bird -----\tstudent_club",
    "1347": "SELECT T2.county FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T1.first_name = 'Adela' AND T1.last_name = 'O\\'Gallagher'\t----- bird -----\tstudent_club",
    "1348": "SELECT COUNT(T1.budget_id) FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.event_name = 'November Meeting' AND T1.remaining < 0\t----- bird -----\tstudent_club",
    "1349": "SELECT SUM(T1.amount) FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.event_name = 'September Speaker'\t----- bird -----\tstudent_club",
    "1350": "SELECT status FROM event WHERE event_id = ( SELECT link_to_budget FROM expense WHERE expense_description = 'Post Cards, Posters' AND expense_date = '2019-08-20' )\t----- bird -----\tstudent_club",
    "1351": "SELECT T1.major_name FROM major AS T1 INNER JOIN member AS T2 ON T1.major_id = T2.link_to_major WHERE T2.first_name = 'Brent' AND T2.last_name = 'Thomason'\t----- bird -----\tstudent_club",
    "1352": "SELECT COUNT(T2.member_id) FROM major AS T1 INNER JOIN member AS T2 ON T1.major_id = T2.link_to_major WHERE T1.major_name = 'Human Development and Family Studies' AND T2.t_shirt_size = 'Large'\t----- bird -----\tstudent_club",
    "1353": "SELECT T2.type FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T1.first_name = 'Christof' AND T1.last_name = 'Nielson'\t----- bird -----\tstudent_club",
    "1354": "SELECT major.major_name FROM member INNER JOIN major ON member.link_to_major = major.major_id WHERE member.position = 'Vice President'\t----- bird -----\tstudent_club",
    "1355": "SELECT T2.state FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T1.first_name = 'Sacha' AND T1.last_name = 'Harrison'\t----- bird -----\tstudent_club",
    "1356": "SELECT T2.department FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.position = 'President'\t----- bird -----\tstudent_club",
    "1357": "SELECT T1.date_received FROM income AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.first_name = 'Connor' and T2.last_name = 'Hilton' and T1.source = 'Dues'\t----- bird -----\tstudent_club",
    "1358": "SELECT T2.first_name, T2.last_name FROM income AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T1.source = 'Dues' ORDER BY T1.date_received ASC LIMIT 1\t----- bird -----\tstudent_club",
    "1359": "SELECT (SELECT SUM(T1.amount) FROM budget T1 INNER JOIN event T2 ON T1.link_to_event = T2.event_id WHERE T1.category = 'Advertisement' AND T2.event_name = 'Yearly Kickoff') / (SELECT SUM(T1.amount) FROM budget T1 INNER JOIN event T2 ON T1.link_to_event = T2.event_id WHERE T1.category = 'Advertisement' AND T2.event_name = 'October Meeting')\t----- bird -----\tstudent_club",
    "1360": "SELECT (SUM(T1.amount) / (SELECT SUM(amount) FROM budget WHERE link_to_event IN (SELECT event_id FROM event WHERE event_name = 'November Speaker')) * 100) FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T1.category = 'Parking' AND T2.event_name = 'November Speaker'\t----- bird -----\tstudent_club",
    "1361": "SELECT SUM(cost) FROM expense WHERE expense_description = 'Pizza'\t----- bird -----\tstudent_club",
    "1362": "SELECT COUNT(DISTINCT city) FROM zip_code WHERE county = 'Orange County' AND state = 'Virginia'\t----- bird -----\tstudent_club",
    "1363": "SELECT DISTINCT department FROM major WHERE college = 'College of Humanities and Social Sciences'\t----- bird -----\tstudent_club",
    "1364": "SELECT T2.city, T2.county, T2.state FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T1.first_name = 'Amy' AND T1.last_name = 'Firth'\t----- bird -----\tstudent_club",
    "1365": "SELECT T1.expense_description FROM expense AS T1 INNER JOIN budget AS T2 ON T1.link_to_budget = T2.budget_id WHERE T2.remaining = ( SELECT MIN(remaining) FROM budget )\t----- bird -----\tstudent_club",
    "1366": "SELECT T1.first_name, T1.last_name FROM member AS T1 INNER JOIN attendance AS T2 ON T1.member_id = T2.link_to_member INNER JOIN event AS T3 ON T2.link_to_event = T3.event_id WHERE T3.event_name = 'October Meeting'\t----- bird -----\tstudent_club",
    "1367": "SELECT T1.college, COUNT(T2.member_id) as member_count FROM major AS T1 INNER JOIN member AS T2 ON T1.major_id = T2.link_to_major GROUP BY T1.college ORDER BY member_count DESC LIMIT 1\t----- bird -----\tstudent_club",
    "1368": "SELECT T2.major_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.phone = '809-555-3360'\t----- bird -----\tstudent_club",
    "1369": "SELECT T2.event_name, T1.amount FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T1.amount = (SELECT MAX(amount) FROM budget)\t----- bird -----\tstudent_club",
    "1370": "SELECT T1.expense_description FROM expense AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.position = 'Vice President'\t----- bird -----\tstudent_club",
    "1371": "SELECT COUNT(T1.link_to_member) FROM attendance AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.event_name = 'Women's Soccer'\t----- bird -----\tstudent_club",
    "1372": "SELECT T1.date_received FROM income AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.first_name = 'Casey' AND T2.last_name = 'Mason'\t----- bird -----\tstudent_club",
    "1373": "SELECT COUNT(*) FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T2.state = 'Maryland'\t----- bird -----\tstudent_club",
    "1374": "SELECT COUNT(T1.link_to_event) FROM attendance AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.phone = \"954-555-6240\"\t----- bird -----\tstudent_club",
    "1375": "SELECT T1.first_name, T1.last_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.department = 'School of Applied Sciences, Technology and Education'\t----- bird -----\tstudent_club",
    "1376": "SELECT T1.event_name, MAX(T2.spent / T2.amount) FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T1.status = 'Closed'\t----- bird -----\tstudent_club",
    "1377": "SELECT COUNT(member_id) FROM member WHERE position = 'President'\t----- bird -----\tstudent_club",
    "1378": "SELECT MAX(spent) FROM budget\t----- bird -----\tstudent_club",
    "1379": "SELECT COUNT(*) FROM event WHERE type = 'Meeting' AND strftime('%Y', event_date) = '2020'\t----- bird -----\tstudent_club",
    "1380": "SELECT SUM(spent) FROM budget WHERE category = 'Food'\t----- bird -----\tstudent_club",
    "1381": "SELECT T1.first_name, T1.last_name FROM member AS T1 INNER JOIN attendance AS T2 ON T1.member_id = T2.link_to_member GROUP BY T2.link_to_member HAVING COUNT(T2.link_to_event) > 7\t----- bird -----\tstudent_club",
    "1382": "SELECT T3.first_name, T3.last_name FROM event AS T1 INNER JOIN attendance AS T2 ON T1.event_id = T2.link_to_event INNER JOIN member AS T3 ON T2.link_to_member = T3.member_id INNER JOIN major AS T4 ON T3.link_to_major = T4.major_id WHERE T4.major_name = 'Interior Design' AND T1.event_name = 'Community Theater'\t----- bird -----\tstudent_club",
    "1383": "SELECT T1.first_name, T1.last_name FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T2.city = 'Georgetown' AND T2.state = 'South Carolina'\t----- bird -----\tstudent_club",
    "1384": "SELECT COUNT(T1.income_id) FROM income AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.first_name = 'Grant' AND T2.last_name = 'Gilmour'\t----- bird -----\tstudent_club",
    "1385": "SELECT T2.first_name, T2.last_name FROM income AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T1.amount > 40\t----- bird -----\tstudent_club",
    "1386": "SELECT SUM(E.cost) FROM expense AS E INNER JOIN budget AS B ON E.link_to_budget = B.budget_id INNER JOIN event AS EV ON B.link_to_event = EV.event_id WHERE EV.event_name = 'Yearly Kickoff'\t----- bird -----\tstudent_club",
    "1387": "SELECT T1.first_name, T1.last_name FROM member AS T1 INNER JOIN budget AS T2 ON T1.member_id = T2.link_to_event INNER JOIN event AS T3 ON T2.link_to_event = T3.event_id WHERE T3.event_name = 'Yearly Kickoff'\t----- bird -----\tstudent_club",
    "1388": "SELECT T1.first_name, T1.last_name, T2.source, MAX(T2.amount) FROM member AS T1 INNER JOIN income AS T2 ON T1.member_id = T2.link_to_member GROUP BY T1.first_name, T1.last_name, T2.source\t----- bird -----\tstudent_club",
    "1389": "SELECT T1.event_name, MIN(T2.cost) FROM event AS T1 INNER JOIN expense AS T2 ON T1.event_id = T2.expense_id\t----- bird -----\tstudent_club",
    "1390": "SELECT (SUM(T1.spent) / (SELECT SUM(spent) FROM budget)) * 100 FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.event_name = 'Yearly Kickoff'\t----- bird -----\tstudent_club",
    "1391": "SELECT (SELECT COUNT(*) FROM member AS M1 INNER JOIN major AS Maj1 ON M1.link_to_major = Maj1.major_id WHERE Maj1.major_name = 'Finance') / (SELECT COUNT(*) FROM member AS M2 INNER JOIN major AS Maj2 ON M2.link_to_major = Maj2.major_id WHERE Maj2.major_name = 'Physics') AS ratio\t----- bird -----\tstudent_club",
    "1392": "SELECT source, SUM(amount) AS total_amount FROM income WHERE date_received BETWEEN '2019-09-01' AND '2019-09-30' GROUP BY source ORDER BY total_amount DESC LIMIT 1\t----- bird -----\tstudent_club",
    "1393": "SELECT first_name, last_name, email FROM member WHERE position = 'Secretary'\t----- bird -----\tstudent_club",
    "1394": "SELECT COUNT(T1.member_id) FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Physics Teaching'\t----- bird -----\tstudent_club",
    "1395": "SELECT COUNT(T1.link_to_member) FROM attendance AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.event_name = 'Community Theater' AND strftime('%Y', T2.event_date) = '2019'\t----- bird -----\tstudent_club",
    "1396": "SELECT COUNT(T1.link_to_event), T3.major_name FROM attendance AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id INNER JOIN major AS T3 ON T2.link_to_major = T3.major_id WHERE T2.first_name = 'Luisa' AND T2.last_name = 'Guidi'\t----- bird -----\tstudent_club",
    "1397": "SELECT AVG(spent) FROM budget WHERE category = 'Food' AND event_status = 'Closed'\t----- bird -----\tstudent_club",
    "1398": "SELECT T1.event_name FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T2.category = 'Advertisement' ORDER BY T2.spent DESC LIMIT 1\t----- bird -----\tstudent_club",
    "1399": "SELECT COUNT(*) FROM attendance AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id INNER JOIN member AS T3 ON T1.link_to_member = T3.member_id WHERE T3.first_name = 'Maya' AND T3.last_name = 'Mclean' AND T2.event_name = 'Women's Soccer'\t----- bird -----\tstudent_club",
    "1400": "SELECT (SUM(CASE WHEN type = 'Community Service' THEN 1 ELSE 0 END) / CAST(COUNT(event_id) AS FLOAT)) * 100 AS percentage FROM event WHERE event_date LIKE '%2019%'\t----- bird -----\tstudent_club",
    "1401": "SELECT T1.cost FROM expense AS T1 INNER JOIN budget AS T2 ON T1.link_to_budget = T2.budget_id INNER JOIN event AS T3 ON T2.link_to_event = T3.event_id WHERE T1.expense_description = 'Posters' AND T3.event_name = 'September Speaker'\t----- bird -----\tstudent_club",
    "1402": "SELECT t_shirt_size, COUNT(t_shirt_size) AS count FROM member GROUP BY t_shirt_size ORDER BY count DESC LIMIT 1\t----- bird -----\tstudent_club",
    "1403": "SELECT T2.event_name FROM event as T2 WHERE T2.event_id = (SELECT T1.link_to_event FROM budget as T1 WHERE T1.remaining = (SELECT MIN(remaining) FROM budget WHERE remaining < 0 AND event_status = 'Closed'))\t----- bird -----\tstudent_club",
    "1404": "SELECT * FROM table\t----- bird -----\tstudent_club",
    "1405": "SELECT T1.amount, T1.category FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.event_name = 'April Speaker' ORDER BY T1.amount ASC\t----- bird -----\tstudent_club",
    "1406": "SELECT budget_id, MAX(amount) FROM budget WHERE category = 'Food' ORDER BY amount DESC LIMIT 1\t----- bird -----\tstudent_club",
    "1407": "SELECT * FROM budget WHERE category = 'Advertisement' ORDER BY amount DESC LIMIT 3\t----- bird -----\tstudent_club",
    "1408": "SELECT SUM(spent) FROM budget WHERE category = 'Parking'\t----- bird -----\tstudent_club",
    "1409": "SELECT SUM(cost) FROM expense WHERE expense_date = '2019-08-20'\t----- bird -----\tstudent_club",
    "1410": "SELECT T2.first_name, T2.last_name, SUM(T1.cost) FROM expense AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.member_id = \"rec4BLdZHS2Blfp4v\"\t----- bird -----\tstudent_club",
    "1411": "SELECT expense_description FROM expense INNER JOIN member ON member.member_id = expense.link_to_member WHERE member.first_name = 'Sacha' AND member.last_name = 'Harrison'\t----- bird -----\tstudent_club",
    "1412": "SELECT T1.expense_description FROM expense AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.t_shirt_size = 'X-Large'\t----- bird -----\tstudent_club",
    "1413": "SELECT T2.zip FROM expense AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T1.cost < 50\t----- bird -----\tstudent_club",
    "1414": "SELECT T1.major_name FROM major AS T1 INNER JOIN member AS T2 ON T1.major_id = T2.link_to_major WHERE T2.first_name = 'Phillip' AND T2.last_name = 'Cullen'\t----- bird -----\tstudent_club",
    "1415": "SELECT T1.position FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Business'\t----- bird -----\tstudent_club",
    "1416": "SELECT COUNT(*) FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Business' AND T1.t_shirt_size = 'Medium'\t----- bird -----\tstudent_club",
    "1417": "SELECT T2.type FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T1.remaining > 30\t----- bird -----\tstudent_club",
    "1418": "SELECT type FROM event WHERE location = 'MU 215'\t----- bird -----\tstudent_club",
    "1419": "SELECT type FROM event WHERE event_date = '2020-03-24T12:00:00'\t----- bird -----\tstudent_club",
    "1420": "SELECT T1.major_name FROM major AS T1 INNER JOIN member AS T2 ON T1.major_id = T2.link_to_major WHERE T2.position = 'Vice President'\t----- bird -----\tstudent_club",
    "1421": "SELECT (SELECT COUNT(*) FROM member T1 JOIN major T2 ON T1.link_to_major = T2.major_id WHERE T1.position = 'Member' AND T2.major_name = 'Mathematics') * 100.0 / (SELECT COUNT(*) FROM member) AS Percentage\t----- bird -----\tstudent_club",
    "1422": "SELECT type FROM event WHERE location = 'MU 215'\t----- bird -----\tstudent_club",
    "1423": "SELECT COUNT(*) FROM income WHERE amount = 50\t----- bird -----\tstudent_club",
    "1424": "SELECT COUNT(*) FROM member WHERE t_shirt_size = 'X-Large' AND position = 'Member'\t----- bird -----\tstudent_club",
    "1425": "SELECT COUNT(major_id) FROM major WHERE college = 'College of Agriculture and Applied Sciences' AND department = 'School of Applied Sciences, Technology and Education'\t----- bird -----\tstudent_club",
    "1426": "SELECT T1.last_name, T2.department, T2.college FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Environmental Engineering'\t----- bird -----\tstudent_club",
    "1427": "SELECT T1.category FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.location = 'MU 215' AND T2.type = 'Guest Speaker' AND T1.spent = 0\t----- bird -----\tstudent_club",
    "1428": "SELECT T3.city, T3.state FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id INNER JOIN zip_code AS T3 ON T1.zip = T3.zip_code WHERE T2.department = 'Electrical and Computer Engineering Department' AND T1.position = 'Member'\t----- bird -----\tstudent_club",
    "1429": "SELECT event.event_name FROM attendance INNER JOIN event ON attendance.link_to_event = event.event_id INNER JOIN member ON attendance.link_to_member = member.member_id WHERE event.type = 'Social' AND member.position = 'Vice President' AND event.location = '900 E. Washington St.'\t----- bird -----\tstudent_club",
    "1430": "SELECT T2.last_name, T2.position FROM expense AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T1.expense_description = 'Pizza' AND T1.expense_date = '2019-09-10'\t----- bird -----\tstudent_club",
    "1431": "SELECT T2.last_name FROM attendance AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id INNER JOIN event AS T3 ON T1.link_to_event = T3.event_id WHERE T2.position = 'Member' AND T3.event_name = 'Women's Soccer'\t----- bird -----\tstudent_club",
    "1432": "SELECT CAST(SUM(CASE WHEN T2.amount = 50 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM member AS T1 INNER JOIN income AS T2 ON T1.member_id = T2.link_to_member WHERE T1.t_shirt_size = 'Medium'\t----- bird -----\tstudent_club",
    "1433": "SELECT county FROM zip_code WHERE type = 'PO Box'\t----- bird -----\tstudent_club",
    "1434": "SELECT zip_code FROM zip_code WHERE type = 'PO Box' AND county = 'San Juan Municipio' AND state = 'Puerto Rico'\t----- bird -----\tstudent_club",
    "1435": "SELECT event_name FROM event WHERE type = 'Game' AND status = 'Closed' AND event_date BETWEEN '2019-03-15' AND '2020-03-20'\t----- bird -----\tstudent_club",
    "1436": "SELECT T1.link_to_event FROM attendance AS T1 INNER JOIN income AS T2 ON T1.link_to_member = T2.link_to_member WHERE T2.amount > 50\t----- bird -----\tstudent_club",
    "1437": "SELECT T1.member_id, T2.link_to_event FROM member AS T1 INNER JOIN attendance AS T2 ON T1.member_id = T2.link_to_member INNER JOIN event AS T3 ON T2.link_to_event = T3.event_id WHERE T3.event_date BETWEEN '2019-01-10' AND '2019-11-19'\t----- bird -----\tstudent_club",
    "1438": "SELECT major.college FROM major INNER JOIN member ON major.major_id = member.link_to_major WHERE member.first_name = 'Katy' AND member.link_to_major = 'rec1N0upiVLy5esTO'\t----- bird -----\tstudent_club",
    "1439": "SELECT T1.phone FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Business' AND T2.college = 'College of Agriculture and Applied Sciences'\t----- bird -----\tstudent_club",
    "1440": "SELECT T2.email FROM income AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T1.amount > 20 AND T1.date_received BETWEEN '2019-09-10' AND '2019-11-19'\t----- bird -----\tstudent_club",
    "1441": "SELECT COUNT(*) FROM member AS M INNER JOIN major AS MA ON M.link_to_major = MA.major_id WHERE MA.major_name = 'education' AND MA.college = 'College of Education & Human Services'\t----- bird -----\tstudent_club",
    "1442": "SELECT (SUM(CASE WHEN T1.remaining < 0 THEN 1 ELSE 0 END) * 100.0 / COUNT(*)) FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id\t----- bird -----\tstudent_club",
    "1443": "SELECT event_id, location, status FROM event WHERE event_date BETWEEN '2019-11-01' and '2020-03-31'\t----- bird -----\tstudent_club",
    "1444": "SELECT expense_description, (SUM(cost)/COUNT(expense_id)) as average_cost FROM expense GROUP BY expense_description HAVING average_cost > 50\t----- bird -----\tstudent_club",
    "1445": "SELECT first_name || ' ' || last_name AS full_name FROM member WHERE t_shirt_size = 'X-Large'\t----- bird -----\tstudent_club",
    "1446": "SELECT (SUM(CASE WHEN type = 'PO Box' THEN 1 ELSE 0 END) / CAST(COUNT(*) AS FLOAT)) * 100 AS percentage FROM zip_code\t----- bird -----\tstudent_club",
    "1447": "SELECT T2.event_name, T2.location FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T1.remaining > 0\t----- bird -----\tstudent_club",
    "1448": "SELECT T1.event_name, T1.event_date FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event INNER JOIN expense AS T3 ON T2.budget_id = T3.link_to_budget WHERE T3.expense_description = 'Pizza' AND T3.cost > 50 AND T3.cost < 100\t----- bird -----\tstudent_club",
    "1449": "SELECT T2.first_name, T2.last_name, T3.major_name FROM expense AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id INNER JOIN major AS T3 ON T2.link_to_major = T3.major_id WHERE T1.cost > 100\t----- bird -----\tstudent_club",
    "1450": "SELECT * FROM table\t----- bird -----\tstudent_club",
    "1451": "SELECT link_to_member FROM expense WHERE cost = ( SELECT MIN(cost) FROM expense)\t----- bird -----\tstudent_club",
    "1452": "SELECT AVG(T1.amount) FROM income AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.position != 'Member'\t----- bird -----\tstudent_club",
    "1453": "SELECT T2.event_name FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T1.spent < ( SELECT AVG(spent) FROM budget WHERE category = 'Parking' )\t----- bird -----\tstudent_club",
    "1454": "SELECT (SUM(T3.cost) / (SELECT SUM(cost) FROM expense) * 100 FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id INNER JOIN expense AS T3 ON T3.link_to_budget = T1.budget_id WHERE T2.type = 'Game'\t----- bird -----\tstudent_club",
    "1455": "SELECT T1.budget_id, MAX(T2.cost) FROM budget AS T1 INNER JOIN expense AS T2 ON T1.budget_id = T2.link_to_budget WHERE T2.expense_description = 'Water, Cookies'\t----- bird -----\tstudent_club",
    "1456": "SELECT T2.first_name || ' ' || T2.last_name AS full_name, SUM(T1.cost) AS total_spent FROM expense AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id GROUP BY T2.member_id, T2.first_name, T2.last_name ORDER BY total_spent DESC LIMIT 5\t----- bird -----\tstudent_club",
    "1457": "SELECT T1.first_name, T1.last_name, T1.phone FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member WHERE T2.cost > ( SELECT AVG(cost) FROM expense )\t----- bird -----\tstudent_club",
    "1458": "SELECT ABS((SELECT COUNT(*) FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T2.state = 'Maine' AND T1.position = 'Member') / (SELECT COUNT(*) FROM member WHERE position = 'Member') - (SELECT COUNT(*) FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T2.state = 'Vermont' AND T1.position = 'Member') / (SELECT COUNT(*) FROM member WHERE position = 'Member')) * 100\t----- bird -----\tstudent_club",
    "1459": "SELECT major_name, department FROM major INNER JOIN member ON major.major_id=member.link_to_major WHERE member.first_name='Garrett' AND member.last_name='Gerke'\t----- bird -----\tstudent_club",
    "1460": "SELECT T2.first_name, T2.last_name, T1.cost FROM expense AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T1.expense_description = 'Water, Veggie tray, supplies'\t----- bird -----\tstudent_club",
    "1461": "SELECT T1.last_name, T1.phone FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Elementary Education'\t----- bird -----\tstudent_club",
    "1462": "SELECT T1.category, T1.amount FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.event_name = 'January Speaker'\t----- bird -----\tstudent_club",
    "1463": "SELECT T2.event_name FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T1.category = 'Food'\t----- bird -----\tstudent_club",
    "1464": "SELECT T1.first_name, T1.last_name, T2.amount FROM member AS T1 INNER JOIN income AS T2 ON T1.member_id = T2.link_to_member WHERE T2.date_received = '9/9/2019'\t----- bird -----\tstudent_club",
    "1465": "SELECT T2.category FROM expense AS T1 INNER JOIN budget AS T2 ON T1.link_to_budget = T2.budget_id WHERE T1.expense_description LIKE '%Posters%'\t----- bird -----\tstudent_club",
    "1466": "SELECT T1.first_name, T1.last_name, T2.college FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.position = 'Secretary'\t----- bird -----\tstudent_club",
    "1467": "SELECT SUM(T1.spent) AS total_spent, T2.event_name FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T1.category = 'Speaker Gifts' GROUP BY T2.event_name\t----- bird -----\tstudent_club",
    "1468": "SELECT zip_code.city FROM member INNER JOIN zip_code ON member.zip = zip_code.zip_code WHERE member.first_name = 'Garrett' AND member.last_name = 'Girke'\t----- bird -----\tstudent_club",
    "1469": "SELECT T1.first_name || ' ' || T1.last_name AS full_name, T1.position FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T2.zip_code = 28092 AND T2.city = 'Lincolnton' AND T2.state = 'North Carolina'\t----- bird -----\tstudent_club",
    "1470": "SELECT COUNT(DISTINCT T1.GasStationID) FROM gasstations AS T1 INNER JOIN transactions_1k AS T2 ON T1.GasStationID = T2.GasStationID INNER JOIN products AS T3 ON T2.ProductID = T3.ProductID WHERE T1.Country = 'CZE' AND T1.Segment = 'Premium' AND T3.Description = 'Nafta'\t----- bird -----\tdebit_card_specializing",
    "1471": "SELECT (SELECT COUNT(*) FROM customers WHERE Currency = 'EUR') / CAST((SELECT COUNT(*) FROM customers WHERE Currency = 'CZK') AS FLOAT) AS ratio FROM customers LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1472": "SELECT customers.CustomerID FROM customers INNER JOIN yearmonth ON customers.CustomerID = yearmonth.CustomerID WHERE customers.Segment = 'LAM' AND yearmonth.Date BETWEEN '201201' AND '201212' ORDER BY yearmonth.Consumption ASC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1473": "SELECT AVG(T1.Consumption)/12 FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Segment = 'SME' AND T1.Date LIKE '2013%'\t----- bird -----\tdebit_card_specializing",
    "1474": "SELECT T1.CustomerID, MAX(T2.Consumption) FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Currency = 'CZK' AND T2.Date BETWEEN '201101' AND '201112' GROUP BY T1.CustomerID ORDER BY MAX(T2.Consumption) DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1475": "SELECT COUNT(DISTINCT T1.CustomerID) FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Segment = 'KAM' AND T2.Consumption < 30000 AND T2.Date BETWEEN '201201' AND '201212'\t----- bird -----\tdebit_card_specializing",
    "1476": "SELECT (SELECT SUM(T1.Consumption) FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Currency = 'CZK' AND T1.Date BETWEEN '201201' AND '201212') - (SELECT SUM(T1.Consumption) FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Currency = 'EUR' AND T1.Date BETWEEN '201201' AND '201212')\t----- bird -----\tdebit_card_specializing",
    "1477": "SELECT STRFTIME('%Y', T1.Date) AS Year, SUM(T1.Amount) AS TotalGasUse FROM transactions_1k as T1 INNER JOIN customers as T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Currency = 'EUR' GROUP BY Year ORDER BY TotalGasUse DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1478": "SELECT T1.Segment, MIN(T2.Consumption) FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID GROUP BY T1.Segment\t----- bird -----\tdebit_card_specializing",
    "1479": "SELECT SUBSTR(T1.Date,1,4) as Year, SUM(T1.Consumption) as Total_Consumption FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Currency = 'CZK' GROUP BY Year ORDER BY Total_Consumption DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1480": "SELECT y.Date, MAX(y.Consumption) FROM customers AS c INNER JOIN yearmonth AS y ON c.CustomerID = y.CustomerID WHERE c.Segment = 'SME' AND substr(y.Date, 1, 4) = '2013'\t----- bird -----\tdebit_card_specializing",
    "1481": "SELECT T1.Segment, T2.Segment, ABS(SUM(T1.Consumption)/COUNT(T1.CustomerID) - SUM(T2.Consumption)/COUNT(T2.CustomerID)) AS Difference FROM (SELECT CustomerID, Segment, SUM(Consumption) FROM yearmonth INNER JOIN customers ON yearmonth.CustomerID = customers.CustomerID WHERE SUBSTR(Date, 1, 4) = '2013' AND Currency = 'CZK' AND CustomerID IN (SELECT CustomerID FROM customers WHERE Segment = 'SME' OR Segment = 'LAM' OR Segment = 'KAM') GROUP BY CustomerID) AS T1 CROSS JOIN (SELECT CustomerID, Segment, SUM(Consumption) FROM yearmonth INNER JOIN customers ON yearmonth.CustomerID = customers.CustomerID WHERE SUBSTR(Date, 1, 4) = '2013' AND Currency = 'CZK' AND CustomerID IN (SELECT CustomerID FROM customers WHERE Segment = 'SME' OR Segment = 'LAM' OR Segment = 'KAM') GROUP BY CustomerID) AS T2 WHERE T1.Segment != T2.Segment GROUP BY T1.Segment, T2.Segment.\t----- bird -----\tdebit_card_specializing",
    "1482": "SELECT T1.Segment, ((T2.TotalConsumption - T1.TotalConsumption) / T1.TotalConsumption) * 100 as PercentageIncrease FROM (SELECT customers.Segment, SUM(yearmonth.Consumption) as TotalConsumption FROM customers JOIN yearmonth ON customers.CustomerID = yearmonth.CustomerID WHERE customers.Currency = 'EUR' AND SUBSTR(yearmonth.Date, 1, 4) = '2012' GROUP BY customers.Segment) as T1 JOIN (SELECT customers.Segment, SUM(yearmonth.Consumption) as TotalConsumption FROM customers JOIN yearmonth ON customers.CustomerID = yearmonth.CustomerID WHERE customers.Currency = 'EUR' AND SUBSTR(yearmonth.Date, 1, 4) = '2013' GROUP BY customers.Segment) as T2 ON T1.Segment = T2.Segment ORDER BY PercentageIncrease DESC\t----- bird -----\tdebit_card_specializing",
    "1483": "SELECT SUM(Consumption) FROM yearmonth WHERE CustomerID = 6 AND Date BETWEEN '201308' AND '201311'\t----- bird -----\tdebit_card_specializing",
    "1484": "SELECT (SELECT COUNT(*) FROM gasstations WHERE Segment='Discount' AND Country='CZE') - (SELECT COUNT(*) FROM gasstations WHERE Segment='Discount' AND Country='SVK') AS More_Discount_Gas_Stations\t----- bird -----\tdebit_card_specializing",
    "1485": "SELECT (SELECT Consumption FROM yearmonth WHERE Date = '201304' AND CustomerID = 7) - (SELECT Consumption FROM yearmonth WHERE Date = '201304' AND CustomerID = 5) As Difference\t----- bird -----\tdebit_card_specializing",
    "1486": "SELECT (SELECT COUNT(*) FROM customers WHERE Segment = 'SME' AND Currency = 'CZK') - (SELECT COUNT(*) FROM customers WHERE Segment = 'SME' AND Currency = 'EUR') AS More_SMEs_CZK_than_EUR\t----- bird -----\tdebit_card_specializing",
    "1487": "SELECT T1.CustomerID, MAX(T2.Consumption) FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Segment = 'LAM' AND T1.Currency = 'EUR' AND T2.Date = '201310'\t----- bird -----\tdebit_card_specializing",
    "1488": "SELECT T1.CustomerID, MAX(T2.Consumption) FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Segment = 'KAM'\t----- bird -----\tdebit_card_specializing",
    "1489": "SELECT SUM(yearmonth.Consumption) FROM customers JOIN yearmonth ON customers.CustomerID = yearmonth.CustomerID WHERE customers.Segment = 'KAM' AND yearmonth.Date = '201305'\t----- bird -----\tdebit_card_specializing",
    "1490": "SELECT ((SELECT COUNT(DISTINCT T1.CustomerID) FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Segment = 'LAM' AND T2.Consumption > 46.73) / (SELECT COUNT(DISTINCT CustomerID) FROM customers WHERE Segment = 'LAM')) * 100 AS percentage\t----- bird -----\tdebit_card_specializing",
    "1491": "SELECT Country, COUNT(*) as Value_for_money_gas_stations FROM gasstations WHERE Segment = 'Value for money' GROUP BY Country\t----- bird -----\tdebit_card_specializing",
    "1492": "SELECT     (CAST(COUNT(*) FILTER (WHERE Currency = 'EUR') AS FLOAT) / COUNT(*)) * 100 AS percentageFROM customersWHERE Segment = 'KAM'\t----- bird -----\tdebit_card_specializing",
    "1493": "SELECT (SELECT COUNT(*) FROM yearmonth WHERE date = '201202' AND consumption > 528.3) * 100.0 / (SELECT COUNT(*) FROM yearmonth WHERE date = '201202')\t----- bird -----\tdebit_card_specializing",
    "1494": "SELECT                 CAST((SELECT COUNT(*) FROM gasstations WHERE Country = 'SVK' AND Segment = 'Premium') AS REAL) /                 CAST((SELECT COUNT(*) FROM gasstations WHERE Country = 'SVK') AS REAL) * 100 AS Percentage              FROM gasstations              LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1495": "SELECT CustomerID, SUM(Consumption) as TotalConsumption FROM yearmonth WHERE Date = '201309' GROUP BY CustomerID ORDER BY TotalConsumption DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1496": "SELECT Segment, MIN(Consumption) FROM customers INNER JOIN yearmonth ON customers.CustomerID = yearmonth.CustomerID WHERE Date = '201309' GROUP BY Segment ORDER BY Consumption LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1497": "SELECT T1.CustomerID FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Segment = 'SME' AND T2.Date = '201206' ORDER BY T2.Consumption ASC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1498": "SELECT MAX(Consumption) FROM yearmonth WHERE Date LIKE '2012%'\t----- bird -----\tdebit_card_specializing",
    "1499": "SELECT MAX(SUM(T1.Consumption)/12) FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Currency = 'EUR' GROUP BY strftime('%Y-%m', T1.Date)\t----- bird -----\tdebit_card_specializing",
    "1500": "SELECT DISTINCT products.Description FROM products INNER JOIN transactions_1k ON products.ProductID = transactions_1k.ProductID WHERE transactions_1k.Date LIKE '2013-09%'\t----- bird -----\tdebit_card_specializing",
    "1501": "SELECT DISTINCT T1.Country FROM gasstations AS T1 INNER JOIN transactions_1k AS T2 ON T1.GasStationID = T2.GasStationID WHERE T2.Date LIKE '2013-06%'\t----- bird -----\tdebit_card_specializing",
    "1502": "SELECT DISTINCT T2.ChainID FROM customers AS T1 INNER JOIN transactions_1k AS T3 ON T1.CustomerID = T3.CustomerID INNER JOIN gasstations AS T2 ON T3.GasStationID = T2.GasStationID WHERE T1.Currency = 'EUR'\t----- bird -----\tdebit_card_specializing",
    "1503": "SELECT products.Description FROM transactions_1k INNER JOIN products ON transactions_1k.ProductID = products.ProductID INNER JOIN customers ON transactions_1k.CustomerID = customers.CustomerID WHERE customers.Currency = 'EUR'\t----- bird -----\tdebit_card_specializing",
    "1504": "SELECT AVG(Price) FROM transactions_1k WHERE Date LIKE '2012-01-%'\t----- bird -----\tdebit_card_specializing",
    "1505": "SELECT COUNT(DISTINCT T1.CustomerID) FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Currency = 'EUR' AND T2.Consumption > 1000\t----- bird -----\tdebit_card_specializing",
    "1506": "SELECT T3.Description FROM gasstations AS T1 INNER JOIN transactions_1k AS T2 ON T1.GasStationID = T2.GasStationID INNER JOIN products AS T3 ON T2.ProductID = T3.ProductID WHERE T1.Country = 'CZE'\t----- bird -----\tdebit_card_specializing",
    "1507": "SELECT DISTINCT T1.Time FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T2.ChainID = 11\t----- bird -----\tdebit_card_specializing",
    "1508": "SELECT COUNT(T1.TransactionID) FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T2.Country = 'CZE' and T1.Price > 1000\t----- bird -----\tdebit_card_specializing",
    "1509": "SELECT COUNT(T2.TransactionID) FROM gasstations AS T1 INNER JOIN transactions_1k AS T2 ON T1.GasStationID = T2.GasStationID WHERE T1.Country = 'CZE' AND T2.Date > '2012-01-01'\t----- bird -----\tdebit_card_specializing",
    "1510": "SELECT SUM(T2.Price) / COUNT(T2.TransactionID) FROM gasstations AS T1 INNER JOIN transactions_1k AS T2 ON T1.GasStationID = T2.GasStationID WHERE T1.Country = 'CZE'\t----- bird -----\tdebit_card_specializing",
    "1511": "SELECT AVG(T2.Price) FROM customers AS T1 INNER JOIN transactions_1k AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Currency = 'EUR'\t----- bird -----\tdebit_card_specializing",
    "1512": "SELECT CustomerID, SUM(Price) as Total_Paid FROM transactions_1k WHERE Date = '2012-08-25' GROUP BY CustomerID ORDER BY Total_Paid DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1513": "SELECT T1.Country FROM gasstations T1 JOIN transactions_1k T2 ON T1.GasStationID = T2.GasStationID WHERE T2.Date = '2012-08-25' ORDER BY T2.Time LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1514": "SELECT T1.Currency FROM customers AS T1 INNER JOIN transactions_1k AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Date = '2012-08-24' AND T2.Time = '16:25:00'\t----- bird -----\tdebit_card_specializing",
    "1515": "SELECT T1.Segment FROM customers AS T1 INNER JOIN transactions_1k AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Date = '2012-08-23' AND T2.Time = '21:20:00'\t----- bird -----\tdebit_card_specializing",
    "1516": "SELECT COUNT(T1.TransactionID) FROM transactions_1k AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Currency = 'EUR' AND T1.Date = '2012-08-26' AND T1.Time < '13:00:00'\t----- bird -----\tdebit_card_specializing",
    "1517": "SELECT Segment FROM customers WHERE CustomerID = (SELECT CustomerID FROM yearmonth ORDER BY Date ASC LIMIT 1)\t----- bird -----\tdebit_card_specializing",
    "1518": "SELECT T2.Country FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T1.Date = '2012-08-24' AND T1.Time = '12:42:00'\t----- bird -----\tdebit_card_specializing",
    "1519": "SELECT ProductID FROM transactions_1k WHERE Date = '2012-08-23' AND Time = '21:20:00'\t----- bird -----\tdebit_card_specializing",
    "1520": "SELECT Date, Consumption FROM yearmonth WHERE CustomerID = ( SELECT CustomerID FROM transactions_1k WHERE Price = 124.05 AND Date = '2012-08-24' ) AND Date LIKE '201201%'\t----- bird -----\tdebit_card_specializing",
    "1521": "SELECT COUNT(*) FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T1.Date = '2012-08-26' AND T1.Time BETWEEN '08:00:00' AND '09:00:00' AND T2.Country = 'CZE'\t----- bird -----\tdebit_card_specializing",
    "1522": "SELECT T2.Currency FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Consumption = 214582.17 AND T1.Date = '201306'\t----- bird -----\tdebit_card_specializing",
    "1523": "SELECT * FROM table\t----- bird -----\tdebit_card_specializing",
    "1524": "SELECT T1.Currency FROM customers AS T1 INNER JOIN transactions_1k AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Price = 548.4 AND T2.Date = '2012-08-24'\t----- bird -----\tdebit_card_specializing",
    "1525": "SELECT COUNT(DISTINCT T1.CustomerID) * 100.0 / (SELECT COUNT(DISTINCT CustomerID) FROM transactions_1k WHERE Date = '2012-08-25') AS percentage FROM customers AS T1 INNER JOIN transactions_1k AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Currency = 'EUR' AND T2.Date = '2012-08-25'\t----- bird -----\tdebit_card_specializing",
    "1526": "SELECT (Consumption_2012 - Consumption_2013) / Consumption_2012 AS Decrease_Rate FROM (SELECT MAX(CASE WHEN Date LIKE '2012%' THEN Consumption ELSE NULL END) AS Consumption_2012, MAX(CASE WHEN Date LIKE '2013%' THEN Consumption ELSE NULL END) AS Consumption_2013 FROM yearmonth WHERE CustomerID = (SELECT CustomerID FROM transactions_1k WHERE Price = 634.8 AND Date = '2012-08-25') AND (Date LIKE '2012%' OR Date LIKE '2013%'))\t----- bird -----\tdebit_card_specializing",
    "1527": "SELECT GasStationID, SUM(Amount*Price) AS TotalRevenue FROM transactions_1k GROUP BY GasStationID ORDER BY TotalRevenue DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1528": "SELECT CAST(COUNT(*) AS FLOAT) / (SELECT COUNT(*) FROM gasstations WHERE Country = 'SVK') * 100 AS percentage FROM gasstations WHERE Country = 'SVK' AND Segment = 'Premium'\t----- bird -----\tdebit_card_specializing",
    "1529": "SELECT SUM(Price) FROM transactions_1k WHERE CustomerID = 38508 AND Date = '201201'\t----- bird -----\tdebit_card_specializing",
    "1530": "SELECT T2.Description FROM transactions_1k AS T1 INNER JOIN products AS T2 ON T1.ProductID = T2.ProductID GROUP BY T2.ProductID ORDER BY SUM(T1.Amount) DESC LIMIT 5\t----- bird -----\tdebit_card_specializing",
    "1531": "SELECT T1.CustomerID, SUM(T2.Price)/SUM(T2.Amount) AS AvgPricePerItem, T1.Currency FROM customers AS T1 INNER JOIN transactions_1k AS T2 ON T1.CustomerID = T2.CustomerID GROUP BY T1.CustomerID, T1.Currency ORDER BY SUM(T2.Price) DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1532": "SELECT T1.Country FROM gasstations AS T1 INNER JOIN transactions_1k AS T2 ON T1.GasStationID = T2.GasStationID WHERE T2.ProductID = 2 ORDER BY T2.Price DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1533": "SELECT T1.CustomerID, T1.Consumption FROM yearmonth AS T1 WHERE T1.Date LIKE '201208%' AND T1.CustomerID IN ( SELECT CustomerID FROM transactions_1k WHERE ProductID = 5 AND (Price / Amount) > 29.00 )\t----- bird -----\tdebit_card_specializing"
}